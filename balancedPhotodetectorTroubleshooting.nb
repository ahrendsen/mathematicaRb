(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    388686,       7481]
NotebookOptionsPosition[    380304,       7337]
NotebookOutlinePosition[    380651,       7352]
CellTagsIndexPosition[    380608,       7349]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Set Directories", "Section",
 CellChangeTimes->{{3.7403991978916492`*^9, 
  3.7403992038911967`*^9}},ExpressionUUID->"8fdb9166-14af-4c6a-8cd5-\
f22126e1048e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"raspberryPi", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Z:\>\"", ",", "\"\<RbData\>\"", ",", "\"\<2017-10-20\>\""}],
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dropBoxfolder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<C:\>\"", ",", "\"\<Users\>\"", ",", "\"\<kahrendsen2\>\"", ",", 
      "\"\<Dropbox\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataFolder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<00School\>\"", ",", "\"\<research\>\"", ",", "\"\<DataRuns\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"folder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"dropBoxfolder", ",", "dataFolder"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "folder", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileNames", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"folder", ",", "\"\<17-11-15_BalancedPhotoDetector\>\""}], 
      "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"names", "=", 
     RowBox[{"FileNames", "[", 
      RowBox[{"StringExpression", "[", 
       RowBox[{
       "\"\<POL\>\"", ",", "__", ",", "\"\<_\>\"", ",", "__", ",", 
        "DigitCharacter", ",", "\"\<.dat\>\""}], "]"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"names", "=", 
  RowBox[{"FileNames", "[", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7150122777567425`*^9, 3.7150122840119996`*^9}, {
   3.7150123261726923`*^9, 3.7150123303405285`*^9}, {3.7150124359734163`*^9, 
   3.715012479646136*^9}, {3.7150128069518833`*^9, 3.715012818751912*^9}, {
   3.7150129667449007`*^9, 3.7150129819452457`*^9}, {3.7150130364173155`*^9, 
   3.7150131715294724`*^9}, {3.7150133166513133`*^9, 
   3.7150133179692016`*^9}, {3.7150133480254803`*^9, 3.715013381257094*^9}, {
   3.715013414513726*^9, 3.715013414978044*^9}, {3.7150135356901937`*^9, 
   3.715013558972037*^9}, {3.7150136509316206`*^9, 3.7150136664751987`*^9}, {
   3.715013710956468*^9, 3.715013751796263*^9}, {3.7150138363427997`*^9, 
   3.715013845285886*^9}, {3.7150139033013687`*^9, 3.715013907556264*^9}, {
   3.7150146812816114`*^9, 3.7150146815527964`*^9}, {3.7150164533544197`*^9, 
   3.7150165176511755`*^9}, {3.7150165661391735`*^9, 3.715016634939995*^9}, {
   3.7150167998842473`*^9, 3.715016921549045*^9}, {3.7150169518296175`*^9, 
   3.715016979725424*^9}, {3.7150170467736287`*^9, 3.715017105548256*^9}, {
   3.7150948951139283`*^9, 3.715094911169752*^9}, {3.7150953668023195`*^9, 
   3.7150953669304056`*^9}, {3.71509547147389*^9, 3.7150954720903053`*^9}, {
   3.7197658839029007`*^9, 3.7197659070372405`*^9}, {3.7197659457708945`*^9, 
   3.7197660290811825`*^9}, {3.7197661229894333`*^9, 3.719766331593191*^9}, {
   3.71976639842731*^9, 3.7197664022978144`*^9}, {3.7197665231443744`*^9, 
   3.719766607216653*^9}, {3.7197666562423406`*^9, 3.719766774943578*^9}, {
   3.7197668095833435`*^9, 3.719766845426547*^9}, {3.7197668922256002`*^9, 
   3.719766973687598*^9}, {3.7197670229320755`*^9, 3.7197671748575573`*^9}, {
   3.719767211001157*^9, 3.719767279392329*^9}, {3.7197673437851367`*^9, 
   3.719767345919751*^9}, {3.71976739892021*^9, 3.719767418071865*^9}, {
   3.7197676091769943`*^9, 3.7197676098816247`*^9}, {3.719767873688553*^9, 
   3.7197678740479684`*^9}, {3.719767906943899*^9, 3.719767953359387*^9}, {
   3.7197681782323227`*^9, 3.7197681846884727`*^9}, 3.7404000748679876`*^9, {
   3.740400159981758*^9, 
   3.7404001631859016`*^9}},ExpressionUUID->"7a3df993-5a72-4981-9c7c-\
d8eb769d8d65"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.740400173163351*^9, 
  3.7404001740906076`*^9}},ExpressionUUID->"2f883c56-455b-493d-9cdb-\
283a9ab0fcfc"],

Cell[CellGroupData[{

Cell["Mueller Matrix", "Subsection",
 CellChangeTimes->{{3.7404003749071507`*^9, 
  3.7404003790348444`*^9}},ExpressionUUID->"64cf3db2-b28c-4603-afa6-\
c5b4769bd9f6"],

Cell[CellGroupData[{

Cell["\<\
According to a Chp 22 in an optics handbook (chapter authored by Russell A. \
Chipman), We have the following mueller matrix for a general retarder\
\>", "Subsubsection",
 CellChangeTimes->{{3.7150992515927672`*^9, 3.715099258910709*^9}, {
  3.715099430239667*^9, 
  3.715099492743205*^9}},ExpressionUUID->"6ce49fd1-71e4-4c14-b475-\
a45a202c5b57"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "The", " ", "retardance", " ", "is", " ", "entered", " ", "as", " ", "a", 
     " ", 
     RowBox[{"fraction", ".", " ", "For"}], " ", "example"}], ",", " ", 
    RowBox[{
     RowBox[{"a", " ", "half"}], "-", 
     RowBox[{
     "wave", " ", "plate", " ", "will", " ", "be", " ", "enterered", " ", 
      "as", " ", 
      RowBox[{"1", "/", "2"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LR", "[", 
     RowBox[{"\[Theta]fast_", ",", "retardance_"}], "]"}], ":=", 
    RowBox[{"(", GridBox[{
       {"1", "0", "0", "0"},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Theta]fast"}], "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", "\[Theta]fast"}], "]"}], "^", "2"}], 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}]}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]fast"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Theta]fast"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "\[Theta]fast"}], "]"}]}], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]fast"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Theta]fast"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"2", "\[Theta]fast"}], "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Theta]fast"}], "]"}], 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}], "^", "2"}]}]}], 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]fast"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]fast"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]fast"}], "]"}]}], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}
      }], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LRzero", "[", "\[Delta]_", "]"}], ":=", 
     RowBox[{"(", GridBox[{
        {"1", "0", "0", "0"},
        {"0", "1", "0", "0"},
        {"0", "0", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}], 
         RowBox[{"Sin", "[", "\[Delta]", "]"}]},
        {"0", "0", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Delta]", "]"}]}], 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LPzero", "=", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", GridBox[{
         {"1", "1", "0", "0"},
         {"1", "1", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MuellerRotation", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{"(", GridBox[{
       {"1", "0", "0", "0"},
       {"0", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]"}], "]"}]}], "0"},
       {"0", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}], "0"},
       {"0", "0", "0", "1"}
      }], ")"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.715099506417509*^9, 3.7150999047075634`*^9}, {
  3.7151000510035377`*^9, 3.715100065626396*^9}, {3.7151008809847164`*^9, 
  3.7151008942303023`*^9}, {3.7151010976222024`*^9, 3.7151011788385115`*^9}, {
  3.7151023376505847`*^9, 3.715102362560378*^9}, {3.7151081233758526`*^9, 
  3.715108128489396*^9}, {3.715175328800923*^9, 3.715175370881539*^9}, {
  3.715604651474867*^9, 3.71560474553402*^9}, {3.7156048869142723`*^9, 
  3.7156048888567533`*^9}, {3.715604984035781*^9, 3.7156049867190228`*^9}, {
  3.715607609265271*^9, 3.715607614924973*^9}, {3.7197494736161304`*^9, 
  3.719749473768295*^9}, {3.7404009076950207`*^9, 
  3.7404009427835865`*^9}},ExpressionUUID->"d8f5867c-2baf-4dcc-a53f-\
928c82e9a7c2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discreet Fourier Transform", "Subsection",
 CellChangeTimes->{{3.7404002943310475`*^9, 
  3.7404003000584726`*^9}},ExpressionUUID->"82f97700-236a-404c-b624-\
ee47239caac8"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Discreet", " ", "Fourier", " ", "Transform", " ", "for", " ", "the", " ", 
   "Cos", " ", "Function"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7404002328936615`*^9, 
  3.7404002496921177`*^9}},ExpressionUUID->"706830fc-c842-4eba-a315-\
f5b3c8a0121b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DFTC", "[", 
     RowBox[{"list_", ",", "rev_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "numItems", ",", "i", ",", "k", ",", "j", ",", "returnList", ",", 
        "intensity"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"returnList", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"numItems", "=", 
        RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "0"}], ",", 
         RowBox[{"j", "<", 
          RowBox[{"numItems", "/", "2"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"returnList", ",", "0"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "<=", "numItems"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"intensity", "=", 
           RowBox[{"list", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", " ", "[", 
           RowBox[{
            RowBox[{"i", "=", "0"}], ",", 
            RowBox[{"i", "<", 
             RowBox[{"numItems", "/", "2"}]}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"i", "\[Equal]", "0"}], " ", "||", 
                RowBox[{"i", "\[Equal]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"numItems", "/", "2"}], "-", "1"}], ")"}]}]}], ",",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"returnList", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
                  RowBox[{
                   FractionBox["1", "numItems"], "*", "intensity", "*", 
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    "2", "*", "\[Pi]", " ", "*", "i", " ", "*", "rev", "*", 
                    " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"k", "-", "1"}], ")"}], "numItems"]}], 
                    "]"}]}]}]}], ";"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"returnList", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
                  RowBox[{
                   FractionBox["2", "numItems"], "*", "intensity", "*", 
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    "2", "*", "\[Pi]", " ", "*", "i", "*", " ", "rev", " ", 
                    "*", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"k", "-", "1"}], ")"}], "numItems"]}], 
                    "]"}]}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "returnList"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Discreet", " ", "Fourier", " ", "Transform", " ", "for", " ", "the", " ", 
    "Sin", " ", "Function"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DFTS", "[", 
    RowBox[{"list_", ",", "rev_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "numItems", ",", "i", ",", "k", ",", "j", ",", "error", ",", 
       "returnList", ",", "intensity", ",", "errors"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"returnList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"error", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"numItems", "=", 
       RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "0"}], ",", 
        RowBox[{"j", "<", 
         RowBox[{"numItems", "/", "2"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"returnList", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"errors", ",", "0"}], "]"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<=", "numItems"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"intensity", "=", 
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", " ", "[", 
          RowBox[{
           RowBox[{"k", "=", "0"}], ",", 
           RowBox[{"k", "<", 
            RowBox[{"numItems", "/", "2"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", "\[Equal]", "0"}], " ", "||", 
               RowBox[{"k", "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"numItems", "/", "2"}], "-", "1"}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"returnList", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["1", "numItems"], "*", "intensity", "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                   "2", "*", "\[Pi]", " ", "*", "k", " ", "*", "rev", "*", 
                    " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], 
                   "]"}]}]}]}], ";"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"returnList", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["2", "numItems"], "*", "intensity", "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                   "2", "*", "\[Pi]", " ", "*", "k", "*", " ", "rev", " ", 
                    "*", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], 
                   "]"}]}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<=", "numItems"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"intensity", "=", 
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", " ", "[", 
          RowBox[{
           RowBox[{"k", "=", "0"}], ",", 
           RowBox[{"k", "<", 
            RowBox[{"numItems", "/", "2"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", "\[Equal]", "0"}], " ", "||", 
               RowBox[{"k", "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"numItems", "/", "2"}], "-", "1"}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"returnList", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["1", "numItems"], "*", "intensity", "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                   "2", "*", "\[Pi]", " ", "*", "k", " ", "*", "rev", "*", 
                    " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], 
                   "]"}]}]}]}], ";"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"returnList", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["2", "numItems"], "*", "intensity", "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                   "2", "*", "\[Pi]", " ", "*", "k", "*", " ", "rev", " ", 
                    "*", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], 
                   "]"}]}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "returnList"}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DFT", "[", 
    RowBox[{"list_", ",", "rev_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DFTS", "[", 
      RowBox[{"list", ",", "rev"}], "]"}], ",", 
     RowBox[{"DFTC", "[", 
      RowBox[{"list", ",", "rev"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7404002526062603`*^9, 
  3.7404002647818313`*^9}},ExpressionUUID->"394ef536-da7c-475c-b72e-\
6df320894a32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other Functions", "Subsection",
 CellChangeTimes->{{3.740400306283183*^9, 
  3.740400308010805*^9}},ExpressionUUID->"6be471ee-79e6-47c7-ab7e-\
ca6e053e34aa"],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateListOfFileNames", "[", 
    RowBox[{"prefix_", ",", "date_", ",", "runtimes_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", "fileNames"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fileNames", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "runtimes", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"fileNames", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"prefix", ",", "date", ",", "\"\<_\>\"", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"runtimes", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", "\"\<.dat\>\""}], 
           "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "fileNames"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetFileHeaderInfo", "[", "dataFileName_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rawFile", ",", "data", ",", "association", ",", "k"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rawFile", "=", 
        RowBox[{"Import", "[", "dataFileName", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"association", "=", 
        RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringPart", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rawFile", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "\[Equal]", 
          "\"\<#\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"association", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"association", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"rawFile", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"rawFile", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "association"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ErrorListPlot2", " ", "is", " ", "a", " ", "convenience", " ", 
     RowBox[{"function", ".", " ", "It"}], " ", "accepts", " ", "as", " ", 
     "an", " ", "argument", " ", "a", " ", "list", " ", "of", " ", 
     RowBox[{"lists", ".", " ", "The"}], " ", "first", " ", "level", " ", 
     "of", " ", "lists", " ", "can", " ", "have", " ", "any", " ", 
     RowBox[{"length", ".", " ", "The"}], " ", "second", " ", "level", " ", 
     "should", " ", "have", " ", "3", " ", 
     RowBox[{"elements", ".", " ", "The"}], " ", "first", " ", "element", " ",
      "is", " ", "the", " ", "independent", " ", "variable"}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", 
     "dependent", " ", "variable"}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "third", " ", "element", " ", "is", " ", "the", 
     " ", "error", " ", "associated", " ", "with", " ", "the", " ", 
     "depenedent", " ", 
     RowBox[{"variable", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ErrorListPlot2", "[", "data_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "orderedPairs", ",", "dataT", ",", "errorValues", ",", "errorBars", ",",
        "errorBarData", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dataT", "=", 
       RowBox[{"Transpose", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"orderedPairs", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Drop", "[", 
         RowBox[{"dataT", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"errorValues", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"dataT", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"errorBars", "=", 
       RowBox[{
        RowBox[{"ErrorBar", "[", "errorValues", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"errorBarData", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "data", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"errorBarData", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"orderedPairs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"ErrorBar", "[", 
              RowBox[{
               RowBox[{"errorValues", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ErrorListPlot", "[", "errorBarData", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFileDataset", "[", "dataFileName_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawFile", ",", "headerStrippedData", ",", "columnHeaderLineNumber", 
       ",", "lastColumnToImport", ",", "j", ",", "k", ",", "ass", ",", 
       "tabularData", ",", "ds", ",", "rbAbsorptionRef", ",", 
       "rbAbsorptionPro"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rawFile", "=", 
       RowBox[{"Import", "[", "dataFileName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringPart", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"rawFile", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "\[Equal]", 
         "\"\<#\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"headerStrippedData", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"rawFile", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", "All"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tabularData", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "2"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "headerStrippedData", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"headerStrippedData", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ass", "=", 
            RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k", "=", "1"}], ",", 
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", 
               RowBox[{"headerStrippedData", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ass", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"ass", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"headerStrippedData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
                  RowBox[{
                   RowBox[{"headerStrippedData", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"tabularData", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"tabularData", ",", "ass"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ds", " ", "=", 
       RowBox[{"Dataset", "[", "tabularData", "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7150122777567425`*^9, 3.7150122840119996`*^9}, {
   3.7150123261726923`*^9, 3.7150123303405285`*^9}, {3.7150124359734163`*^9, 
   3.715012479646136*^9}, {3.7150128069518833`*^9, 3.715012818751912*^9}, {
   3.7150129667449007`*^9, 3.7150129819452457`*^9}, {3.7150130364173155`*^9, 
   3.7150131715294724`*^9}, {3.7150133166513133`*^9, 
   3.7150133179692016`*^9}, {3.7150133480254803`*^9, 3.715013381257094*^9}, {
   3.715013414513726*^9, 3.715013414978044*^9}, {3.7150135356901937`*^9, 
   3.715013558972037*^9}, {3.7150136509316206`*^9, 3.7150136664751987`*^9}, {
   3.715013710956468*^9, 3.715013751796263*^9}, {3.7150138363427997`*^9, 
   3.715013845285886*^9}, {3.7150139033013687`*^9, 3.715013907556264*^9}, {
   3.7150146812816114`*^9, 3.7150146815527964`*^9}, {3.7150164533544197`*^9, 
   3.7150165176511755`*^9}, {3.7150165661391735`*^9, 3.715016634939995*^9}, {
   3.7150167998842473`*^9, 3.715016921549045*^9}, {3.7150169518296175`*^9, 
   3.715016979725424*^9}, {3.7150170467736287`*^9, 3.715017105548256*^9}, {
   3.7150948951139283`*^9, 3.715094911169752*^9}, {3.7150953668023195`*^9, 
   3.7150953669304056`*^9}, {3.71509547147389*^9, 3.7150954720903053`*^9}, {
   3.7197658839029007`*^9, 3.7197659070372405`*^9}, {3.7197659457708945`*^9, 
   3.7197660290811825`*^9}, {3.7197661229894333`*^9, 3.719766331593191*^9}, {
   3.71976639842731*^9, 3.7197664022978144`*^9}, {3.7197665231443744`*^9, 
   3.719766607216653*^9}, {3.7197666562423406`*^9, 3.719766774943578*^9}, {
   3.7197668095833435`*^9, 3.719766845426547*^9}, {3.7197668922256002`*^9, 
   3.719766973687598*^9}, {3.7197670229320755`*^9, 3.7197671748575573`*^9}, {
   3.719767211001157*^9, 3.719767279392329*^9}, {3.7197673437851367`*^9, 
   3.719767345919751*^9}, {3.71976739892021*^9, 3.719767418071865*^9}, {
   3.7197676091769943`*^9, 3.7197676098816247`*^9}, {3.719767873688553*^9, 
   3.7197678740479684`*^9}, {3.719767906943899*^9, 3.719767953359387*^9}, {
   3.7197681782323227`*^9, 3.7197681846884727`*^9}, 3.7404000748679876`*^9, {
   3.740400159981758*^9, 
   3.7404001631859016`*^9}},ExpressionUUID->"cdd075d5-a56d-4b49-8166-\
70c60f5e1a93"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import Data for analysis", "Section",
 CellChangeTimes->{{3.740400194042617*^9, 
  3.7404001979946675`*^9}},ExpressionUUID->"6f44b0c3-8c80-450c-a3de-\
a1e3bd7b184b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"names", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<CSV\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"noErrorData", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "data", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"errorBarData", "=", 
  RowBox[{
  "ErrorListPlot2", "[", "data", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7197660373922014`*^9, 3.7197660498740587`*^9}, {
  3.719766344512555*^9, 3.719766357583848*^9}, {3.71976718482265*^9, 
  3.719767190598956*^9}, {3.71976735073493*^9, 3.7197673935901103`*^9}, {
  3.7197682523746004`*^9, 
  3.719768298606872*^9}},ExpressionUUID->"f9a05848-2e12-47d8-8a2a-\
6cc1ac2ecdc6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "{", "\<\"#File:\\t/home/pi/RbData/2017-11-15/FDayRotation2017-11-15_\
154904.dat\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"#Comments:\\tTesting balanced photodetector\"\>", 
     ",", "\<\"rotating 2 deg per step.\"\>"}], "}"}], ",", 
   RowBox[{"{", "\<\"#IonGauge(Torr):\\t8.83E-07\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#CVGauge(N2)(Torr):\\t8.91E-05\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#CVGauge(He)(Torr):\\t8.91E-05\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#CurrTemp(Res):\\t0.000089\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#SetTemp(Res):\\t0.000089\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#CurrTemp(Targ):\\t0.000089\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#SetTemp(Targ):\\t0.000089\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#BufferGasLeakValve(-):\\t49\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#PumpLaserHeadCurrent(mA):\\t164.9\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#PumpLaserTACurrent(mA):\\t2500\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#PumpTemperature(degC):\\t28.213\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#PumpFrequency(GHz):\\t377104.4\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#PumpPolarizerAngleOuter(deg):\\t212\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#PumpPolarizerAngleInner(deg):\\t0\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#PumpQWPAngle(step):\\t137\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#ProbeCurrent(mA):\\t28.0\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#ProbeVoltage(V):\\t44.5\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#SheetLP(deg):\\t195\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#ProbeFrequency(GHz):\\t377093.6\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#nominalDensity(cm^-3):\\tnone\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#magnet1Voltage(V):\\t65.4\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#magnet2Voltage(V):\\t64.6\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#Revolutions:\\t10\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#DataPointsPerRev:\\t10\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"#NumAouts:\\t1\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"STEP\\tPRB\\tPRBsd\\tPUMP\\tPUMPsd\"\>", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "\<\"#AOUT:512(-1.000000)\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"0\\t1.103139\\t0.002048\\t1.108100\\t0.002887\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"35\\t1.101841\\t0.002967\\t1.107337\\t0.002789\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"70\\t1.091536\\t0.004760\\t1.104894\\t0.002012\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"105\\t1.095734\\t0.003209\\t1.104818\\t0.002893\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"140\\t1.094971\\t0.001614\\t1.103902\\t0.002657\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"175\\t1.094666\\t0.002314\\t1.102147\\t0.004904\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"210\\t1.092681\\t0.004376\\t1.102986\\t0.004422\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"245\\t1.086346\\t0.003981\\t1.094055\\t0.002936\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"280\\t1.090926\\t0.002714\\t1.100314\\t0.004970\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"315\\t1.087491\\t0.004141\\t1.097643\\t0.008289\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"350\\t0.946354\\t0.002320\\t1.257939\\t0.003173\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"385\\t0.943836\\t0.002334\\t1.261374\\t0.005829\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"420\\t0.945820\\t0.004296\\t1.265266\\t0.004096\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"455\\t0.950553\\t0.003879\\t1.262289\\t0.004317\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"490\\t0.946965\\t0.002893\\t1.256946\\t0.004813\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"525\\t0.935439\\t0.001805\\t1.246794\\t0.005871\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"560\\t0.937576\\t0.004685\\t1.255267\\t0.003351\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"595\\t0.945744\\t0.004902\\t1.254733\\t0.005511\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"630\\t0.938340\\t0.002581\\t1.252824\\t0.003867\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"665\\t0.925134\\t0.006242\\t1.244504\\t0.003910\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"700\\t0.815446\\t0.002058\\t1.367855\\t0.003023\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"735\\t0.817355\\t0.001806\\t1.391289\\t0.005292\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"770\\t0.821171\\t0.002360\\t1.374420\\t0.006547\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"805\\t0.815370\\t0.001973\\t1.367092\\t0.002020\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"840\\t0.823156\\t0.001882\\t1.382511\\t0.003317\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"875\\t0.818500\\t0.002125\\t1.373580\\t0.003105\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"910\\t0.815752\\t0.002047\\t1.370909\\t0.002555\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"945\\t0.822087\\t0.001549\\t1.377550\\t0.003273\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"980\\t0.818652\\t0.001414\\t1.374420\\t0.003761\"\>", "}"}], ",", 
   RowBox[{
   "{", "\<\"1015\\t0.819339\\t0.002513\\t1.375030\\t0.002988\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1050\\t0.681791\\t0.001587\\t1.486398\\t0.003330\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1085\\t0.682172\\t0.001779\\t1.490672\\t0.003764\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1120\\t0.685989\\t0.001766\\t1.492504\\t0.003968\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1155\\t0.686905\\t0.002069\\t1.498382\\t0.003609\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1190\\t0.682935\\t0.002253\\t1.483955\\t0.003676\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1225\\t0.684080\\t0.001720\\t1.489069\\t0.003574\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1260\\t0.683241\\t0.001830\\t1.489451\\t0.003480\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1295\\t0.685607\\t0.001973\\t1.494031\\t0.003998\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1330\\t0.682935\\t0.001570\\t1.497542\\t0.003720\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1365\\t0.681638\\t0.001424\\t1.493649\\t0.003427\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1400\\t0.550959\\t0.001286\\t1.621199\\t0.005323\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1435\\t0.551569\\t0.001047\\t1.616848\\t0.004767\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1470\\t0.550577\\t0.001509\\t1.622878\\t0.004323\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1505\\t0.546989\\t0.001925\\t1.590132\\t0.020758\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1540\\t0.541570\\t0.001363\\t1.598605\\t0.004371\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1575\\t0.547218\\t0.000678\\t1.621962\\t0.003897\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1610\\t0.549508\\t0.001397\\t1.630740\\t0.002976\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1645\\t0.550348\\t0.001549\\t1.629900\\t0.004230\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1680\\t0.552333\\t0.001587\\t1.631045\\t0.003957\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1715\\t0.549508\\t0.001525\\t1.622954\\t0.003169\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1750\\t0.423486\\t0.001183\\t1.726841\\t0.004306\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1785\\t0.427226\\t0.001238\\t1.740199\\t0.004485\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1820\\t0.425394\\t0.001119\\t1.735238\\t0.003939\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1855\\t0.429592\\t0.001754\\t1.748290\\t0.006949\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1890\\t0.423257\\t0.001494\\t1.732108\\t0.004435\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1925\\t0.427073\\t0.002822\\t1.751878\\t0.007820\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1960\\t0.426615\\t0.002822\\t1.734932\\t0.006106\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"1995\\t0.427073\\t0.001414\\t1.751191\\t0.004506\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2030\\t0.428142\\t0.001219\\t1.740428\\t0.004371\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2065\\t0.426539\\t0.001013\\t1.735467\\t0.003838\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2100\\t0.332957\\t0.001132\\t1.813095\\t0.004769\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2135\\t0.332880\\t0.001219\\t1.825690\\t0.004806\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2170\\t0.332728\\t0.000744\\t1.817217\\t0.004455\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2205\\t0.332193\\t0.000611\\t1.812485\\t0.004455\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2240\\t0.333644\\t0.001739\\t1.824087\\t0.005181\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2275\\t0.332728\\t0.000860\\t1.814699\\t0.008304\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2310\\t0.332575\\t0.000712\\t1.824087\\t0.004569\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2345\\t0.334789\\t0.001212\\t1.815767\\t0.005173\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2380\\t0.331964\\t0.000477\\t1.810882\\t0.005063\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2415\\t0.332041\\t0.000850\\t1.813401\\t0.004715\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2450\\t0.243878\\t0.000566\\t1.901258\\t0.007245\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2485\\t0.242504\\t0.000860\\t1.892785\\t0.004594\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2520\\t0.244031\\t0.000775\\t1.898587\\t0.003344\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2555\\t0.243268\\t0.000775\\t1.894464\\t0.003939\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2590\\t0.243878\\t0.000833\\t1.896449\\t0.004754\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2625\\t0.245023\\t0.001047\\t1.911868\\t0.004630\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2660\\t0.244413\\t0.001132\\t1.905838\\t0.004610\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2695\\t0.243649\\t0.000748\\t1.898816\\t0.004799\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2730\\t0.242810\\t0.001380\\t1.893472\\t0.004464\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2765\\t0.243573\\t0.001140\\t1.894236\\t0.004142\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2800\\t0.170829\\t0.000732\\t1.968277\\t0.004505\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2835\\t0.170295\\t0.001055\\t1.973467\\t0.004485\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2870\\t0.170524\\t0.001047\\t1.974154\\t0.004528\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2905\\t0.170448\\t0.000962\\t1.966292\\t0.006419\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2940\\t0.171364\\t0.000712\\t1.978886\\t0.003879\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"2975\\t0.171593\\t0.000748\\t1.981787\\t0.005230\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3010\\t0.171287\\t0.000808\\t1.982780\\t0.006242\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3045\\t0.169532\\t0.000986\\t1.962170\\t0.003835\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3080\\t0.168616\\t0.000913\\t1.971712\\t0.003714\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3115\\t0.169913\\t0.001212\\t1.958659\\t0.012820\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3150\\t0.128313\\t0.001098\\t2.001634\\t0.004913\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3185\\t0.128847\\t0.000864\\t1.981787\\t0.007118\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3220\\t0.129152\\t0.000683\\t2.018961\\t0.005743\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3255\\t0.129229\\t0.000887\\t2.024304\\t0.004403\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3290\\t0.128389\\t0.000850\\t2.012244\\t0.005966\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3325\\t0.128694\\t0.000850\\t1.992168\\t0.005397\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3360\\t0.128389\\t0.001132\\t2.002015\\t0.004039\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3395\\t0.128236\\t0.000864\\t2.014457\\t0.005072\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3430\\t0.128389\\t0.000850\\t2.018427\\t0.006643\"\>", "}"}], 
   ",", 
   RowBox[{
   "{", "\<\"3465\\t0.128160\\t0.001098\\t1.995985\\t0.004842\"\>", "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.719766781247693*^9, 3.719766833899565*^9, {3.7197669027053804`*^9, 
   3.7197669277316847`*^9}, 3.719766978555954*^9, 3.719767052920865*^9, {
   3.7197671519948874`*^9, 3.7197671781895466`*^9}, {3.719767254146388*^9, 
   3.7197672836259003`*^9}, {3.71976736924018*^9, 3.7197673877972193`*^9}, {
   3.719767534890786*^9, 3.7197675469452724`*^9}, 3.7197676136940155`*^9, {
   3.719767959076717*^9, 3.7197679838380127`*^9}, 3.7197681121543026`*^9, {
   3.719768168504744*^9, 3.719768191954978*^9}, {3.719768272572483*^9, 
   3.719768299093546*^9}, {3.736705043208146*^9, 
   3.736705044848873*^9}},ExpressionUUID->"a95c9dcb-ff8f-4e96-9a03-\
efb41e1aefba"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#File:\\\\\\\\t/home/pi/RbData/2017-11-15/FDayRotation2017-11-15_\
154904.dat\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\\\\\\\"#Comments:\\\\\\\\tTesting balanced photodetector\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"rotating 2 deg per step.\\\\\\\"\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#IonGauge(Torr):\\\\\\\\t8.83E-07\\\
\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(N2)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(He)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CurrTemp(Res):\\\\\\\\t0.000089\\\\\\\"\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#SetTemp(Res):\\\\\\\\t0.000089\\\\\
\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"37\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"455\\\\\\\\t0.950553\\\\\\\\t0.003879\\\\\\\\t1.262289\\\\\\\\t0.\
004317\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"490\\\\\\\\t0.946965\\\\\\\\t0.002893\\\\\\\\t1.256946\\\\\\\\t0.\
004813\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"525\\\\\\\\t0.935439\\\\\\\\t0.001805\\\\\\\\t1.246794\\\\\\\\t0.\
005871\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"560\\\\\\\\t0.937576\\\\\\\\t0.004685\\\\\\\\t1.255267\\\\\\\\t0.\
003351\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"595\\\\\\\\t0.945744\\\\\\\\t0.004902\\\\\\\\t1.254733\\\\\\\\t0.\
005511\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"630\\\\\\\\t0.938340\\\\\\\\t0.002581\\\\\\\\t1.252824\\\\\\\\t0.\
003867\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"81\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) cannot be \
transposed.\"",2,21,13,20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.736705044864498*^9}},ExpressionUUID->"2dd9d275-9e36-4c88-b9dd-\
bd884ce8b2b0"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","argt",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\"}]\\) called with \\!\\(\\*RowBox[{\\\
\"0\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,21,14,
   20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.736705044880125*^9}},ExpressionUUID->"c84b8928-6abf-4d7e-b98c-\
4efb09a6c49b"],

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"Transpose", "[", "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.719766781247693*^9, 3.719766833899565*^9, {3.7197669027053804`*^9, 
   3.7197669277316847`*^9}, 3.719766978555954*^9, 3.719767052920865*^9, {
   3.7197671519948874`*^9, 3.7197671781895466`*^9}, {3.719767254146388*^9, 
   3.7197672836259003`*^9}, {3.71976736924018*^9, 3.7197673877972193`*^9}, {
   3.719767534890786*^9, 3.7197675469452724`*^9}, 3.7197676136940155`*^9, {
   3.719767959076717*^9, 3.7197679838380127`*^9}, 3.7197681121543026`*^9, {
   3.719768168504744*^9, 3.719768191954978*^9}, {3.719768272572483*^9, 
   3.719768299093546*^9}, {3.736705043208146*^9, 
   3.736705044911377*^9}},ExpressionUUID->"9407c9af-f310-4fb5-a16c-\
6378a0303426"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#File:\\\\\\\\t/home/pi/RbData/2017-11-15/FDayRotation2017-11-15_\
154904.dat\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\\\\\\\"#Comments:\\\\\\\\tTesting balanced photodetector\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"rotating 2 deg per step.\\\\\\\"\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#IonGauge(Torr):\\\\\\\\t8.83E-07\\\
\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(N2)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(He)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CurrTemp(Res):\\\\\\\\t0.000089\\\\\\\"\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#SetTemp(Res):\\\\\\\\t0.000089\\\\\
\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"37\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"455\\\\\\\\t0.950553\\\\\\\\t0.003879\\\\\\\\t1.262289\\\\\\\\t0.\
004317\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"490\\\\\\\\t0.946965\\\\\\\\t0.002893\\\\\\\\t1.256946\\\\\\\\t0.\
004813\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"525\\\\\\\\t0.935439\\\\\\\\t0.001805\\\\\\\\t1.246794\\\\\\\\t0.\
005871\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"560\\\\\\\\t0.937576\\\\\\\\t0.004685\\\\\\\\t1.255267\\\\\\\\t0.\
003351\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"595\\\\\\\\t0.945744\\\\\\\\t0.004902\\\\\\\\t1.254733\\\\\\\\t0.\
005511\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"630\\\\\\\\t0.938340\\\\\\\\t0.002581\\\\\\\\t1.252824\\\\\\\\t0.\
003867\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"81\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) cannot be \
transposed.\"",2,22,15,20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.736705044911377*^9}},ExpressionUUID->"bd6a1527-a00e-452b-bc39-\
4245aaf8c871"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","argt",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\"}]\\) called with \\!\\(\\*RowBox[{\\\
\"0\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,22,16,
   20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.736705044927004*^9}},ExpressionUUID->"45d39009-5085-431c-bc08-\
894b29ddff70"],

Cell[BoxData[
 TemplateBox[{
  "Drop","drop",
   "\"Cannot drop positions \\!\\(\\*RowBox[{\\\"1\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Transpose\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \\\"\\\\\\\"#File:\\\
\\\\\\t/home/pi/RbData/2017-11-15/FDayRotation2017-11-15_154904.dat\\\\\\\"\\\
\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"#Comments:\
\\\\\\\\tTesting balanced photodetector\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"rotating 2 deg per step.\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"\\\\\\\"#IonGauge(Torr):\\\\\\\\t8.83E-07\\\\\\\"\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(N2)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(He)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CurrTemp(Res):\\\\\\\\t0.000089\\\\\\\"\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#SetTemp(Res):\\\\\\\\t0.000089\\\\\
\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"37\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"455\\\\\\\\t0.950553\\\\\\\\t0.003879\\\\\\\\t1.262289\\\\\\\\t0.\
004317\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"490\\\\\\\\t0.946965\\\\\\\\t0.002893\\\\\\\\t1.256946\\\\\\\\t0.\
004813\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"525\\\\\\\\t0.935439\\\\\\\\t0.001805\\\\\\\\t1.246794\\\\\\\\t0.\
005871\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"560\\\\\\\\t0.937576\\\\\\\\t0.004685\\\\\\\\t1.255267\\\\\\\\t0.\
003351\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"595\\\\\\\\t0.945744\\\\\\\\t0.004902\\\\\\\\t1.254733\\\\\\\\t0.\
005511\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"630\\\\\\\\t0.938340\\\\\\\\t0.002581\\\\\\\\t1.252824\\\\\\\\t0.\
003867\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"81\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}]\\).\"",2,
   22,17,20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.73670504494263*^9}},ExpressionUUID->"b7096814-ddf7-4ad8-ba68-\
3682c258ec59"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"Transpose\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"]\\\"}]\\) does not exist.\"",2,22,18,
   20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.7367050449738817`*^9}},ExpressionUUID->"f9e39116-aa69-434f-aedc-\
0cc207da3de2"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#File:\\\\\\\\t/home/pi/RbData/2017-11-15/FDayRotation2017-11-15_\
154904.dat\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\\\\\\\"#Comments:\\\\\\\\tTesting balanced photodetector\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"rotating 2 deg per step.\\\\\\\"\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#IonGauge(Torr):\\\\\\\\t8.83E-07\\\
\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(N2)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(He)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CurrTemp(Res):\\\\\\\\t0.000089\\\\\\\"\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#SetTemp(Res):\\\\\\\\t0.000089\\\\\
\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"37\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"455\\\\\\\\t0.950553\\\\\\\\t0.003879\\\\\\\\t1.262289\\\\\\\\t0.\
004317\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"490\\\\\\\\t0.946965\\\\\\\\t0.002893\\\\\\\\t1.256946\\\\\\\\t0.\
004813\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"525\\\\\\\\t0.935439\\\\\\\\t0.001805\\\\\\\\t1.246794\\\\\\\\t0.\
005871\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"560\\\\\\\\t0.937576\\\\\\\\t0.004685\\\\\\\\t1.255267\\\\\\\\t0.\
003351\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"595\\\\\\\\t0.945744\\\\\\\\t0.004902\\\\\\\\t1.254733\\\\\\\\t0.\
005511\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"630\\\\\\\\t0.938340\\\\\\\\t0.002581\\\\\\\\t1.252824\\\\\\\\t0.\
003867\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"81\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}]\\) does \
not exist.\"",2,22,19,20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.736705044989507*^9}},ExpressionUUID->"350ccbf1-c79d-4850-8a80-\
e9ec599d7722"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"Transpose\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"]\\\"}]\\) does not exist.\"",2,22,20,
   20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.7367050450207596`*^9}},ExpressionUUID->"25308c3a-245a-4b9b-ae50-\
97e69ccbf415"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,22,21,20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.7367050450363855`*^9}},ExpressionUUID->"8a084ac4-b5d4-4d02-8e10-\
f8fa4d80fb2d"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#File:\\\\\\\\t/home/pi/RbData/2017-11-15/FDayRotation2017-11-15_\
154904.dat\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\\\\\\\"#Comments:\\\\\\\\tTesting balanced photodetector\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"rotating 2 deg per step.\\\\\\\"\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#IonGauge(Torr):\\\\\\\\t8.83E-07\\\
\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(N2)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(He)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CurrTemp(Res):\\\\\\\\t0.000089\\\\\\\"\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#SetTemp(Res):\\\\\\\\t0.000089\\\\\
\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"37\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"455\\\\\\\\t0.950553\\\\\\\\t0.003879\\\\\\\\t1.262289\\\\\\\\t0.\
004317\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"490\\\\\\\\t0.946965\\\\\\\\t0.002893\\\\\\\\t1.256946\\\\\\\\t0.\
004813\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"525\\\\\\\\t0.935439\\\\\\\\t0.001805\\\\\\\\t1.246794\\\\\\\\t0.\
005871\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"560\\\\\\\\t0.937576\\\\\\\\t0.004685\\\\\\\\t1.255267\\\\\\\\t0.\
003351\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"595\\\\\\\\t0.945744\\\\\\\\t0.004902\\\\\\\\t1.254733\\\\\\\\t0.\
005511\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"630\\\\\\\\t0.938340\\\\\\\\t0.002581\\\\\\\\t1.252824\\\\\\\\t0.\
003867\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"81\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) cannot be \
transposed.\"",2,22,22,20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.736705045177019*^9}},ExpressionUUID->"938be962-0fab-43ec-bc15-\
a7088c614557"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#File:\\\\\\\\t/home/pi/RbData/2017-11-15/FDayRotation2017-11-15_\
154904.dat\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\\\\\\\"#Comments:\\\\\\\\tTesting balanced photodetector\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"rotating 2 deg per step.\\\\\\\"\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#IonGauge(Torr):\\\\\\\\t8.83E-07\\\
\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(N2)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CVGauge(He)(Torr):\\\\\\\\t8.91E-05\\\\\\\"\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"#CurrTemp(Res):\\\\\\\\t0.000089\\\\\\\"\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"\\\\\\\"#SetTemp(Res):\\\\\\\\t0.000089\\\\\
\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"37\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"455\\\\\\\\t0.950553\\\\\\\\t0.003879\\\\\\\\t1.262289\\\\\\\\t0.\
004317\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"490\\\\\\\\t0.946965\\\\\\\\t0.002893\\\\\\\\t1.256946\\\\\\\\t0.\
004813\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"525\\\\\\\\t0.935439\\\\\\\\t0.001805\\\\\\\\t1.246794\\\\\\\\t0.\
005871\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"560\\\\\\\\t0.937576\\\\\\\\t0.004685\\\\\\\\t1.255267\\\\\\\\t0.\
003351\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"595\\\\\\\\t0.945744\\\\\\\\t0.004902\\\\\\\\t1.254733\\\\\\\\t0.\
005511\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"630\\\\\\\\t0.938340\\\\\\\\t0.002581\\\\\\\\t1.252824\\\\\\\\t0.\
003867\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"81\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) cannot be \
transposed.\"",2,22,23,20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.7367050453645306`*^9}},ExpressionUUID->"d702e4c1-0cf1-4f11-b932-\
a2475d315974"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"nmtx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,22,24,20179954170404160879,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.736705043255023*^9, 
  3.7367050455676684`*^9}},ExpressionUUID->"8b94942b-68f2-4430-a9fb-\
7b13217e1686"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.719766781247693*^9, 3.719766833899565*^9, {3.7197669027053804`*^9, 
   3.7197669277316847`*^9}, 3.719766978555954*^9, 3.719767052920865*^9, {
   3.7197671519948874`*^9, 3.7197671781895466`*^9}, {3.719767254146388*^9, 
   3.7197672836259003`*^9}, {3.71976736924018*^9, 3.7197673877972193`*^9}, {
   3.719767534890786*^9, 3.7197675469452724`*^9}, 3.7197676136940155`*^9, {
   3.719767959076717*^9, 3.7197679838380127`*^9}, 3.7197681121543026`*^9, {
   3.719768168504744*^9, 3.719768191954978*^9}, {3.719768272572483*^9, 
   3.719768299093546*^9}, {3.736705043208146*^9, 
   3.7367050456457987`*^9}},ExpressionUUID->"1f8f7023-df82-4250-aede-\
0475c0476d23"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
First, we pass the 45\[Degree] light through a horizontal linear polarizer \
and a vertical linear polarizer. \
\>", "Section",
 CellChangeTimes->{{3.719749539231494*^9, 
  3.7197495876715183`*^9}},ExpressionUUID->"cc0b15c0-d048-4754-9dd2-\
5ead86301455"],

Cell[CellGroupData[{

Cell["\<\
We will assume our incident vector is 100% linearly polarized in the \
horizontal direction\
\>", "Subsubsection",
 CellChangeTimes->{{3.7150998748362465`*^9, 3.7150999197057714`*^9}, {
  3.7150999940511394`*^9, 3.7151000097947555`*^9}, {3.7151004934846153`*^9, 
  3.715100508132429*^9}, {3.7151005395804043`*^9, 3.715100622636276*^9}, {
  3.715100704676879*^9, 3.715100728253394*^9}, {3.736705506889439*^9, 
  3.736705507139456*^9}},ExpressionUUID->"8f0b8c07-214e-4829-afbb-\
74947d75f3d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inc", "=", 
  RowBox[{"(", GridBox[{
     {"1"},
     {"1"},
     {"0"},
     {"0"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.7151006245030336`*^9, 3.715100624876859*^9}, {
   3.715100685750094*^9, 3.7151006998130736`*^9}, {3.7151007353253317`*^9, 
   3.715100775933672*^9}, {3.71510085567815*^9, 3.715100857862251*^9}, {
   3.715101071975757*^9, 3.71510107278231*^9}, 3.7151022503685045`*^9, 
   3.715102732594359*^9, {3.7151029214935303`*^9, 3.715102921804517*^9}, {
   3.71560571366185*^9, 3.715605734425416*^9}, {3.7156075189010153`*^9, 
   3.715607537042543*^9}, {3.719749388920704*^9, 3.719749391800187*^9}, {
   3.736705474448512*^9, 3.736705482386505*^9}, {3.7404004357874603`*^9, 
   3.7404004362030835`*^9}},ExpressionUUID->"04b0ad5f-b1a7-455e-9c3c-\
d8daa56b5c56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7151027330030437`*^9, 3.715102922350258*^9, 3.715103018881852*^9, 
   3.7151769662879243`*^9, 3.7155361959749966`*^9, 3.7156054861327267`*^9, {
   3.715605723359839*^9, 3.7156057348146276`*^9}, 3.715607539446978*^9, 
   3.7157077367663856`*^9, {3.71974945269519*^9, 3.719749459806636*^9}, 
   3.7197494968664274`*^9, 3.7197690923594933`*^9, 3.7367050599606094`*^9, 
   3.736705107855039*^9, 3.7367054834178185`*^9, 3.740400436808795*^9, 
   3.740400652095221*^9},ExpressionUUID->"a0ed9dcb-ef79-4cfa-b2c2-\
d6f36d5b9058"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["First Horizontal", "Subsection",
 CellChangeTimes->{{3.719749625559496*^9, 3.719749629310981*^9}, {
  3.7367054859961257`*^9, 
  3.7367054875587234`*^9}},ExpressionUUID->"55ac41c9-c306-42d1-8844-\
bcf119e05e6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LPzero", ".", "inc"}]], "Input",
 CellChangeTimes->{{3.7197495919598384`*^9, 
  3.719749607247356*^9}},ExpressionUUID->"b930bbd5-9772-455f-b1e7-\
6e5ff757d5c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7197496474377728`*^9, {3.719769083339423*^9, 3.719769097180265*^9}, 
   3.7367051407164664`*^9, 3.736705489011919*^9, 
   3.7404006537657576`*^9},ExpressionUUID->"251810f4-5566-455d-abbf-\
d2b9367c20a9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Then vertical", "Subsection",
 CellChangeTimes->{{3.7197496372636013`*^9, 
  3.7197496503991475`*^9}},ExpressionUUID->"e90baba5-1085-4610-8de6-\
ae4e9234b760"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vertLP", "=", 
   RowBox[{
    RowBox[{"MuellerRotation", "[", 
     RowBox[{"\[Pi]", "/", "2"}], "]"}], ".", "LPzero", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"MuellerRotation", "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"vertLP", ".", "inc"}]}], "Input",
 CellChangeTimes->{{3.719749653976249*^9, 
  3.719749752912033*^9}},ExpressionUUID->"9a3f59df-7b36-471c-98ff-\
b89d273eb4b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7404006570137005`*^9},ExpressionUUID->"2f8aa906-0061-46ba-909d-\
91b5d3bd6075"]
}, Open  ]]
}, Open  ]],

Cell["The light disappears as expected.", "Subsection",
 CellChangeTimes->{{3.7404001197059536`*^9, 
  3.740400133098175*^9}},ExpressionUUID->"fc4fa21b-3bf5-4466-9ceb-\
e0c94a0e4a0e"],

Cell[CellGroupData[{

Cell["Now we start with horizontally polarized input.", "Subsection",
 CellChangeTimes->{{3.719749800855319*^9, 3.719749830631254*^9}, {
  3.7197498928546915`*^9, 3.7197499288302383`*^9}, {3.719749965342338*^9, 
  3.7197499832702417`*^9}, {3.736705559064577*^9, 3.736705559908395*^9}, {
  3.736705627632826*^9, 3.736705643305688*^9}, {3.7367066884519815`*^9, 
  3.736706697875177*^9}},ExpressionUUID->"7708c0b8-c849-4c77-8fd2-\
d83da55042b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inc", "=", 
  RowBox[{"(", GridBox[{
     {"1"},
     {"1"},
     {"0"},
     {"0"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.7197498332004004`*^9, 3.719749885303258*^9}, {
   3.7197499326225348`*^9, 3.719750067454442*^9}, {3.719750141245785*^9, 
   3.719750145493662*^9}, {3.7197501976313877`*^9, 3.7197502144533453`*^9}, 
   3.719750331437702*^9, {3.719750406381483*^9, 3.719750416525867*^9}, {
   3.71976895328592*^9, 3.7197690659031715`*^9}, {3.719769141311273*^9, 
   3.719769169886428*^9}, {3.7197692382075357`*^9, 3.719769263078602*^9}, 
   3.719772295844415*^9, {3.719772459084523*^9, 3.719772543429414*^9}, {
   3.7197926339430904`*^9, 3.7197926360058174`*^9}, {3.719792676126253*^9, 
   3.719792757502467*^9}, {3.7197928177273006`*^9, 3.7197928566955566`*^9}, {
   3.7197929077839165`*^9, 3.7197929141359224`*^9}, {3.7197929779212604`*^9, 
   3.7197930584323196`*^9}, {3.7197931234415855`*^9, 3.719793142152923*^9}, {
   3.736705637617826*^9, 3.7367056607442703`*^9}, {3.73670654616092*^9, 
   3.7367065547865314`*^9}, 3.7367068501039*^9, 3.736707073289956*^9, {
   3.740400674364746*^9, 
   3.74040069814227*^9}},ExpressionUUID->"d24c7273-8607-4344-a2e6-\
f83cd2806d80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7404006771228743`*^9, 
  3.740401162336204*^9},ExpressionUUID->"6ed5cffe-3285-4194-9284-\
4b896da3bd92"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Then we rotate it to our desired starting angle.", "Subsection",
 CellChangeTimes->{{3.7367067068133125`*^9, 3.7367067185797467`*^9}, {
  3.7367215753909874`*^9, 
  3.736721583875914*^9}},ExpressionUUID->"5f62dfa9-d97d-4e5a-9dc8-\
57bf6df34690"],

Cell[BoxData[
 RowBox[{
  RowBox[{"arbInc", "[", "\[Theta]o_", "]"}], ":=", 
  RowBox[{
   RowBox[{"MuellerRotation", "[", "\[Theta]o", "]"}], ".", 
   "inc"}]}]], "Input",
 CellChangeTimes->{{3.7367067302367787`*^9, 3.736706782615305*^9}, 
   3.736706840322053*^9, {3.7367069584544144`*^9, 3.7367069607514353`*^9}, {
   3.7367070314279613`*^9, 3.736707085384452*^9}, {3.73670719520383*^9, 
   3.7367071962820244`*^9}, {3.7367215554828596`*^9, 
   3.7367215570923605`*^9}, {3.7404001372119913`*^9, 
   3.7404001377243423`*^9}, {3.740400448781204*^9, 3.740400465708621*^9}, {
   3.74040050772436*^9, 3.7404006143639526`*^9}, {3.7404007274213657`*^9, 
   3.7404007546858954`*^9}, {3.740400786973626*^9, 3.740400833725438*^9}, {
   3.740400868638344*^9, 3.7404008805574875`*^9}, {3.74040095270257*^9, 
   3.7404009544131575`*^9}, {3.740401189934476*^9, 3.7404011918588653`*^9}, {
   3.7404013162377*^9, 
   3.740401412973984*^9}},ExpressionUUID->"a56df538-9e10-4944-9543-\
678afb723f34"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arbInc", "[", 
  RowBox[{"\[Pi]", "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7404013718417187`*^9, 
  3.7404014365260425`*^9}},ExpressionUUID->"7aeefa28-71aa-45ab-baa8-\
1e3ecac66fa5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1"}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.740401373237685*^9, 
  3.7404014368644233`*^9}},ExpressionUUID->"50c1a9bb-6166-4f5c-bf06-\
0af2e7cdf015"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We then put it through a rotatable linear polarizer.", "Subsection",
 CellChangeTimes->{{3.7367056650257883`*^9, 
  3.7367056816049633`*^9}},ExpressionUUID->"bbbd3045-5ae9-40a3-b9a7-\
44f6b2a28538"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "arbLP", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arbLP", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", "LPzero", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"horizontalResult", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"arbLP", "[", "0", "]"}], ".", 
      RowBox[{"LR", "[", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"1", "/", "2"}]}], "]"}], ".", "inc"}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"verticalResult", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"arbLP", "[", 
        RowBox[{"\[Pi]", "/", "2"}], "]"}], ".", 
       RowBox[{"LR", "[", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{"1", "/", "2"}]}], "]"}], ".", "inc"}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"horizontalResult", ",", "verticalResult"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Horizontal\>\"", ",", "\"\<Vertical\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"balancedIntensity", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"LPzero", ".", "arbinc"}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"vertLP", ".", "arbinc"}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7197498332004004`*^9, 3.719749885303258*^9}, {
   3.7197499326225348`*^9, 3.719750067454442*^9}, {3.719750141245785*^9, 
   3.719750145493662*^9}, {3.7197501976313877`*^9, 3.7197502144533453`*^9}, 
   3.719750331437702*^9, {3.719750406381483*^9, 3.719750416525867*^9}, {
   3.71976895328592*^9, 3.7197690659031715`*^9}, {3.719769141311273*^9, 
   3.719769169886428*^9}, {3.7197692382075357`*^9, 3.719769263078602*^9}, 
   3.719772295844415*^9, {3.719772459084523*^9, 3.719772543429414*^9}, {
   3.7197926339430904`*^9, 3.7197926360058174`*^9}, {3.719792676126253*^9, 
   3.719792757502467*^9}, {3.7197928177273006`*^9, 3.7197928566955566`*^9}, {
   3.7197929077839165`*^9, 3.7197929141359224`*^9}, {3.7197929779212604`*^9, 
   3.7197930584323196`*^9}, {3.7197931234415855`*^9, 3.719793142152923*^9}, {
   3.736705637617826*^9, 3.7367056607442703`*^9}, {3.7367057793304243`*^9, 
   3.7367057918155766`*^9}, {3.736705822348752*^9, 3.736705862210601*^9}, {
   3.736705906854017*^9, 3.7367059487003965`*^9}, {3.736705980733649*^9, 
   3.7367059871871767`*^9}, {3.7367060171890345`*^9, 
   3.7367060446907525`*^9}, {3.7367061291180954`*^9, 3.736706170808198*^9}, {
   3.736706204013418*^9, 3.7367062705331993`*^9}, {3.736706308676206*^9, 
   3.736706440091322*^9}, {3.7367068913564706`*^9, 3.736706946781831*^9}, {
   3.740400999998247*^9, 3.740401080733857*^9}, {3.74040120390349*^9, 
   3.740401259438556*^9}, {3.7404012918869014`*^9, 
   3.7404013056151886`*^9}},ExpressionUUID->"fbd7ebed-e05b-4754-961b-\
9aafbcecb5e5"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], "-", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.71974995588649*^9, {3.719750005119372*^9, 3.7197500218382044`*^9}, 
   3.7197500695544605`*^9, 3.7197501713292956`*^9, 3.7197502147728405`*^9, {
   3.719750413860669*^9, 3.7197504168201995`*^9}, {3.719769079588338*^9, 
   3.719769102718137*^9}, 3.7197691731877775`*^9, 3.7197692467064466`*^9, {
   3.7197724851481175`*^9, 3.719772487165465*^9}, {3.7197725265130053`*^9, 
   3.7197725438587055`*^9}, {3.7197927310756826`*^9, 3.719792758076233*^9}, {
   3.7197927934288087`*^9, 3.7197928198117824`*^9}, {3.719792851948468*^9, 
   3.719792857147391*^9}, {3.7197929896460924`*^9, 3.719793023548936*^9}, 
   3.719793059021551*^9, 3.719793142829172*^9, {3.7367057810023975`*^9, 
   3.736705792346858*^9}, {3.736705849756693*^9, 3.7367058633669195`*^9}, {
   3.736705916901515*^9, 3.7367059493097897`*^9}, 3.73670598748405*^9, {
   3.736706018736004*^9, 3.7367060455189257`*^9}, {3.7367061299462695`*^9, 
   3.736706173605247*^9}, {3.7367062060447736`*^9, 3.7367062341871567`*^9}, 
   3.736706442607086*^9, 3.7367065565366306`*^9, 3.736706791865881*^9, 
   3.7367068547604384`*^9, {3.7367069264680395`*^9, 3.7367069645485463`*^9}, {
   3.7367070424911427`*^9, 3.7367070918692284`*^9}, 3.736707199219686*^9, 
   3.740400984475918*^9, 3.7404010903728724`*^9, {3.740401150697323*^9, 
   3.7404011658890696`*^9}, 3.7404012466739388`*^9, {3.7404012831446085`*^9, 
   3.7404013061467657`*^9}},ExpressionUUID->"25fcb625-c3b6-45d1-a56a-\
2e6f0d829280"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.71974995588649*^9, {3.719750005119372*^9, 3.7197500218382044`*^9}, 
   3.7197500695544605`*^9, 3.7197501713292956`*^9, 3.7197502147728405`*^9, {
   3.719750413860669*^9, 3.7197504168201995`*^9}, {3.719769079588338*^9, 
   3.719769102718137*^9}, 3.7197691731877775`*^9, 3.7197692467064466`*^9, {
   3.7197724851481175`*^9, 3.719772487165465*^9}, {3.7197725265130053`*^9, 
   3.7197725438587055`*^9}, {3.7197927310756826`*^9, 3.719792758076233*^9}, {
   3.7197927934288087`*^9, 3.7197928198117824`*^9}, {3.719792851948468*^9, 
   3.719792857147391*^9}, {3.7197929896460924`*^9, 3.719793023548936*^9}, 
   3.719793059021551*^9, 3.719793142829172*^9, {3.7367057810023975`*^9, 
   3.736705792346858*^9}, {3.736705849756693*^9, 3.7367058633669195`*^9}, {
   3.736705916901515*^9, 3.7367059493097897`*^9}, 3.73670598748405*^9, {
   3.736706018736004*^9, 3.7367060455189257`*^9}, {3.7367061299462695`*^9, 
   3.736706173605247*^9}, {3.7367062060447736`*^9, 3.7367062341871567`*^9}, 
   3.736706442607086*^9, 3.7367065565366306`*^9, 3.736706791865881*^9, 
   3.7367068547604384`*^9, {3.7367069264680395`*^9, 3.7367069645485463`*^9}, {
   3.7367070424911427`*^9, 3.7367070918692284`*^9}, 3.736707199219686*^9, 
   3.740400984475918*^9, 3.7404010903728724`*^9, {3.740401150697323*^9, 
   3.7404011658890696`*^9}, 3.7404012466739388`*^9, {3.7404012831446085`*^9, 
   3.740401306154772*^9}},ExpressionUUID->"1e02f4e7-b5d4-44dc-a8ca-\
566dcccff2ae"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
b7OHIaCHqp5bwY2OC1QfSJIYAVnOal2/L9xI3tPstxrtKHi4XLrCP8WNtgnF
LKmmjkGQDvWyCsGNDvfZNXhUj8GLHe6XLWe4ESlJbSiwewwKO4LsUhe4kdfm
Xx4R8jjMqbyzPbjBjeLflo4Ke4/Ddfo5a2NOMtqgZhiuHZ0A325vay9uMuLP
i4lRMJ+ARwUM1vE8ZCS5926b8q0JeHuZ32pYgIwavy9eTE6egNHPhyzcxMhI
ma5g/8LmBFyM8D8fuZ+MvqxsHtmXOQku15jPl8qTUeiQqtxizSTc1Qw3+aNI
RuY2IYl3fk5C4nLyuZ0qZOS29CthZHMS/ph/MirUICNXAw6a4VNTMKWob/Tr
GBk19ZqwfbWegjWOrrMbmmSUanDjs8fNKRCqHjfU1CEj3lMLbHxRU2AiyWHQ
YUhGf6yUgqz+TMGVjcgzq0ZkRPXj4DhLTIH7T9EzIiZklJERX0KioULkw/36
duZklPO0Rz9HjAptU2f1Fm3JqIaf337Jkgp6hS+1+d3IiNVy3Xorfp+/Mmez
yedBRgOqMzcov6lwb59MPp8XGVnWsu74PUyF4ozibXx+ZOQzk1n1fp0KEgk/
pnkCyEi1s6D/rjT2se7Y1zxBZMQVdmP3qwMEnBO0NeUJJqPTZyLK7qpiH302
+5EcSkaxn6X4npwmYDGQ8wV3JBmpH2KJanAhgKuuQ4c7iowe6XDTrHsRsJsu
noY7hoyCvexD5+4SYO0j68AVT0ZOvtUJO8MJ8CqZE+FKJCPFNcZhm2gCni+W
tnEmkRFt364u60QCmpy01DhTyYhB8Oi5V+8JGHzPNcuRTkbpgifeD2D/2hz/
mcqRQUb5b45pjmA/U7hkx8WRSUb6xiz9++uwjybtqWPPJqNj5wqKPLDf2ffO
e7LnklG2rZibP/a/+PP3BtgKyWhv31eL1k4CiiO1o9iKycg668cF4R4C2tq4
T7GVkhGpfzuD1F8CqFxdtGzl+D7mPVOYxf5J0kssZP1ARnk9awO+owRIhFy+
ylpFRvUtCgxN2FfVGuTEWGvIKHyaI6gD+6zJlsV2lloy6qo3v5g8Q4CLRsVD
lnoyclCgBu+bx/t7+746SwMZ/Yp7Ou+7SEBauc4ccxPeX17eFyHLBNSskNOZ
m8lo0POIw/lVAroP/jJn/kpGEsmDdiPYxxdvvuJmbiEj0ZufAhSxv3PnXKkn
tZJR2nxu7VHs97LUvd6kdjL6d/2GMBn7v+bupb2kDrwfbrXBiZitr3wYZOrE
57fqwU5g9n79IJrpFxnZ6Bom//f7/Mh+XT2mbjKi2ymo24w5W5SXnukPGVEy
npDMMDeZ/y5i7CMjsQvev9789+8TopMcGfvJSPdAYm0x7ofmp7044yAZ+2N1
U+Aa9nXe/R1bhsnorOGrGX7cv8KZ5eAto2Q02UYLdisEnA6thC3jZCSSmlzi
ukSAw+eAeYZJ3M9zTfvjCwTcJ+m9YaCS0fipN8Y/ZvF5HuezZJgmo4RDD0Mk
pwkoudtNZpgloxPnk8gHp/D5rTn40C/i/d5x5UTUMAHnTXR2rSyRUbEv+471
fgJq83Z3UFfwfePR29jRS0C0w+TeX+v4PJOjRio6CGCob+7+tklGHA4j/Htb
Cbgu/v5hHS0P4g8wvX/xC/b3zmsD2Vt4UHI+2PJ/JCBLXi8slYkHjfIf2Yio
wOt9IqcWy8yD3DvuS/4sImD6OBEZyM6DNKumbqW+JeBlnpO2JR8PCuFOKLkZ
RgAj55klQwEelGScc577IQFODvtTtAR5kKFNjv7NO/j8xGfXFbbh+VVtSu47
EzAbejOHVZIH+XB86uvTI7C/GlrSSvGgln0oLuU4AQ3HFViXpHnQMdXneXvw
5zlubd62X5YH1d7g9w/Dn/+TDm6UEgUeZPzcsDF2gwp5dcZ1mQd5UMdZi9tP
5qggIq7kkqLMg1yMvJtOjlJh7ufS5yeqPOg6G9NXzu9UvP+et+2O8SBdkXaf
+QQqzIv5DPOcxeuz/92uIU8FKx/zZ8zGPKh6PJahYAcVmn6qos1zPKiZaB2Y
5qNCQuh69LgZD7p2BiLql6ZAe83vVPVFHlR/48v26eIpePXzTv71mzzoHFS2
OO+fguG6fb2hrjwo4Ie5PL/IFMjm9zJnueP8R6P6t1mmoDBMzYrw5kG/VvpE
X/VPQrPWCrPTfR5k59e5Jhs2CctlTlbOz3nQvAa6W9w3AXqJViy3injQiW31
h66YjkNEKIdiRAkPmpt9nmuDxqHLp8Iqv4wHdb5w7ZLbOQ6254UK5it5kERM
Hav6zBh4kn9auTbwoJUEOenjD8Yg5b5egVsX3v/Cr4sXXo/C6hU1a89/POir
/3GP8434eVsmg1zXeVBjccSFx++G4SU7Rcx5kwep37NjTHsyDKq5s71X6HnR
Qsm01mOjYfD7l2ZlwsqLLPdyaxzoGwL6ULKVkhAvCmDe5350ZhDY8kYsFlR4
UeNIP13VlgHYtv7UzNmLF3k1jPElSP6Bk/2nSl748KKwK8h+oa8Hbn1iFvjg
x4t6kz2DjWJ7oOnpnVaWe7yodZp3tzJPD7jtdNZKCeFF9WasQW9ou6HltL7S
z1he9JUhtU2/vwvuJnHwqFXyIoVNflnVsh/wPrDJ6WI1Lyrnr67f7fUDOh0D
vj78yIvmW5kZdA/9ADmljYcdn3jR1DSVd3txO/z+PEXj1MKL4qtrxXWL20Bh
oZma9Bevj+60csjH7zB8IqSJxMCHpH2el20VagYbHWsxSUY+tFqMzkS8/Qw9
eopuR0h8SO72UmWW6mdoN+oV92LjQwZa9T1t1k1Qc1Hec4KXD8kKS11nzGmA
uNu/pb5K8qG+/pD3BS51QLmX7TsuxYeEY35Q93DUQUTAgzZGGT5koqVw51JG
LQQ/3nsb5PjQyfjZQMGhj+Dx8l5H9kE+FJQ3O1x7sQbOFu1+8OwEH/58/Xmq
xFkJLaU0v7O0+JCHsF5nstUH0PnwY1+zDh9ywtv6MacCNOpudzPo86Hpewua
O83KYV9bm7ybCR9qn/o301pTAmyEd7+JPR+KeLrEqTGaD0Gz+squV3G/2vm7
lIzygX5RMvTpNT7EQPNunLU2D1bXvh1qcuZDsZzNtyzTcmGUZcfTw158aPT+
usHk/Wz4uLMZREL4UJj+XP2Vw29AO7RXm/8xH1JeLeKZt0mHloVZI44nfIhk
fvwIbWga/KkVdNwI50PL72QEMqmvYdnmctSfGNy/t01M+q8k8GvySu6Ixbwv
VDlGJAm2HAjN/BqP61us0O20ewVk2oLaD0l8SEy2QUWAJhFkE+hm4jP40D4d
K6pRZQzkMvKvRb7jQ/o3PeVd7kTDoeu7mJ5k8qHEn5Rrk9pRoKmmv+12Lh/K
fnjRiX3+OXxJuSjtns+H/EvTdCraIuAsm7v8jUJc/9Nt9Z7SZ3Dhd5yWVSnu
h2J/xi/hKYxq5Jw9V86HrHUcYpniwuB6Rq3V6Q98iEbo9huJY0/Ax3PCFWrw
fNoxJxwehECkwKEk0SbMGV3jGhX3Qfi27nuBZj6EOAKtd+y/B8nDVsWcXzEb
gaBa/h3ILgj4uvmdD1VJ3TA2bvEFpW0xXUttmNm+FPMf8IYP998PEj9wv1Hp
NM65HvDZsH21twvHs6qDBDlvgUHZyJbO35g9ez96TjhDp8Q/rpYe3J/DRN7e
LzfAKphDuKEXM/mx2hKNIwzPiEtV/cWcFt5j4nIFHM8rHigewPXlhS1txC/B
XNVJtewhzLHHY8Q4bMBL2vxk+gjOjxn7p+5sCTRhNwwTxzAznmNtP3IeApbu
WkZNYDYv8eENPQvsVpH2YVOY6UOCycb6+Ev3za0gArOHtGiFvBZslau47T+D
+e45do48DXj1vCXYYw6z9Ooum7MqIL0+8Nxp4b96PkbuB/ZDpu1S4pUlzOk9
pA2aHaDYzPLOegWzde21s6tkKJcXKTL5h7nqc3Vv86K6xsv9NfrrmGmWHZmv
pao30h3/cnITs/+9zTsqA+r6DiadiJYf0fT5pW+vI0HH96sDyvSYw+hFPERE
wOLQbeq+LZhH++SsvuyGwcTwFWkmzIPtzlWKB8GBlMogzvxfvuM+ExUEn+mC
Hh9lxVzuzn+zTxNk1+357dgx/4k92/lGD0KXdBKCODGr5x888NkQiJk90m+5
MY8fMF1qNQH9Sc6cLzyY9zim7XC0hNzhmUPTfP/x9lP6OjbA87ethkzBfGrf
I6k3l+DW7wIdxa2YHzUWB522hx8/XrSfE8Z8RW3fRfVrcLDF08JLhB/5n6q9
21rqBMu1ajcqJTAnLJ0JsnSF85Wiy3934HwGBe6gYXcoLaG9wyDFj6qaBRWf
hnuBb2ZduNZufiRWwyl9Yrc//ElPE3Lcg8fn09EoFN0BlPwwJXQvjivqHmU1
ugd0UacK2+Tx+MznR8zqA+Bi+F5YVORH1lY1OrXRQVD7iLuBoozHPx62WvYL
hoA7P7osVPH4Uyaf4v1CYcS7yMZfnR85HQp2uq0bBifdoieSED/aJ7XWcNfm
KbBetVgfOcaP+uzXLhPpzyDs7JCYyyl+lJ2dNPE5Pgpm9D69iTiNWerVGt1s
NBhovTlQdAbP51hw4e+pl8Cnfu3YmhEe71ej4i0aDzFSC5cDLHF/KhdYC3mT
4J/4z+l0a37EdeHP0LO+JDAXLvH8bMOPEtGGf0Z2Mohy+4ZwXeZH+pI6vDct
XkPKKkNWzA2c38gHW8bSYcvCsFKFMz9qOfpLUa3jDdgRDVW9N/mRiflPhdBP
GbBr8FHrDg+8vioHZofCd5D5hXcx058fCR9OoWjaZENR4g61j0/5Ee/T3V27
v+XDjs1j3tXP+FFtkTmrk1kBhFlcKql8zo9uvZroNxsrgCtbUxXLo/mRdPC1
d+IsRbA1Qkqu4BU/IpV8tN1pVQI+gTKiaTl4/z4q6m8x+gAa1/fRhnznR0Fu
k15yWbWQ2awPD9v40axz6+JV9joQ2u3sG/iDH81/c+I861gH8yM5K/e6+FGu
sOg+Edl6eH1BftbnLz866PdIzynvE5CMDg5cn8HnLZ6Uld/bBF8Pq9YZcAug
5alQq4/fWyC42PWfJo8A4vCZlJsgfYcTiln7D/MJoKfFDOK66DtUyUnEbxcU
QLwL7SKFWd8hT5zkPi8mgGoW38nyPG2FKKZ26ch9AkhV/cl5BYt2uNh29VHX
aQG05LcdP7Y7YdnhpaF1qACKr2xIiWzphSdeyUy3wwSQmUfgw4MsfbAz+G1Z
XLgAEnleGy4u2wdGb8q2/44UQMlFHSXzN/ogd+T3nFGCAHK5WZzlt9QHjrbC
ETrZAigwMo0vdks/9FnEtR9sFUBXu7aw/RIcBPdrr4OM2gVQyd/28WiVQeDw
fa96q0MAlesbNmiaDYJabEVKzi8BpHTmrMKl2EGI+dVzS3ZAAO2MIjpStg3B
2XMifBLzAqhetOFDttAwNOgnGLHzU9AfDo1TInSj4FA79IGJQkHVcrFyrttG
gV1ZVppuKwU/D6P03imPgoFoyeriNgqyjFlMLLk+Cr+nWhP6JCmov7SQdLxr
FKjBjON5ihS0t67SpjZtDMI2dA0zlSio9ovhBWrVGMi7PCtPP0RBpQf4FGe7
xsDjvNiTODUKevld5scD1nGgk1ZRCDxOQceOwpVWx3Hgq7vmZ2pEQbpDcjaZ
UhNQrJw/cvYcBV1miJDUUp8A03er+qfPU1AVffdY0dkJiH8WuP2YBQWJ6r/i
57ozAdI2rxr2XKKg066U8Fc/J0B1s51M64rrrX8Z3PSehD8uQj7/3ChILsGc
L+/JJNwZvjC04EFBst9cRRSTJ6H+C7Vo3IeCUrmzH6Y0TsLpWJJF+30KIjXn
xkjzToHNIdW0tAgKaqmdHgxImAL7qS8L3ZEU9P3o2+1TOVPg9MrqGDmagtYb
EmK4aqfgNvO9vz5xeLxzXsvjkSmI7WoUMkiloHHrAVqT3VRIfmzmEJhOQUcD
ibj4w1TIODJVXJ5BQSk3GloTdKhQ8obLWCqLggyukVpaHKjQ4XkubK2Igipz
7w8MvqZCz56xP/tLKcio6y7Tch4VBv967blcTkEs5jc9P1Zjn9GKb/peRUEx
dz0P3+2mAtfWIYa0Rgqq/3tUPoqDAIGvbobdnynImOJebLeVAJG7pCTurxQ0
ekwsakKSgD3ju8GnlYJCR0MDBbBfaZe6eJ75TUFnPVZNZ20JOHOdoSGgh4Jq
6Pf+uXadABOJSP7yXny+jUIS8e4EXA4uyds5SEEi3WdVhLHvXVfXoTMfpqC0
rrMl9k8JcJvt1n86iufncdO7Go3915SG+m8SnxeLnVhwOgEhHOGq+wkKupXj
yZOWRUB4zfYQuxkKomk59NC9kIBXMiekvy9Q0BsrHc8D2E/T/3S6MS5T0KOr
DwuEG7HPhzvUHV6lIIqh3nLJVwI+rD62Sd2goPwvNpLsXQTUZYrm/KYRRHte
nO+p6SGg2SZnk4teEL2M36m0G/tzO/9RPc0tgmhHnc42TezXv5vaY72ZBNHd
qFpvnnEC+v3sJrKZBVF2PiN6hn18/MDyoWFWQXRMhO58Hfb1meGHQUIcgij1
uXjRmzkClmOEfupzCSLeAW1dtEjApt57yQCyIDIV6mV9uIz9mB5ulfEKIrue
0vF7qwSwF7XUTPMLohdBB3v3rRHAe9WGe6egIPp8deffJ+sECInOW5kJCSL1
qV9jiRsESLQ9yAzbJogk3orNX9wkQCZQYL1OVBAtR6C1Tsz7D7/R+SeO+/3/
/8/wP/UZ9o4=
          "]]}, Annotation[#, "Charting`Private`Tag$15869#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Pw==
          "]]}, Annotation[#, "Charting`Private`Tag$15869#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {0., 0.9999999999999343}}, {{0, 6.283185307179586}, {
        0., 0.9999999999999343}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Horizontal\"", "\"Vertical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.71974995588649*^9, {3.719750005119372*^9, 3.7197500218382044`*^9}, 
   3.7197500695544605`*^9, 3.7197501713292956`*^9, 3.7197502147728405`*^9, {
   3.719750413860669*^9, 3.7197504168201995`*^9}, {3.719769079588338*^9, 
   3.719769102718137*^9}, 3.7197691731877775`*^9, 3.7197692467064466`*^9, {
   3.7197724851481175`*^9, 3.719772487165465*^9}, {3.7197725265130053`*^9, 
   3.7197725438587055`*^9}, {3.7197927310756826`*^9, 3.719792758076233*^9}, {
   3.7197927934288087`*^9, 3.7197928198117824`*^9}, {3.719792851948468*^9, 
   3.719792857147391*^9}, {3.7197929896460924`*^9, 3.719793023548936*^9}, 
   3.719793059021551*^9, 3.719793142829172*^9, {3.7367057810023975`*^9, 
   3.736705792346858*^9}, {3.736705849756693*^9, 3.7367058633669195`*^9}, {
   3.736705916901515*^9, 3.7367059493097897`*^9}, 3.73670598748405*^9, {
   3.736706018736004*^9, 3.7367060455189257`*^9}, {3.7367061299462695`*^9, 
   3.736706173605247*^9}, {3.7367062060447736`*^9, 3.7367062341871567`*^9}, 
   3.736706442607086*^9, 3.7367065565366306`*^9, 3.736706791865881*^9, 
   3.7367068547604384`*^9, {3.7367069264680395`*^9, 3.7367069645485463`*^9}, {
   3.7367070424911427`*^9, 3.7367070918692284`*^9}, 3.736707199219686*^9, 
   3.740400984475918*^9, 3.7404010903728724`*^9, {3.740401150697323*^9, 
   3.7404011658890696`*^9}, 3.7404012466739388`*^9, {3.7404012831446085`*^9, 
   3.74040130624133*^9}},ExpressionUUID->"3228c21d-af32-4fc6-bfa9-\
a79d145c6249"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.71974995588649*^9, {3.719750005119372*^9, 3.7197500218382044`*^9}, 
   3.7197500695544605`*^9, 3.7197501713292956`*^9, 3.7197502147728405`*^9, {
   3.719750413860669*^9, 3.7197504168201995`*^9}, {3.719769079588338*^9, 
   3.719769102718137*^9}, 3.7197691731877775`*^9, 3.7197692467064466`*^9, {
   3.7197724851481175`*^9, 3.719772487165465*^9}, {3.7197725265130053`*^9, 
   3.7197725438587055`*^9}, {3.7197927310756826`*^9, 3.719792758076233*^9}, {
   3.7197927934288087`*^9, 3.7197928198117824`*^9}, {3.719792851948468*^9, 
   3.719792857147391*^9}, {3.7197929896460924`*^9, 3.719793023548936*^9}, 
   3.719793059021551*^9, 3.719793142829172*^9, {3.7367057810023975`*^9, 
   3.736705792346858*^9}, {3.736705849756693*^9, 3.7367058633669195`*^9}, {
   3.736705916901515*^9, 3.7367059493097897`*^9}, 3.73670598748405*^9, {
   3.736706018736004*^9, 3.7367060455189257`*^9}, {3.7367061299462695`*^9, 
   3.736706173605247*^9}, {3.7367062060447736`*^9, 3.7367062341871567`*^9}, 
   3.736706442607086*^9, 3.7367065565366306`*^9, 3.736706791865881*^9, 
   3.7367068547604384`*^9, {3.7367069264680395`*^9, 3.7367069645485463`*^9}, {
   3.7367070424911427`*^9, 3.7367070918692284`*^9}, 3.736707199219686*^9, 
   3.740400984475918*^9, 3.7404010903728724`*^9, {3.740401150697323*^9, 
   3.7404011658890696`*^9}, 3.7404012466739388`*^9, {3.7404012831446085`*^9, 
   3.7404013062443323`*^9}},ExpressionUUID->"e6eaf36d-a629-4e1e-bcb5-\
16ee6b73f56a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NonlinearModelFit", "[", 
  RowBox[{"data", ","}]}]], "Input",
 CellChangeTimes->{{3.740401540993874*^9, 3.7404015459606485`*^9}, {
  3.7404015781103067`*^9, 
  3.740401581870058*^9}},ExpressionUUID->"11e604d2-8190-4c0c-b425-\
3ebab2a2746f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Looking at how the small angle approximation might be used to calculate the \
angle\
\>", "Subsection",
 CellChangeTimes->{{3.7197503357783003`*^9, 3.719750391341377*^9}, {
  3.7197725317395306`*^9, 
  3.7197725334516854`*^9}},ExpressionUUID->"5d1af739-e29d-49bd-9030-\
e8547da9b25e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "balancedIntensity", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7197501280868626`*^9, 3.71975016843011*^9}, {
   3.7197502524080973`*^9, 3.7197502852941494`*^9}, 3.71975031602975*^9, {
   3.719750475886902*^9, 3.719750524206856*^9}, {3.7197649665204463`*^9, 
   3.719764966800584*^9}, {3.71976831920722*^9, 3.719768336174403*^9}, 
   3.7197691900387807`*^9},ExpressionUUID->"4af3ba28-f37b-45ae-9324-\
58379e50fdb4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw13Hk8VN//B3BrlrINM0aKaOEj7dai90mikIqSsqYsCUVZKktSSKWohBKp
EClblixHopBK1uz7Nmbmyr7md79//Pzj8XrMnXPveb/PXOc58xhydhdN7Lk4
ODikeTg4/vebGwv+7FMN3Gu7sEz+ELBxpGSPzCMbuHgiN+Mzmecztp1ribwI
Gl8EK1eQOXMaGsXee0O5SOPBX0sEDEg4zeZGBoDBpjp16UUC7klVCr0vDILq
5VfPGHMEJClaxnO8D4Htd377as8QUKo+tt004S6su/l1QHySgFa9W2VvIh+A
4/H6Xtcx8nxKq5R8yyKAr1/5piGTgJCdTR5vCh9B90lm/bshAiR2JxT+zHkC
K9uEGRG9BLzc58wzm/4USs08/8y3E7D1kMphueQY4NjYnzPUREDh0X9PDBKe
wZdCrqfmtQQ02kQqxEXGQ6HX6Yavn8n57Nqq0VeRACqZxk7lBQR4qz9q9y57
CbXcTpf1MgngAauNLwtfgVLcVs8/Lwio1imrUs1/DaLLL7KHHxMQoafgVp3z
BhaeFsz6hREgY/w3dyI9GXJYgns0rhDQf8zMIjQ1BTiPL4RbORGQdqJweU3y
W3gxzveU35IADavbB/US0qB797nbY/sIMHGRao2O/AAv6289FOInYJUG4Cj9
DNgnl7zFYZYNYwXuYj0VGZC2t3un3jAbcoubPnqWZcIn/UiPuK9s2F+R8O9F
YTYcapelZ/ixYZN+/dERzRxYkNTdbejMBsEq3le78nPg82gD66IZG2prnPUr
cz6CRrAxOrmFDVYNKg//pudBh8V1n6RGFiAzx949yvmwL09jOaqEBRv+xKgE
p+ZDmOJctngyCxht//6sTi6A+jA/yWwvFnj3VcrpJhRC0PwVjceiLIgYt8yO
isSwNoZ3neY2JtynxmqVCpVCZc2P4vvCTKjLvC2ralIKiVWCU2dYo2DBsByQ
aSsF43fnIu6+HQU3i5Xu48zPMLrlWtqk9Cg81nYKjREth1V5hqs+jIxAS4vp
BeET5fChWuPEoc8jIOMFxkEx5fBkxelS1+gRSH5Pk3CVr4D7BTB68sAIfJKt
iEcqX+FysVHY15hh6OKUzxs6WQm7uqxMCrcMwYYXQrGWzyuBtnyz2/TfIDjt
nvP93V0Jj26oqwT9HIRxj1qdwvNV0KjjHfPWdRB4+v1/hl+vhk8iQnhL8gAo
fW0bUI2vAXlfR992vn7YU2EgqHO5FnS2HZL0DO4G0YakX+qPauHyQOytp0e6
ob+X68mW7FpIeGba4UPvhnCOQlmpiVpo2W0bNGPSBb17NquOefwG+V/5uqoR
HRCatdL2hUcdcB/a68cz2wJN8TUf590b4Ml185BX1+vg0jXjM9mX/sA6ImdR
QyEJDNy0Uvgf/gEUA8Hm2omw3k6JsPrwB0rnCjTPJT2HpkMr/PjZf+DGtguL
2nN3QFuqJNrqQguUVqXUHDWPxIL5W2r5HFqB3zjwqc2eHPxmahVYWrRD6eH2
YrcXVdh/ZP525rV2CFc9W9XwqBqbdwzXrIhth27ZvcMNod/xqory05l/2oFH
RD37sfsP7PHY12uFWQf8p+8o2vSiFqNdzPSMo52gcyMwI9i6Abvm24dzre8G
Ttm6zb/j2/DWQ8fWcap0w7D1kVnV1e14rEUra1m3Gz4KzU1IP27HVxbEmxYd
uiFI9UuvXXAHvra3bO1Majc0c6rzvjzXhYPLZdJHd/ZAr0fUN56gHnzwhCAw
9veA/P1y87LCHiwwOFU7fLwH7M986Ns22YPv8f2YHPDqAVGFZyzauV78yOC6
VvenHlAX7TSZgz6cUNv8vUGnF+pnhc01hvqx3ZkvVvWmvfDjvp9j4OoBvH78
PfH7XC+82ei458LhAZwkHiz+K7gXQjJOPVubNYDTzVQsqqrJx/0OBPd7DeJP
7Q8ZxSZ9oJzhJL+HNYR9XX19i872wciFtdGKq4ex9j9H4cIrfaBtrWTwVm8Y
l8rCzvyoPliWIPadeTGMv9mxrma19oGS2jXuqIMjuGH4kECyXT8MvEx3cw1h
YCJG8UCQRz/cTFmplJ3KwIKGfIE2N/uBmn6P+vAHA6P08lnJxH4wSrt2Wogy
itPcYTi0px+8XRN5+aJG8Vd5mQ32f/vhwjH/hJmPo7i7ftFmH+cA7DnLfex6
4yimqX1qnls3AAel9/HuFmfim/Mq35xtB0A/Jyw65A4Tx6WJc+tfGgDnG3zZ
3ElMnG85vnf9jQGodsvYJVLGxKySD7lt8QOwttk8o26Wic2DlJKMugbgnIjx
9LItC29bte72VutBSGjk8H4uzcYGxf9KBd0GgSLNu65rOxufc+tYHPQbhCsa
SDbtABvH1sZeiY8bhANIo63DlY1XPKGeE+0YBM7Omu9v8tlYTm8ynskks4jL
c6VqNtaaqWurXByEOydKnNTa2Nj91EPTwDVDEOx0mtGzwMbta1fuH7cYAvyK
MztQncAzP0f8f14YArvJn57qBwhMuVH5KfX6EGRcTzvqYULgg723d559NgS3
u7xueF0g8NlH59wgbQgehFAugzeB/XX3p0oXDsGnAHrBvZsEzk7ikG9oHQLX
0dgH2U8J/PNkl1UGYwgMCidr7r0k8DB/Scy9+SHIbr2SN5JKYO5PzxudBIeh
3NZYqTqbwDIXrosdWD0MXrFxXFuLCKy55vRhOaVhyHjkJEstJ/DxHxp3ljSH
YTw6/kzAdwKHbZvmyD01DJfE3va1/yHwNe9DmwedhyFzMuPLoS4Cn8fPT9B8
h0EvODZo/QCBzfnGAvTuD0MR5zl+ZwY5vyP7U71ekFk3W3MtQWCNp1ENSR+G
IQiaOLUnCKzYNfKvqXQYFsy/HK6aJjBdQfs/vrphePlVSqhsjsB8Fx+aqvcN
w8Y/cjsVFgk8ndvn5zg5DO/UfmTOLhF48J9aylPeERiTzAtSWyZwk15Y3Tfa
CLDPbUjsJvPX8I7FGYURsGzgFpwhc27TdgVFzRH4M8v6dJXMb2RuHTM3GIGv
OhvznP4R+LFD8/VQixFonXrCXU6e79Z7paR8lxGwozQl350n8JVpv9phvxHQ
27nxPZ4h+7X39zz9wQjknXJZbztJYJPgDRsPJYxAeKG2JLk/wTo/vY9czRyB
a+4NzwZHCbyT9v3q27IR+Kkg8bVmkMDy1jKvW+pHQLI4NF22h1wfSe4/BQZG
4EKjvUtXK4E52eWzmtMjcOlMsOyqBgKPqdLXO/MxQE3KZfBNDYG7/S4cjqUz
oJCxt+8d2b/aihLv6v8YoGNZs1uO7G+pECVxfjcDLvcGS3CT/c84YV+jZMSA
Q0q3Y03eEjg+Ln/6tBX5fLPAOZF4cr1tsTEsDGCA7/FQrsZQArt5ZnmOPmRA
/e4d4h2+BLYq5k2QTmTABjNKteklAmsdfjd5vZwBLSmPJcJPEFj5ybLMu0YG
IOPv6030Cbymw+RQ+yADVKrtam9rEHjBZS5OS2AUOD+HUbWlCMzIMap0WT0K
FMtbez/zE7h1MX78+eZR8L/8fmPuDBt/uqenv3R4FBqXWi5M1LOxz7tHY8WR
o2C/20+i4jYbO00Orma/GoWvYZWn/lxi45Nauw/IfByF1wEBq20s2FitpjvG
v3kU5N+oxVVuZePJ0S37YQ0TpOSEZSR/sbD75sonpW+Y0BrrTPBOM3G/ff+N
hFwmPGn3rRFpYWKzBA6XG9+YsOaV65GYQibeTdXUQSNMiK7xO7ElgIm5lt+y
sTILAl/q6zpxMHFk3V19nM2C83oHBpJHGZhHKGVnfDkLXm79a8X+ysBe+uVr
A8h90hqdLdnFLxn4dNHixN4ZFvBsPXB37gQDyye5JpTsZsPL/VvvzeaP4Kyr
R+aKP7NB4ojrng/nh/GGnAv9cXVsCHc1udqoPYyj2CG//PrY8JNZ1fZAbBhf
O1v6RpuXgH+fVTeU5w1hncM7TIoPErDmv+4ytDyI69eJpxX9IvepvMZy6PoA
nj974X2H2xgM+kek2G7pxbZiEz5FXmMQ/0l2p8tcD64oubb/mf8YTOMNm3ZW
9OCHUmF/zMPH4F+fhfeYRQ9W+JXC1ZA+BrRTEWsOB3fj47sHzaqZYyDmdnP/
1Rcd+L3omeVc57/QsNTJSrvYhO2KzY4+dBiHmpiYJ3FpRXhnLp0idZHMrKMb
4+59wlwfWutfeo+Di31R63rXfJyYYH0yO3QcbPkP2LKUc3BvkIN1U+o4KH4L
L1o+moztDLxc1hDjcCPpPiso/gnYNT8JTfGeAHqvR7ZD5hfYWXvSYMeNCYit
/cEUxeXAVSW16lPoBDglSeVa1lRA4qe4B99jyBw3Wlcx8A16495EsQsnQLmy
44m5eA3Ynfv4WoVjErZYPFyTrlQHZ/82lJaGTsKozbeNEkqtYHvt4cn8h5NQ
OqBQoPqiFSy5jdgfoifhtqtONkusDcyoX6TjUyZhU+JyhtRsGxzUzPTyq5wE
7m21K7bjDtgaeF95N/8UvBBTrHZ41g2zonrR2SFTsOPkcbGZrj6YjOHclvZg
Cjp6zkZ8EeuHv/LFFYlPp8AoYMoD7e8HhorKRETyFGRahBscfNMPHebyxpe+
TcFZrnC56/YDUJbwj3sL3zSMJi1ZVTYOwr3teReTgqfBeaXLxnXuI1C9s3nQ
M3wa5CYkvRujRoBfdcbqQNQ0KGys0fivaARuaaob9b+ZBs/uGw1veRlwXSdP
Ub5iGs52/9DgeMwA5+N5PXHcM7B9m+78vbhRSDFrNnddOQN1BYHNI0WjMGg+
80tLfAZy9gRPtLeNwhkr9ZI2+Rmo1r0qdovOBHOHvFgpnRnYHyt2puoeE/R9
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
AexFBWM=
       "]]},
     Annotation[#, "Charting`Private`Tag$21074#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{728., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999986633107022, 0.9999999999998685}}, {{
     0, 6.283185307179586}, {-0.9999986633107022, 0.9999999999998685}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7197501738283005`*^9, 3.7197502213022747`*^9, {3.719750261680033*^9, 
   3.719750285649642*^9}, 3.7197503170712147`*^9, {3.7197504958073435`*^9, 
   3.7197505244805775`*^9}, {3.7197649623007407`*^9, 3.719764967358557*^9}, 
   3.7197683371855583`*^9, {3.7197691807628784`*^9, 3.719769190525535*^9}, 
   3.719769251752276*^9, 3.7197724917965865`*^9, {3.7197725357722497`*^9, 
   3.7197725467646637`*^9}, 3.7197927340380917`*^9, 3.719792824629157*^9, 
   3.719793064199301*^9, 
   3.719793145232701*^9},ExpressionUUID->"1b4942dd-29d5-4f95-8312-\
d0e603b5f4b3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "100.241024"}], "-", "80.14339", "-", "60.089653", "-", 
  "40.026209", "-", "2", "-", "0.050660", "-", "0.13962", "-", "0.236814", 
  "-", "0.347976", "-", "0.419948", "-", "0.34255"}]], "Input",
 CellChangeTimes->{{3.719765696513918*^9, 
  3.7197656965159187`*^9}},ExpressionUUID->"e8aa91d4-9b3b-42b4-aba0-\
8a5ff5cb87d0"],

Cell[CellGroupData[{

Cell[BoxData["2"], "Input",
 CellChangeTimes->{
  3.719764962833256*^9},ExpressionUUID->"f82ae853-64b7-4345-9f73-\
e6fef3215709"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.719764963253076*^9},ExpressionUUID->"3d4cd61d-8510-4c26-8e71-\
23c75311c45f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "newLR", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newLR", "[", 
   RowBox[{"\[Theta]_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"LRzero", "[", "\[Delta]", "]"}], ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.71560476199966*^9, 3.715604800756598*^9}, {
  3.715604903096141*^9, 3.715604914359105*^9}, {3.715605021326182*^9, 
  3.715605129704427*^9}, {3.7156053769256563`*^9, 3.715605460928596*^9}, {
  3.715607719853651*^9, 
  3.7156077349942293`*^9}},ExpressionUUID->"84462be7-46c5-4b3c-bd72-\
19eaa1b28704"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"retardance", "=", "3.38"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shift795", "=", 
   RowBox[{"42", "*", 
    RowBox[{"\[Pi]", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shift633", "=", 
   RowBox[{
    RowBox[{"-", "20"}], "*", 
    RowBox[{"\[Pi]", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shift", "=", "shift633"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"theory", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Legended", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"LR", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "+", "shift"}], ",", "retardance"}], 
               "]"}], ".", "newLP", ".", "inc"}], ")"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"LR", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "+", "shift"}], ",", "retardance"}], 
               "]"}], ".", "newLP", ".", "inc"}], ")"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"]}], ")"}], "]"}], "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"LR", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "+", "shift"}], ",", "retardance"}], "]"}], 
          ".", "newLP", ".", "inc"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "\"\<FTheory\>\""}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "Automatic"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Percent Linear Polarization\>\""}]}],
    "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0H0s1HEcB3Bd62SXspKHK3NYR56yMrluLFzssFbkaVQLNXV2uMrhnFXO
7djt5mk3isXp2bjkobJV7kZbOJ0oZbIa526IpYRard/7+8dnr73/+Xze+7il
58Sdp1lZWXGogQVJeodN7Qth0TuS90JXKd8d1p467A9vessOQc1mEw9yZiyx
UBv/g8genTgDjScL06G9SSiAlkGfbJhfu3gZSp42XIVZu4ck0COHWQwXGSM0
GiXz3NQW+EdS7gmX4lXEqU65H+QenQ+BRu2+E3C7hJ0J1/VZp90p6RFCYoND
Rh4cdA4UwcngsCKYrn9eDIu+3JDBz1IXJbzEVNXAFWY7Ud5WUgdTk5Jb4Li9
YBwKGwQfYEVryiScaRURB972zUDnabEZ5q3KvsEpadsyDHV+8wv+da1Yhw++
Km08KEfmlxjQ3TpqF1TV2zoRtf0ukP7puhc0mBN8IXddHQBZiq5A+K8+mQNp
IYJwWKI3RkDeBJcP1SnviZOF/nEwmNGZSPboPmbAF7o14rSjUwGMjPGWwYNp
LAXcObtaDhsd6Wqoa86sI723yh/DVNuaDhjebe6FAVF7XsEuL685aN/mY4ai
0ZGH7yg9XxsewSxfhR52yNYG4H236tIxSkbotjLIWublruDOCjsPPvkdJIaa
/XzivZb8u/BCr4rIqJP3wWFvYz+8EmMYhHaVY0NQZNMzDrWNaSbY03rk2k/8
h+VXCmeTEsrhHY9hJdR0N1XCOOWtKpIlFv4qZdPG91jIC3x2EfofEwuhKcit
CtJz2dWw8rjqNlQqXjZDo92YkK1dCDtwNlIM56zzpTBxVkLkbVjKoCabp4D/
Afpg28I=
  "],ExpressionUUID->"3260b323-01e6-4088-90a4-fbdcd3b9e676"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Mc15aWePwg7tt0ZLMqLIu0n4u+mXUfgfk9TiRA==
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$17427, {}}]& ], 
        Annotation[#, "Charting`Private`Tag$17427#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Percent Linear Polarization\"", TraditionalForm], 
     PlotRange -> {{0., 6.283185178951315}, {0, 0.9999999999889796}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FTheory\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7151774983056064`*^9, 3.715177505649836*^9}, {
   3.715177537745679*^9, 3.7151775521216164`*^9}, 3.715177668785472*^9, 
   3.7151778728612785`*^9, {3.715177944381566*^9, 3.7151779773055882`*^9}, 
   3.7151783007557197`*^9, {3.715536190847546*^9, 3.715536215069869*^9}, 
   3.7155364326435595`*^9, {3.715537949698369*^9, 3.7155379608348775`*^9}, 
   3.71560130490495*^9, 3.7156013387335663`*^9, 3.7156017282737713`*^9, 
   3.7156019270050683`*^9, 3.7156019596743755`*^9, 3.715602155992646*^9, 
   3.715602219579122*^9, {3.715605473408619*^9, 3.7156054886876287`*^9}, 
   3.715605532108633*^9, {3.7156055805673532`*^9, 3.715605606776719*^9}, 
   3.715605648028674*^9, 3.7156071441436653`*^9, 3.715607377568747*^9, 
   3.715607439239624*^9, 3.715607697700408*^9, 3.715607742921381*^9, {
   3.715607806373892*^9, 3.715607822699544*^9}, {3.7157077496771297`*^9, 
   3.7157078348623505`*^9}, 3.7157078844957833`*^9, {3.715707953533607*^9, 
   3.715707971231892*^9}},ExpressionUUID->"661144f6-1488-4152-ac17-\
6b04ffb2e55f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"Show", "[", 
   RowBox[{"plot795", ",", "theory"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7151772341790156`*^9, 3.71517725563354*^9}, {
  3.7151773860170364`*^9, 3.715177387298374*^9}, {3.7151775913429284`*^9, 
  3.715177618125929*^9}, {3.7151776770047607`*^9, 3.715177680676877*^9}, {
  3.7151781700056515`*^9, 
  3.7151781752560077`*^9}},ExpressionUUID->"1fa38b2e-702d-4caa-b6f9-\
cc5c29708263"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnV2LHFma39vrG1/6K/hbmLnzpW/X+HLU7Lanpn2hMWgX9y7UhVJsr2ho
4RG4hcQ6cetCFyNQw6qp6hckoaqykFBLJKKWlugSPchCpUY1Rj0U/YKGoXwy
T2VmvJy3iDxvEfH7kRRSRsSJJ05Exv885znnOf/ur//bX679xVtvvfU3/0b8
+cu/eu8/nDr1V3//n/6t+M9//s3f/Ndf/+ZX/+U//uZvf/XrX53693/9r8WX
f/Gv3nrrgth/+u8jAAAAAAAAAAAAAAAAAACAnjEZr5kYTyLY8HJzVDiP+J84
8WjzZfDzyms3XmI8Y1ojTfR5/xzqxdku/1WX6mmJg7wefd3P7s3x5cr7pLr2
xTOhKKhUY/4fnlAobnTqJ6FwRvNrtFSR5SpX1bG6sOjPeN9+Wj0luYLX5AIF
b4bxJdzqp5+xgid8WuLQRMG1Er58JLTbjs/g/+EJRfVGJ38SZucr3wnrW1Rd
3ZW7rbknKe5E6RohS/y8rbtpQPJr94LhzTV/FzT8DWZcLxmb5odGCq6pjuMy
xmPVrS8f4v/hiUXqJ2F2fvPpy40lZc/IsfKX6niivG+JcLhMSErqHwIKvipm
30Pf06on43rJ2DQ/NFNw9b0/3mei2lg5wv/DE4u0T4KDc1rV7/oXkuqF2J6A
yGTVnoA6bj+EeUts0Vm0vKXVPh9jWK6yvdr3NDND81Kp7KvseZoeVNjP9tw1
7kV3Pos91mWpN0OFm010u0hzZSoOaWFt2S5DN2M1tqnbmPBp0dWxumtXd1oX
mim40rDFLoqyqvu3eXhUm+316FA1xl2KliZ+b7jImkKudZWpapQ1e3LsV7E8
d+EHVunK0Vx7Zi0KqNBEwcfjyn3WRdGKxan2mW93/CXqTlPYx2GXVteuUnDL
WRxiXfZ601S43UTrRTpcQ+WQltY2V3DLiVI+LepKdhgU1tR7aajgime4sEe9
sOrhXhR8XLu35QJdqttaey0UPNR7w0HAVb0XRgUvvxPFgcVrtL2e7Vehu1PF
Zrfu2nvf79VtGih49eYePzeKtl797V+OuxlfQWo3Qf3bVLz8K2cyXdoKCq49
i6LtrQmHGetNWeEuJqqvsVZPxsos1Utra20ji6oFu5wo3dOiuprSd/V3tqbX
1ExTBTd3wlY3Nhz+ZetFX778az/4hnfEXnuNR7KFe29YvVL1ndfUZjkUrh1a
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
    "], {{0, 258}, {662, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{662, 258},
  PlotRange->{{0, 662}, {0, 258}}]], "Output",
 CellChangeTimes->{
  3.7151776184228125`*^9, {3.715177673176385*^9, 3.7151776813019123`*^9}, 
   3.7151778059662933`*^9, 3.715178175584141*^9, 
   3.715178306537347*^9},ExpressionUUID->"5ee921d5-f81b-4162-ae4f-\
d685a5948da1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"plot633", ",", "theory"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Rasterize", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7151778934094963`*^9, 3.7151778953940015`*^9}, {
  3.7151780151361775`*^9, 3.715178037497017*^9}, {3.715178183069008*^9, 
  3.7151781884599833`*^9}, {3.715707873840251*^9, 3.7157078751836367`*^9}, {
  3.715707912216216*^9, 
  3.7157079254245157`*^9}},ExpressionUUID->"72c73b5b-c91e-4181-8b49-\
682c7a5dda15"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledCircle]\"", FontSize -> Medium, StripOnInput -> 
              False], TraditionalForm]], {0., 0.}], {{{0.17453292519943295`, 
          0.952}}, {{0.3490658503988659, 0.9802}}, {{0.6981317007977318, 
          0.9193}}, {{1.0471975511965979`, 0.7678}}, {{1.3962634015954636`, 
          0.8048}}, {{1.7453292519943295`, 0.9489}}, {{2.0943951023931957`, 
          0.9646}}, {{2.443460952792061, 0.7951}}, {{2.792526803190927, 
          0.6917}}, {{3.141592653589793, 0.8619}}, {{3.6651914291880923`, 
          0.9635}}, {{4.188790204786391, 0.7075}}, {{4.71238898038469, 
          0.8916}}, {{5.235987755982989, 0.9676}}, {{5.759586531581288, 
          0.7677}}}]}, {}}}, {}, {}, {}, {}}, {{{{}, {}, 
        TagBox[
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
Mc15aWePwg7tt0ZLMqLIu0n4u+mXUfgfk9TiRA==
            "]]}, 
          Annotation[#, {{Legended}, Charting`Private`Tag$17427, {}}]& ], 
         Annotation[#, "Charting`Private`Tag$17427#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.759586531581288}, {0, 1.2}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"HWP Position (deg)\"", TraditionalForm], 
       FormBox["\"Fraction Lin. Pol.\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> 18, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Fraction Linear Polarization vs. HWP position (633 nm)\"", 
       TraditionalForm], PlotRange -> {{0, 5.759586531581288}, {0, 1.2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FTheory\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.715177895737771*^9, 3.715177947725535*^9, {3.7151780225741634`*^9, 
   3.7151780643268857`*^9}, 3.7151781888350058`*^9, 3.715178271090368*^9, 
   3.715536242755535*^9, 3.7156077748906393`*^9, 3.715707839354149*^9, {
   3.715707875663458*^9, 3.715707887712372*^9}, 3.7157079259851675`*^9, {
   3.715707957715884*^9, 
   3.7157079740891113`*^9}},ExpressionUUID->"27641a65-d287-4285-8fd6-\
114e13d7d5df"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3V2vJMV9x/GNc5PLvIW8i8h3ucyto1yyBLAPRAp2hKOgxFzsrIUJCUhg
GccEjWSIsBIUE2GLAdYshl2jXS9EE4TjJSyytSFwkNcSkBUGgaxJTdd0T3fV
v6qrerq7anq+Hx2t9sz0Q/XD6V9XdXX3H9z8lS8cfe7EiRNf/T31zxduuvOP
7rjjpr/5k99Xv/zpl7/657d++Utf/OMv/9WXbv3SHX948++qDz/3OydOzNXw
6/+vAAAAAAAAAAAAAAAAAAA4HMv5kc98OUIZjhez2nzUb2rGs8XxsDPVC+5d
vpFKsgtdxD43XsB6CS5X/6suya4yGr087nVfbJvN4urtJC17tU8IE2qssf53
nqEIGzr1niDNsXEwFQvTXOXyOg4ZZgxT++s6JMlj3YoRYj2C98jsPLj4ZBzr
qXaV0cTEujPXt7uE87vNHPrfeYZibujke0Ixv/rs5HXpSX3HETZkmPFYi4n9
0M9RfA8LkHzBe+E5nJUHmsi/yozXS8ZF60dUrDtWx2Ya87m06Zuj9L/zjCX1
nlDM3zqrqK+tcgVuB9oE9vYDe5CgYcZlLin2Quo/EGJ9J/5airuh1i3j9ZJx
0foRF+vytt8Ms5S+NMbof+cZS9o9warDyquqUUjvxgrZoKk2Q+LZo5OwP5Dy
nK1qItpuZ7P1yXu170j6czAamxwHG2NYo8TbkWrDeXfG6Eb44FkEXBvzrzTP
2vYXMWwh/WtSGKVDaZvl8lzpMa+Xur5MuKu41rHcMuyabYi4WHdf3t1uAWE7
+sc3J+Uuzfbr9vUYsGq8g9RLmvKgsZ2ofRjrvL39c2wdpn0ptuWr/YEZjT7u
ZW/bKZGhmFifz43t77o4V5+cNEz5feBfqGs2QpuXZ5D4BZdivWUW8kDekLQH
cqzt9iK2LmTAMhijdCxtfKy3zCjlriKv5IDeZ7GVnMhYF/bh2hD2xMzRe4n1
ubVtmxMMWd2ta69DrA+yJ0hrsfN1favFvdsw7Uvh2lL1c3HPsk++kWyCImLd
3Oj2BSV7NzSvDdnjtPZ+kS7zWZ9t921jTs5F2yHWnbNo9kgSPwpZaeLaDimi
vIzWSvKuSaHpsENp2w515oRDZpRsVxGXpvGZ3Qor7ArtYmPdcdrWOBOKWH3C
zFrPi8W/9sgt0r72orvMDbUnOM+W9Cf1lHSuOanK3GUYa1DXUtitftLkpT/B
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
lSDd3a5DiCSk8yu83n31+EN10qJOXZI/NC+QKqeud4dfbtCdzHN4aF4gvaPe
SG0dQK4yifXV6vrf3xfa/01l+n2PX9q7e45UsfVV8pBiq4rh7fc/v2M/tPGp
0qoyBzah6IcNqnWS8yV1y/X77zfPP9N31ASAUqq72wTXrtw+qyW7o/9blen5
X262qfqsbmTwJ7uq7apMV9XeIZ64PjTd4UGV319n1++5U2tjX9oitq5d+YvT
7TsqACSRRaDX6B5idz70klhLVR/qWNzHTNeqZH/kqdfERFN1WBWLqsK7j5mu
qZKr8qulEK+Yq6XW1yNm85f3L9NLekdVm3K/mlMATF5usb4qck2Fgg6+1678
SlXP1Y/6j84C9dVedK/yUIujl0VVaX94/i1dq/2f9/7vscXP/vYfz3nOavZG
7eb9v56/fOH1d3SbvKrIq+WtNu5etb0L6jvqxdffUaco+3uWAmAyMoz1VXFl
WXerNn7Uh/uddzXqREXFd7VoNxT/3vp3z6lq4F7nnfVQX7PruFrq5C9d7Yva
G40dNXWJABy6PGNd++D6J2dfuapiTv2omlE+b/XqkaqqqwqsWsB/e+G/v/fc
zz/6+LPUJdqN9Fq9Gx78z8eKjVg1TUyMOgt9bPFf33j04v5eG8K+uvLA50+Y
jh4QPjxx4vMPLNTnR4vURcbQco71wzKJx4w73nSzx0sEZO2KN6mNb/0DYyqI
9RxM5jHjjljf18UBckesw5LL3W2HTGq43tfHjGf5Wj1gsjrE+uJo01a//aL8
yBy4bL2/Un7y+aOj9acqNKxhOV/IBpme3LQaroU33fC0FmAo9rX1erwKsV4O
sKiCeTvQ+n+bDN9+vf1vMfrmw8aUSfW8EOvJTa3h2nrTTeoCAbk4t3z7nkcv
dvhx3tUbXVuvVb23YV0NoyK8GMD5YTl6fQhSPTPEeno0XAOHQT/FqMOP8yaL
ztfWG7He7DB/ZZvkjUGbU6tPYDssMkCsZ4CGawCd9BPr1hTaq/D6c/UrqZ4d
Yj0LNFwD6GD3WJeb013X1hvzWuf6A6R6doh1ANhXPcT6qtYTvpbQYk94Y17F
eFxWzw2xDgDogs5y/VjOq3epHs2XLQMfL2YtQ2f0YlYAwP4g1XvQSOm2ZBcG
FoYm0AEAcTZN9IT6rnRFfbY4Fn8VB67lePGBNTSxDgBACnYuFxVyOdflELcR
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
    "], {{0, 258}, {669, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{669, 258},
  PlotRange->{{0, 669}, {0, 258}}]], "Output",
 CellChangeTimes->{
  3.715177895737771*^9, 3.715177947725535*^9, {3.7151780225741634`*^9, 
   3.7151780643268857`*^9}, 3.7151781888350058`*^9, 3.715178271090368*^9, 
   3.715536242755535*^9, 3.7156077748906393`*^9, 3.715707839354149*^9, {
   3.715707875663458*^9, 3.715707887712372*^9}, 3.7157079259851675`*^9, {
   3.715707957715884*^9, 
   3.7157079742127028`*^9}},ExpressionUUID->"b67749c7-2592-4a56-b027-\
a91e0f7a5a8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"retard", "=", 
  RowBox[{".25", "*", "2", "*", "\[Pi]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"newLR", "[", 
           RowBox[{"0", ",", "retard"}], "]"}], ".", 
          RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", "inc"}], 
         ")"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<Q\>\""}], "]"}], ",", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"newLR", "[", 
           RowBox[{"0", ",", "retard"}], "]"}], ".", 
          RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", "inc"}], 
         ")"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", "\"\<U\>\""}], "]"}], ",", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"newLR", "[", 
           RowBox[{"0", ",", "retard"}], "]"}], ".", 
          RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", "inc"}], 
         ")"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", "\"\<V\>\""}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", ".5"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"retard", "=", 
  RowBox[{".5", "*", "2", "*", "\[Pi]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"newLR", "[", 
           RowBox[{"0", ",", "retard"}], "]"}], ".", 
          RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", "inc"}], 
         ")"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<Q\>\""}], "]"}], ",", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"newLR", "[", 
           RowBox[{"0", ",", "retard"}], "]"}], ".", 
          RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", "inc"}], 
         ")"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", "\"\<U\>\""}], "]"}], ",", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"newLR", "[", 
           RowBox[{"0", ",", "retard"}], "]"}], ".", 
          RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", "inc"}], 
         ")"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", "\"\<V\>\""}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", ".5"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Legended", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"LPzero", ".", 
        RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", "inc"}], 
       ")"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<Linear Polarizer\>\""}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", ".5"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7156024921278353`*^9, 3.7156025750539293`*^9}, {
  3.715602731351413*^9, 3.715602825230633*^9}, {3.7156028881275682`*^9, 
  3.7156030877989197`*^9}, {3.7156031210961866`*^9, 3.7156031339669156`*^9}, {
  3.7156031737025876`*^9, 3.7156032800219707`*^9}, {3.715603327741719*^9, 
  3.7156033591580133`*^9}, {3.7156034270939026`*^9, 3.715603512806847*^9}, {
  3.71560358215024*^9, 3.7156036213978996`*^9}, {3.715607253332274*^9, 
  3.7156073205050373`*^9}},ExpressionUUID->"bb43f47e-bd98-495b-b14e-\
9278dfbbd382"],

Cell[BoxData["1.5707963267948966`"], "Output",
 CellChangeTimes->{
  3.7156032019622865`*^9, 3.715603233488204*^9, 3.715603266752286*^9, {
   3.715603313986062*^9, 3.715603318363041*^9}, 3.715603360312177*^9, {
   3.7156034302443094`*^9, 3.7156034672062855`*^9}, {3.7156035016147156`*^9, 
   3.7156035131573715`*^9}, {3.715603606486293*^9, 3.7156036226295786`*^9}, {
   3.715607267880443*^9, 3.715607288140216*^9}, 
   3.715607321441596*^9},ExpressionUUID->"f906cdd7-58ed-4558-957a-\
84b4f4b0dc82"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw1mnk8lN/7xmWdQcWMZbRKm4QiRUX3SSHxUZaobKUSUqGiJKXF0iJSSmUr
ayUhhOogJKkU2cm+zsyxG/vv+f7xmz9mXu/XPGfOfV3Xfc7zzDOzwuGs2Ql+
Pj6+F9TT/14FsOjP9s1+O2pn56gHgdW9n7cvC7OH3LJ1rgMUT77bcLzuwVlo
ppWkFVCcNgZ/Jd96gdYW/t/nKO6UcuJlPbgKVxSUyoQpvitXOv9t3g1oIomR
3rMEEhRtovneBkAEQ9D41wyBfM2BjeYxd+Da/s6/ghTX698sjH9wH4zyJbQX
T1PzKYkr+RSGQkup81XGFIEA9WqP+LwwcJMfiumbICC1LSbv5/tH4Pf9W+xL
HoHYnS6CvJTH8Hvxhhs64wRUDTX+W5EYAWtSffU/jBLI2z/7aG/MMxg5vYnD
HCHw1/7B2sgH0XDLZ1//6QFKzyZVrfbiGFgqtFvflUvASzOs0aswFo6v/XDH
iE1AEGxXx+a9BPNQ/+Y33QTKdAu/bf4QB79XHhlQ7SQQqr/2TNn7eDBszR4N
bSOwzGQwazglEU5MK3dONhLoMLW0DnyVBJVueVV89QReH8ibW5KYDLe0XhV2
VxPQsr21Rz/mNfiL1MQfrCBg5ipX/+RBKsT77e0sKSAgrgU43OAdBIl1Kvz9
RGAgx12ytfgd/N5m7F2UQyDrU3XmhcI0YJR4+OunEdhVHDMblZcBalyz27VR
BNYYVO7v3foedC3SxQYiCIh+E3q56cN7oEX9+tbzkEBFuYtB6ftM8FEdW+h7
m4BtlUbIYEo2lNjbWWidJ4AsT7ZtV/4Aytv0jQ6fIbCqNkLD/9UHGI89lGzr
RKCvYbZ2UWIOfM90S6fZUP61l67YHZMHunEtLwZ2Uv4M2WSEP8BwTmRl+nwa
gXvST7Xz5+fDzuCLHjFzXPiTdmv5ZrN8kP0dkLdwnAvWfTadyxryIXlYdeHN
Ti6csRZzH2IXQGDHZG1RPhce6jgFRkgUAbcy3/adGxfq6sxPLThQBGNjsxES
jlxY5gkmNyKKoGtF0gITay4kvpWROq1QDBm2sX+O6HEhd3lxNNIogbiNCWu7
Zbnwb55CdrdVKewP2fPsehYHVkXNf2rzvBQEfOd5f0zmgNO2CZ/fLaVglR7p
VPWcA0MeFbp5zt8g5GX2u6jrHBDs8P0ZfLkMPoSeCYsy5oBSSUPn5uhyGHGT
OHSong3bi/eK6p6rgMBFEw4bm/pBoirhl2ZYBVxzzDA99aMfOtr4H6lkVMBO
+dKbtz/1QzBf3nK54QqwkfQavxDZD23b128e8PgN0SHKv/lt+iEwXexIlMcf
CLyTVcBf1QfV0eWZk+5VYFytdlnqXS+8fqt4eSC0Cm6/q03nPe+Fa59uoq60
Krhl0WX7JagX1jVof/89WAVbIoYPix/rBR+ZlJYk978wsT1k4VmpXlh5756Y
lXs18F/kvQr06AE3b5OjGW61YLgjbvzZkm7Ye0Y7iRZSCwUvoyQ6hbthpYMS
sU2tBWl2nTRrsAuqDYWv0Li1wDj8RUu7uAt05D4/sT1VB1/ivqtede0C0Q8q
FSKO9SBqtCSMP7sT4kfFwca6EXQsrZdHaHfA6Q8ngvlXtkBeT+Bx5sJWqOox
pCc6dIBNtc+4cdYfuL1hjC/rUA+IbF/3Y4lwMrivL32UH8+GP7uFQ5w7vuPJ
Y6feNp0ZgD/+yl/hcxM+Ijl88aPnAAj+WmsyONqEiz9773rmOwCmRzh/b6k0
4xC527UHgwfghn2phNXzZrz2VxJ/VcoAHFa5f/DhxX/YYluXZRl7ACo3bWuI
f9SC30ocnctyGYS7vDZRee02LPW559sjj0Fwe+TVPHqgDV865fbwvPcgGEjJ
DOecbcO7S66uU789CCUuhZfFX7bhhstR5inJgzCe1WJRS2vHtO6GxJc9g2CU
4vxutKIdO3yy3B/iOAT5JQGLo806sXoWiyF3dghuFYRsE3HtxPyp9ZWxXkPA
tzKXZ3mrE7+IsbPKCByCg8Om/95kd+K2G4521a+G4FXMwOYNi7uww15P1yVk
CKZLh5wuNFFc8ygwyWsYvqglte4x6cHqFVZ71a4NwzE1hV1nj/dg/m9y4rmB
w7BJ+VjbJe8e/CI38v73iGHIthb03J7Qg9si48O5ecOQyti5/fR0D3Y4nhmn
wTcCzDDZ4Qsve/Gxwar8/MARGGTMu3qxoQ8f8Q6x+hAyAgd+0nM+s/uwjYAx
N/XJCAiaV+/om+nDltJfFkcnjcBN8+zegeX9eM/WNM8rpSMgPGrelevQj1X9
7ilvo41Ctehv+U3t/VhJ1PCLmsQoXFJfZlky1I/XhgkeXscahY2X/qvU4Wdj
+fjLASzFURivknSqk2dj5jfntjGDUXhNv2hRYMPGPAn9JxkBo2CUIW9n8IuN
RyLmbXh9fxTiGj2WsprYeFDhU/GLx6MgorhTu7yPjfs0NIZDE0eBt0bSoVmI
g5sOKpi4fR0FbtJwbdI2Di6MmRVQERkD3/Dzq79HcfDndblPVy0cg0dLlT9+
f8XBeekX1JbIjsHSNuuut1kc/L6IbSe2dgw2+7FKlvzk4MSe+pxe/TFQHV/s
9miKg+9uzD6b4E+Nr/DNHtjPxWXqNV0XgsdgTlf8QtthLqZtHrfVCx8D3ciU
XdnHufjmVk3jjvgxSCffufSLXHxZN1tRoXgMBp+0+ZhFcrGLRXZrpMA4VI12
Vju1cXGSZc3B02Lj8Lui+kpAHxd3HRz/pc0ch7PNA28Ch7j4qK3m5waFcTBv
0Lylzk/wQcfsp3K643DDw2bfSnmCDS5mmz+6Ng4P1SY3nrMk+KZ3TdnxwHF4
kRotmG1DcKHP+E6NkHEQGn083OhA8A4/zY2V0eOQ76Ms/usMwVtuZ4tL4nHI
lP172+gWwefv1txoKRmHDpmtz6JvE5wePD6Z+nMcAnNVnv29T7BKmGavSTN1
fICIZXcEwaueZxffnRmHtcrem2LfEOwQVaNtI8SDqyWPtwumERwTM56xfj4P
+D+mLDDMJHhJvOaLsiU8CB9/InTxE8GHE63knq7iQcGJ2BUOBQQ/SfYKcVbm
wQd/2oRKMcHMt9m+NG0eVHuEf3cpJ3j/u5rRml08WL6pBjf8Ijg4fdw10YgH
4o9fHVWtJFg0W9Na35oHtvTLsRfrCN6TY/VH+hgP5Hdd2urWSLB/npdhpwsP
+K6InzP8RzB/frbmTW8eVEaq58d0EPxqPiNh5joPNrz9HGfeTbCZtauU1x0e
CC/+/LGtl+DJpJLrA2E8qP9lKmTCJvjlmPyg83MekK7Cy4+4BBvvvmzfHscD
8zfXl+YMEDwS+veHTQoPCmOUej4MEbxb5farfZ8pP9QciPEYwWzvDta3Eh7M
sjlrW8cJfli6I0D3Fw+alhz2M50gWFsmYjSvhgdhp+mTkZMEdx4bPra5hQe7
fvqHlExR+tP++/O2hwft7rd2fZ+m8pxLRIqDPEiraJF8M0NwszF/auwEDy4l
P590mqX0P7VZuph/AjL4O6fnzRGs2pN156HoBJxdv4DlRXH1ZsnJ+cwJYH18
aFRKse+NU04BiydA4PHSx6MUr/1dXM23agLqey5MzlJcsUxez1t5AioVwy50
UHzR1TtjWGMC8lhhtASK5XOrVpzWmYC/RXkZuyguFdkQ0qU3AcE3Lnt9oupx
OxA0a28yATMjThZMilkv213rLCdAm3+XkR5Vf/6AToOZ/QQ8bBywMaf0Oe94
Ylh+cgIuTPvd1qH0M+4OZeu5TYChvOpfAcqf3DrjNfjiBEgZHdiRwKP6cW3i
Qy2/CWAXXv26ivJX9MI8gfSgCdBZaOdxdZTq70Jr9/UPJqBzrBRlDVP9KJH1
L+7pBKzyLdD4Nkj1h52EybKXE3Cww23/B0Lw69cuHx+/puqJVQy/wSHYYqJI
SfL9BAgdd6Ct7yd4Wn95xO2PE6A0Pz/5bQ/VD22VF678mIAdgZq39rZT/bBB
tWPs7wSY8dsVO7QQ/PxKoJlb8wSEvylAVk0Ec1g6G46RCci/xByvqqby3ZfQ
s0dyEg5tOPV9ZSmVbySfVaHcJLT+x/5vWRGVb9/h4u0Kk/A7zmH9KCZ4g//C
F6qbJmFTpoCoVjaVz8eL1lIHJqGpL76NEUflI1r57Z7tJEioGZQORFH5HFTR
EnGcpK4THqm/ptaz23Cr1KTnJDhvpqdkBhMsqWT089+TSXh0PK9nhRfBXSLR
kqUxk9D4bjRyvzvld+eQxbukSeDPPPbsyCmCj8c+bbj2YRJ+lSn7r7In+AOr
r2dF7STcvbajWFuP4HtjOsqiLZMQFLvwhOcOKp+q0LND3ZMQnFzoG6pJsFjI
1rHC8UnwXda0zXUdwXYiQQLHZadA3/1HxHsxgjd1NuobL5+Curcl3ycFCKZ9
2XhbY+0UfLYteqcwzcXpvrUSQppT8IgTmi7L5mKhsbXLEiyn4JK5ybnHZVz8
pqNEq+fRFJy6lqI16sfFfoWLfCoip+B9wrxzh6n92jLmDP4QPwWmxYU9sWe4
mM9GRj8ocwrY7+Pf1FD7vXnlCXOlv1PwwHoq4Z8aF08WCJ5xlZqGURPZ/1zq
OXhPtO7LgQfT8FRs3cVsaQ4OKK1ouv5sGga9FTMPi3BwyaAdSzpuGlRMP0Q3
8thYb/fle1szpyHr/rZ8nwY21u3N8LpeQ42/wqNvjGZj7U2rjaWWzECxLU3G
gzp/bvwqMqoZPwMNWfNOdon247MDjzaUpcxAzEa6y3VeH34rt8rFJmsGNrw7
7jXX2YdVXNG/a18pvr5NODK/DytJXvr2rXcGwtZL7Hc634dXWfdFWqvOwt7U
nx1m1b1YlpTrX82eBdM9XnFyN3vwk1B8tBfPgvGq544uZ3owSyPdx7x0Fq5/
8lkRc5DiS4/T19bNQgKZas1V7sGLBByWVUzOQnmotta7ym68THZ8VH7HHBzx
dGanLunGa2BFfGHRHFi+29KX9awTP/2aO0/AmQ/xXQo7XWvehgda3l0irnxo
fE/+CaltbdhgMmGwwY0PNTHWVu2Qb8MjymGt7y/yIXeGgpc9uxWbPDhV4BjI
h9o+DoT+udGK+W2X+JUl8qGNW3+ohae24FNDV/gedPGhmaLVS4PHmrD20p1z
8sfnoS0CHEedP9V4fYtEx5Xz/OjKa10Plc05OCWJ4ZTpIYD0eDKXq6W+gE+z
beV6f0HUFvJhwFqwHkYMdCJP3BZEuwIm9jB168E1bcnJ6GBBtKFczDzlaj1Y
32yYZDwWRIHBRc6Bk/WwTemQwmSiIIpZmb6qktsAExcs3Eu/CSI9ZTh89XcT
eM43WnhivhC6+3OXdurnFnDX1jKKeiiEkqZio+9s7AC+Mw+v3n8ihJ6vcUuZ
2NMBwdEDGdeeCyGtESRicbQDXvEnLzkWJ4SSP9mjH6Ed0FYqx137XgidyuDT
/DXYARYHpkLSKimWCO+dTumELWc+VxcxhFHNmpcrj8p0Q1H0IrEsGWG06YiC
nbJyN5j99oTERcJoXVKCTOvObjijsSEpSEEYeStcTRE+3Q2Jk9GXTNSFUY+S
/zpU2A2sAL8ltabCKCIz0+awUw9MRu926A8RRheWmzvFvOiFHeM6D9QeCaO+
mW88WnYv+JloFnpFCCMF9WZli++9QJtZpyD4QhipsExXPhjuBenDC9uWZAij
V4vaS5N1+2CjVP1Rk7/CyBr7O2g09MG5U5WhD+uE0aL9D59+5PRBVmF5QX2T
MJK38WWu4esHHXe84mSXMFKUHjn3fFU/7P0Z13p1XBjFZp17LeXaDycCzx5N
kxNBfl9GDFeM9kPSP6fQ8aUi6PLWz/zvhdjA3uJQoKMggn4syvu4RoYNHp0W
K8qURNDuSove11vYcE13W2vbdhFEk9eU3+TJhqfTgkel7ETQlZjzVqsJGyrc
nh7xekEdv+/8hpWl1PfPEImp8wki6I6xqU5hJQdupPo/8nglguY1r3i26x8H
tnA9yk6ni6Cj42wWZ5QDkaeMNI4XiiD5Pb/b61ZwwcVxWsS0TQT1CmT/J3me
C0W3PF6YdIkgya9JOhVXuLA0vkfbuE8ERWUZVbkFcKGivcrdYEgEpcqd/WX5
lAuaR1MadPhp6Fu0Ke/9Zy4I2tilKinQ0MizM6bp8wjYXa4yVFxDQ6/tZ9wC
6ASyn+7tWK1EQ4YOKm90JAm41G2RW6FOQ3ROg+V/8gR+Wy68IatLQ6sKFr/l
aRNQ8ry1VFqfhrzk/Ov/7iJw89FUNmMvDb2UDuoJ20tAq6qbPd+MhgzEYoLT
rQhEmeZbCjrQ0OGycpNLbgR4blsG5znSUPql5j82ngTMQt7cmXOmoSKzHcIr
fAgI/XqSP+lOQ7zrjONGAQRcjd2VBv1oKKtM+Nja5wRKTnUXcW/R0LnXyV8X
xhJYfsfWnh1EQ4yWRWm18QT+fDN82B1KQ9fbvefEUglsNVCYbYqloegTIeI8
TEDjZVng13gaeubnl1rxhYDqnAczLZmGzia5kttfCShkf1G8mUZDv4pEteJ+
EljCdM04nUlDSw2Htwr8ISBzVmqHVQ6lbxp93/WXgNha6vxQQH2efvZ95wYC
wjfmNzOLaWjxkdmPJs0E+P5lOs2U0lBxevdp6VYCI+HCvhUVNDSZv2y/QRcB
7tBbWm4VDXkYn/dJ7yHQY2IV9rKW8ifzssJcH4Em4aQkzxYayukc+KNNCNQ6
7N90pIOGpGX216kMUno/8z4Z9tCQ7tQuU75hAuWLYvdsYtPQgsMLtr4fofzy
NKxcMkBDfBoL7huOEcj/M2grPEJDHaXYNH+cQK7q0x4yTo1/8vEqa4LA+9u6
5+qmaCjVIU/WbJJAalffTOEcDS1cH8I6PUXglW5Y4BsBOkrVVPZzniYQF7Wd
GS5CRwbMqP0GM1Tek+2RV8XoqPuepL/wLIEnlncVnRfS0adPv+QTKX6QrpFh
xqSjkrkd8uv+d79yQZOOtiwd2fLabtyl2N/lVunqxXSUF2Zj9JtivxIV84XL
6Uhf2MVznGIfheomngIdNZZ3Cf7vfqmnr69T2xo66n/zfaybYrf6NcPflejI
772qcTrFLlt+XclUpaON23YJ2VF8/IEXLVqdjtoaDyn0U/XYcZeHBW6ho8Ab
LS8PUXxwb+lSj2109N7G4XYypcc8wS3JegcdSTQHVNdTek345Tbp6dJR4ReZ
IA7lxx67gk+q+nT0ZuHQi1bKL91c5z2svXQUQlu0OpvyU1uGUTnPhI5WbH0j
cYZHYItHrm2/KR1xzrQ7ClP+b/zp0FN1gI7Uc2TXXRslsNo/YybRlo6yaC7j
skME5NusA0OP0lG+U5nwlgECi3YIMi+foPy5/yZwM5fAgjELRZPTdBRz7mN/
bS8BmtlMuqY7Hc1Yy/z26SbA/zZeZ8UFOtKw26vG30lg/MSY2YgPHdXr1J9K
+0dgqCCqqekapb/GyKihkQB7qYHT15t0lDZbmNpVR6Dl7+MrT+9S82urMl9U
EvimtzUJPaejfeImT18XE7j41Vf1agwdbX7auTe4gICiYdH7T3F01DXTvO2/
T1SexvsKtqVQ/TBuwLZ/T2C3+Yl6jc90JKk9vKouhloPVa+OnCuko3/zr9lH
PSPw0nKgK62Ejh79WSWIwqn6D18eVv1FR1q+YnGsO1T/HgkVX9dCR4L9DoPL
z1F5t1U/ONlB1aP5RvWbK7UfHF8il9BD1XPmq+g+RwK+JxNXrxyko7NxJR8H
DlJ5nPm0Yym/KEq1b2m6S+1n2Zd73SRXiaLtcUf1N8xwwXFGdXyfoig6Mfpa
PWGECzJXz18JVhZFKQF0vcl+Lpy/PhcktlkUCf1SF9hWzwX1IOmXQvqiSJ2r
zSeXyYW34Tv/TpwURUuKVx6wO84FO1aAtZarKModfnznzSEuzH9a3urpJoo0
v0SE15pwwTXSijt8URQ9bthgXabFBaW40yLcIFF02/T0jLQYF+LTIra2vRZF
3WfT5A4lc8BlylqpNlUUtYvtTHOM5MBGvWWLf2aIIvEP8WAVyoGPtS+mc/JE
kfW0pVvrRQ5Uzr3God9FUc3ZU+ee6XNgnslnvZ39oui+/13Ou0Y22Pa1mcYo
iaFa71V/Pw/3g4JGvG64qhjyHtPev7ujH3qunNx0V10MOdW+8Xhb1Q/nJdlS
F7eJofVT5X0bM/vhjtZozb69YmjpD5/DA+f7IcdfxG7OWQzltPApnCR9IL1S
2cUuWQw5fBqaS6rohZAHdyyTU8SQSu4m+r6PvSDK3687kiaGeOZlZ2oSe4Gv
NXnx7VwxlN93LOW+by+wo9b+yPwuhjTk4x/GKPVC0aKVG+dzxdDLXWdtDl3p
gfOMRWN56uLozImlrNr53fBnHu263Edx9MRgKGKqpR24KRF2+/PFUXTtFYlb
Je1AP7x+e0CROGI4B4XxXrcDSjcZGSkXR7J5cpujPNvhrcMjx4omcWSVvnl1
t2g73PmiYBQwJ4522lbMBW1og923dKRGdeejA9sDb/Q5t0Am7VxCxbf56OK7
TXxrLepAWVrCxaF4AZJ+0+O/5G4RkOAxqU3VC9GZkAr3W625eGVAwIazLhIo
WZ7hMa1SjT2qNXwdXCVQxbuewCtO1Th/dVv5gTMSqGqX4v7eF9XYrkjbRdtD
AvFvzJG8JluDn84biqN7S6AD1gFmcXM1mOFjsyguSAJNx817/vh7HeZ3VxOq
S5JARx/qeb/Z34TbDjfU63ZLUOeTC/4z89qwuI5V4pFeCSRUJr9/cGkb3ry8
8pxvvwTKfm1YUbG1DQe2l4nnEgkEuWZeZu5teINr7g41ngTyjJucsvnXhn2u
RLxYTpdEmSo7Rc9nt2PpGCuXaSVJNNRwP7DWshPvuF65ZZGKJPqDL3jS3Dqx
0/F9AlobJNH9vxwH+aBO/FHR4Pm5TZJIoM3wq0heJ3ZI2/Kzb7skSox9lJa2
tAu/LZRWrzOWRFfTOoQON3fhPZ2VE5lnJFENp2SXrnEPvrI++HKqmyQaV58X
XnykB6e775lJ8pBEFwoKVqld6MGLZz/yPfek6in+Lyk/sgdzZRJErvtKolGX
4eWY04Mf7rkobRIsiUof/GxVDOrFLa+XqHWlSKJzB8uXqaT0Yemh6vR/qZLo
8SETnbDPfXivVqhGXZokOtH0w/Dfrz6cUSSkVZ4piRRWnu5VHOrD/k3cHemf
JFEEOeh+bXM/Vl5YYOz7QxLlrsXO6tn9+KLHCScZjiR69uen/+YENg404p7c
RiTRlPafxScz2fjxKq+TdoOSSKQr8YdXERtnVQc6JoxS8zl3625pY+PhbW+O
b5mVRK0l3yNWL+HgMwLDRywXMpD/WFYCDuLgK42Xj3hLMlBdB79eQzgH380U
PBLFZKC/RQ0zVS85+PVJGfsuWQayMu+64fCJg3u+b7X1lGcgJ/vCvR1cDj72
8NqhcDUGmlPXuu9pxMUep+mHcjcxUG6YksZpSy6+rv/gYPNmBhJ138zaeZSL
Y3gvrdZsY6CXtOWu1zy5uNnm64EsXWr+lSWD1tFczNm8/0D9bgbyutenvT2Z
i6cX1FnM6jPQlhojp/F0Ll5c0Geub8RAzyNNNwmXcPHB1QvMqs0ZKD1fytWn
j4udZsNNJw8wUHF0WtDOYS72qlluuuwgAzm8+azePsXF4UFq+x1tGCi6pGgu
T5zgSo6FydhxSs+7JO9CZYJNsp7tlfFkoIPVYisXOxLsNOwwJ32RgXqlpka3
uBJ8Y6PSe2lvBjrGGzixyYPgD68+LJX2ZaBrB1cL/bxCsEL03wGmPwMxrOdi
gsII1m58Hs8MZCC2yeO85CcEW8kdP8y8zUCGGhX6ryIJvhs29IURzED8Unue
GScSPBaw8LFkOANFHVf9IJ1DsERxtZHkEwYqevjrj9YngtfzR/FJPmUgH/t7
W7ULCD7io+wiEcVAeSEXGtpLCfbOGV4mEcNAsY8mFwSWE/xoLLdy4QsGunzJ
9Kp4BcFlboY6CxMYSHXGn5ZVTXBHisTQgiQGOkL/vKihjuC5vpqEBa8YqLHS
y6alkWCNE44SC94ykN+In8OdNsqfFyrF898xkAVRXKHWSbDzv5FL89MZyH18
TiC7m+CoQzfaxbOo8W6GysfYlD/he5+If6DylpM8HcSl/K6U/E88l4H27coo
vT9AMFeibp74RwZ6o6Sk4zlEMM0kJkvsM/V+3/1S7RHKzzsnT4nlU/P7LHNu
HyVYp1RVXqyQgaY+bljqMk7wQaGxKtEiBgp10Wmv4BHsofspSLSEgbIVW3Nk
Jyl/r97cIVrKQF3XqqJ3TBGc+NFomF5GcftAmN40wYUTjCR6OQNxXm14pDxD
cOOWehv6TwZ6xXr1YpjisXOxkvQKBlI5HJH3dJZgyTSnEtofBnodYPlvxRzB
ytwNl2lVDLQq/vD8IIr1149voFUzUP+LHXoVFB9x+twhUstAC+3y/KnrT3w5
/laESD0DRcYk//7f/dDwNmMTkUYGKl/Bv6aL4nfLpQREmhlIwL/pRgrFZTYN
2cItDITtzvdbUNwZ8cJVuI2BrJWW2zZS9fDVOK8Q7mCgHHPLul0UL5JSqxbq
YqCvaulH7lD1a5jybgv1MFCfcP9wOqV3XzAGoT4G2s1XF5ZL+eHy3X9EkE3l
pXF+5wvKr5s0k2RBLgMlxVXNOE9QeepJ2wkOMNB5TfUyScrfnOuNDMEh6v28
jsSIMSq/aRcfgTEGat5rEGk4TPChg0brJsYZSO9mm/7lQYKLMtZXcycYKOHd
Vb1gQnCEC3tD/QwD/Xyma3iwn2DBkvLGX3MMVG18zmxhL8FnVqQEFc9jIp/f
eR8SuwjeXXu6/Z0QEy2s4sT7tBKcuskkJEGEicpDf6jlNFN676vqPKcz0XRk
2qqaBoIH9Eh4wHwmunsga2/2X4KfZbjttZNmIhMRVzaNWh/CC03HzWWZ6L7e
YUHTIoLdXNTiDOWYKIqV+Nw7n8pvxdCMxlImovlssfX4QPBQ8Lk0sdVM1H8g
8O5IAsG2feZ289YyUcquSSnDFwSX6mmIjSsyUWmr546r1HqOnB453qbMRKE9
EgEh1Prf4+LJytFgoldybzwNfAnOKLYsfruFidDuO8HJFwletkLTI06LiUK0
Tp3lUPvJcM349/vaTJTgt//FopP/8//SVcfd1PE/pk6LmRBMjz2kbKPPRO67
j57xMSD4/PTWOtM9TGQmNOv4CxFsmDGprmPMRPJHIw8v3kTwiLxPF9OCiQia
EzKWIdjexyaMbslES4pa/H4soPqrRhvNWTHRF4UTymoiBEcHz0T0WTPR8u0p
StHjXLx32ve/gmNMJGZdHy1Tw8WxNX7vz5xjIuWFsie9Q7i4q3jjv+ALTPR0
w8EAS38uVn7/j57qxUR3DtxVlvDh4qwQHXtymYm+3TuqseQkF5cbTtDdbjKR
zMK9gU+2czEvz83e/RETTd4z1lBp5uAdr5bfDn3MRAbHtJy7f3PwjSc/36dF
MJH0wx7u1WIOXnBBWXQokokiF5SuMn7DwStVe957JDBR9gmVcrOLHGwSY09d
VzCRhWICY40oBz8MXrD5YQ4T8cI7Ncun2LjO55P9+zwmusD+Em3KYePjhxZn
jmBqPI17cfIXG19i1NhfKGWiKenplSVhbBx30yTTs46JwrZonraQZuNJJ50j
l6ao/ksTzCrn68d785TQhRkmmteWo5RN+vCz+Sx59zkmytrtuCyguQ9rpw/9
cxKQQulWx0tq8vqw71Si/UExKXSrqIWnc6EPCwQz7DUXS6Hn4vHbVdp7sXhG
t+3oNil0YrGfiOybHrx0JtTa3VsKJXX+MnYc68R72v7LeewjhZbkz6gfaOrE
57/SZT/7SqG1pcF/lYo6cVmo3x/RG1KIhBgU3Q7txJ5r3A3j7kgh/oPHr8iv
78QV+/Zr1jyXQny15o6fDnXg6y8WMHWwFHp85c7cg/g23GVwp4wmKI2GB1d7
H5tpwl/WlMOyO9Jo9+y76/+5lGMXWoLgCroMSr1rGpT7LRyyY1bpfAmVQa2o
84s6/IGf27WLzSRl0fiVfZ4PTrbA7Q8XpvSZsmiB8C4rh+stYLA5VW27tCxa
ZLHZUyGyBfJVFaJWysmiA18FaOf+tEDGCprXiLwsWv1s8Xsz7VZ4IlKlGL5R
Fq3vKls7Jt4GxypP3a3bJ4vm2Yc8lo9tB/n98YU/TGVRqt7Voa857dBY3swr
MJdF1puuX7L50w6WJaYnXlnJoivlMynGAh2wJ0dzx2V7WbQq02qVwfEOUI0W
GFhyVhY5TDkuD1HoBJ7LM/MjwbIonNo4q+53wX3vlyJXQ2SRr8WLedWJXbDm
9uu8yAey6H7uq/BPuAsOJOetbAiXRVnD9//3ox6kdzcMH4iWRU/mFaQv+K8b
XI8veWj0ThZtHdSS+yTQAy22kVVb/sgiM+MbD9/Y9ILX6fjAA1WyyO5Ei8F/
7r2w4EqK9vlqWRSDrE/8vtULOs8/xaXVU3prw6/feNsLT+ubziu3y6LR0NTS
u7O9YGG1TFphRBbNLv3BLx/RB6X7ow/Ml2GhhuE7kxnZ/eBS1PlZhMVCSjNV
T72+9sN8LWVF/kUs9FdCYoF8TT+YLc+ZHFvKQvss1DYuH+uHBs6f6JbVLFRw
r+xjlTobuLeF+zI2s9BSvdYlEolsCJk1Nn+ryUKn4Q9PLpMNmzzCPiZtZaHU
n9uxyBc2XDwkfz9Sh4XCvjP+BjezgV9xm0aAHguZXVz41lCKA9LFp30PH2Ah
5TTdXEdvDnzQet9tYcVCN9pWyyb7c+Dwm8n9+w6x0OLjV0N/PuBAVFjAyt22
LOTxY11q4SsOKDrElqqcYKEnvVF7TOo4oD1XxZh3gYWcScTK3o1caPZY7DPl
yUKfwjYKHtzOBb+uo52jF1loYMjbNFmPCyU/uNl9PiwkOL+HPkx9n973nGZb
dZOF6M5JzSv8uOCwVTsx8SELTclebuj4xgVnzo/RxnAW2vBFS/FcJRfcYu13
MyJYqM8YtzQ0cuEq/UarTyQLGeudO6lNuPC87ttiswQWqtJ78kiLQeDlPWuX
gCQW2izuS49YRODVTs6Hj69YaCbX7UGlAoGcZAnLtaksdHH+nbxqdQLVl6xC
prNZyHaOZStlSqBJpbdZLZeFQrWTXHYfJNDR6q1y8iMLVV6R0TWxJzBsGFX2
O5+F8h1dlYkrAYlFnYKJ31jI6+RW0RP+BGR/epo3fmehWP+saw53CSy7Tnsh
+ZOqJz/Ib+sDAip968HnDwvlOHQLnY8ksDfX45JpAwtJ/MiyXZROwPSMYKl/
Ewux1lU5t2cROKgQLvPxHwutme9VfiuPwMnbORlrOlgowKPd17KIwJkdRvw2
XVT+bZwvN0sJeA417g/tYSHN4jnDu+UEbh7m406xWejCmi9Ca6sI3FnwQFuN
sFCS+wb13BoCDwpX3nEcpPKqZN1b00AgVslA8fcoC0U2tny63UogqbnWU5jH
QgZtI3eudxB498ClePskCzG+Dlw07ybwefKeQ8IsCwWtk3pxjU2g+O3ytAY+
OaSgxq5p5BIod0ibkxCQQ46b5sszBglUyewy0ReSQ8cYJV7ywwQayqqeXxaR
QyaKjxpFRgm0+Tr2v6PLoYi9isalYwT61Hlbu8TkUEG5TdFRHoHBrqDAxQvk
EPs67KqaIMB7urhmv4QcMiwS/7p8isCcScpqf4Yc0ji90WT3NAFhATifJyWH
1rTq1eycITA/u6JwQEYOnRRnHWXNEpA65SC5Rk4O3TwR2/eV4sXLR+ytF8uh
B1yxc/vnCChU3nobslQObdySNpFGsVKA7EzxcjlkcXCRL5tite3JRlMr5ND/
/x/0/wBmmF+V
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$14835, {1}}]& ], 
        Annotation[#, "Charting`Private`Tag$14835#1"]& ], 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAA78KzuM1gT4L0FM9+vsyOyXpvjse
k18/zYFIGhZqETz6sC9k2ZJvP7Wwb6jnaSE85RRo+LaSfz+DxkbFsmkxPNpG
hMKlko8/wtSurCFpQTzVX5InnZKfPwqILJ3+ZlE8UmwZ2piSrz+bzMaJhF5h
PJHyXLOWkr8/IV+SQ708cTw7xUoKQnPQP/rBTXZfW4E8cHpOYbNw2D9N+nC+
3WmIPG24ZY4CI+A/Ix4eWTzdjTzU6EkJp2LkP7SJVnq44JA8ii/2ALZZ6D+S
wKbov6CRPHEryJXApew/emPXLJM5kTz6Y2uu3W7wP/ZeOAsuQY88Yr1WUJBm
8j++sPH57lGKPGPx1MDAiPQ/4Jm1BOEwgzyMMLdvpob2P914orQ3mXY8AsC3
N4R6+D9OzpNunBBXPBEqS87fmPo/pNlHgJizabxIn0Kj8JL8P8AjYJF9cH28
F+/MRn+3/j/q3gktjK+GvJrHugEDaQBAlZBamGvvjLw8HUH/IGQBQI6p9+0k
fZC8K+AQ5H10AkAN2yYwMZCRvK2oEmi1cgNAy8tA/Klzkbx83l3TK4YEQCQY
PXD6H5C8cTw4S56UBUAc4xrWv2KLvPqfRGLrkAZAHeRATHoghbzQcJpgd6IH
QM8Iu4mJ03m8OUci/t2hCEBDX5PiZ55hvMlFOahAnAlAeb9U8qvRYDylsZk5
4qsKQJhM7nzMfXo8FSMsal6pC0CEKFcD19uEPNIBCIIZvAxAICrJMzepizy1
CHOm0MkNQIHrrwJCNZA8LBUQamLFDkCD0ZVjjmuRPO+O9hQz1g9AVJz6ECyN
kTwjh4cvb2oQQDnunq0njpA84lrb2kLnEEBNBNBgsS2NPEjl0/m1bhFA3pzF
eDH4hjx4cmVoFu0RQEoFyg4Uc388TrabShZ2EkDlx5o8Mz1rPO78anwD9hJA
ISwi0H5zT7yh14G0bnMTQCdOcPx86HS8+mg9YHn7E0DvZLYiufCCvB39kVtx
ehRAtYfWPQesibzmR4vKCAQVQLBcoTjOLo+8wybMPx6LFUCVLaySaTWRvGoI
pgQhCRZADJjjwQelkby3oCQ9w5EWQFDNTEug6pC8zjs8xVIRF0DKx7QLlU6O
vPhqm1NgjhdAQGZhYhcIibzIUJ9VDRYYQP0Z79nPo4G8Yjk8p6eUGEA4KEA7
dD1zvGntzfXclhhAeXv8smnycrxwoV9EEpkYQM7nvBFIp3K8fwmD4XydGEDs
MMLywBByvJzZyRtSphhA+3gfTq3icLzWeVeQ/LcYQBdBNDKCBW28SrpyeVHb
GEA1r29uvmxjvFFuBMiG3RhAT1RBv0nSYrxYIpYWvN8YQGqhQB6+N2K8Z4q5
sybkGEB6UX74ZAJhvIRaAO777BhAFXBVf38tXby++o1ipv4YQARCweWdeFO8
xa4fsdsAGUDKbRtXh0FSvMxisf8QAxlABPsbh1oKUbzbytScewcZQIfJEiGI
N028+Job11AQGUDoPBWZmntDvP9OrSWGEhlAUdCEa1wMQbwGAz90uxQZQCKG
AOsSOj28FGtiESYZGUCKB2AfYnwzvBsf9F9bGxlAEXSGP8Y6Lbwi04WukB0Z
QOG8SZ6kfCO8KocX/cUfGUBuEhx31nwTvDE7qUv7IRlA9LPjPfr7MruxHzvR

           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$14835, {2}}]& ], 
        Annotation[#, "Charting`Private`Tag$14835#2"]& ], 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Wr8rRRwZCPuXLBFtxKcmDuo0Zoijvl0Hzv/a3IhXmaipVOWIo8X57508Ljfi
D40Jk+8LxNG1OWYiDoJGXDeTgsO+iaM3Kl+WS/1qwsK7iky2cMWR1W+6Wdzz
FuzQ37UnXkcCPa6aKRLWbseMRctPHXotgd6e5Gb0s7twaPgd29dpEijdN+ff
A9FuLE7jGg1nSaBjdifstdS7sVDna5Xb+RJoG0niS9h1Y95TrcrcbxJo2CTk
e/mnblyqvGiVlEACuZoe0h991IPPyymPFqyRREZqPf+Zr2Zhcu1y1+wNkija
RFtpcgcLnxpsrNqzSRJNanDNHzizsFP1w1d9WyXRTrMSw/MPWNgihLF/no0k
srWT3TL1h4UXict+OHVREuncWhM7L7MP1wqLXVf6IImsZUh61DwOFqRFH7Is
lkQGDVqHr2hz8NwDyzYFlUqi51WWmkaGHIyydw0Pf5dEZfq77vke4+B058hj
1W2SiGz+svvZWw6+82mhedCMJGrsvK16y5raP900lB8xkkKdMYVKxpe42Gn1
j4Fl26TQiwCxTv9bXOzd5lTpbC6F5nEMFJ7EcHG2XkBg9V4pZKIXFOD9gYvV
WRV/U45KoaA4Zbsv01w8abqvzTlQChmtez9ww5eHc8XOvaz+KoWUDPWLNI/w
McvnGr+oUgpdYDVfv+3Ox4qD99el1UihxgfBzTXefOzTlFpyq0kKZYblzpOI
4GPjZNZvI44UIidVTmh+4uNa8wMKuWLSqEdcrmJUhdovF5849FxSGvnWzz4T
oinA69ddTAyTkUZBV8yHxFYLcIxqxFo3RWn05MUx75cmAnyYX7lbS1sa9er5
n7t+RoAHQrYER2+TRsq5f97kvqX20yKWP4LMpdGhhouTXsUCbH3xENNrtzTa
Zp0SpvxVgN85er+wspNG1vt+3xBrFmD/VbnFEselkfB98sJvXIAzX3yaM35K
GnUqPvPaQyO4S7F2F9uNul/slO1scYJNhUlrqZc0ou+LWchUIli6Vvufb6A0
+vRv3eJKPYKR6Qbkelsafc54GJthQLBnvknQgRBpal696T+3leCGBGfGhihp
lBXMEDyzJPjJudjVA4nS6Fl6amf4SYKr+pIv/X4tjW683GF3w51gIfv3+Hua
NIpzueNhc4Hgo8YNO1/nSqPqjKe+T68SvJwhc8r5szQaSm12+BRJ8LyMgtTE
r9LoS0prvc5jgse3HyfsSmkk+bfrmFs8weU+RefdG6RRVdym0lvJBGcwT73N
bpZGOffnBRzOIDgqkzE+8lsaddMmtjHeUM/rcfX36ZNGBWOlX2QKCTb3UyzB
XGlkNnHu4r6PBK9RLBUVGZBGgWHfFHw+U/FaqNy+9Vca3W/6IW9XSeWX8zUi
ai4dtbm9CDzYQnDAzgu/mqToKHruoP713wS79qkrz5ejow9+ZQUBnQT/p3Ip
7rkyHVl2h8yf30ewRu6iLpYaHekrLhnL5hAstvvHYp1FdJTx/n74Yh6l53XN
5MxldFR0aVDk8QDBhaq1vD8r6WjOol/1cUMEv8jzXblhHR0J7XdzuDpM8B3L
pZ5XNtLRPMfIxwajVH36698UGtDRq8y99+rHCN4fcHVMaAsd2dKaV/3/eyhS
W/6fsQkdzWy9HvBwnGCtd798gnbQ0YuEH4ElE1T9rW7gip10pHrbbf3XSYJH
uLo0aSs6Cn25LjxliuDWm83Ge2zp6FevevTJaYI/LQgMijhARyGXDpqJzBCc
/H51xa9DdKRYp5d4ieKwvW2SKkfoyCFd5/VXii/xg3cfOk5HLmK/bUYpdgxa
F/7sNB3hxfNTpik21eio73Gno4K7v5O6KF5RcEdB+zwdedGNdidQLG+z4cDp
S3SU/TH0qSHFE4Ku2HQfOgqaMnj4hoqnKzikffAqHXUd7tKfQ/HXhf8t1LtJ
R5U1JkF6VPyZH3qPXrpFRzHnbK4Cld9D27BXBffo6FuGtuYSKn+/AYP+6TA6
alkpdIVF6eVym73cKIq6v9XE98Zfgi0WR7jfjKGjh213V09Seq8tguzyp1R9
I8MeWY4QrLyPOyzxnI62PNN/c/UPwcJDURt2v6Kj3IYHgXcHCWbfMboSnkJH
L1Gj7HlCcB6OnlF8Q0fSLZX2Df2Uv/abGNm/o6PdzEKNPWzKX38GAuI+0FFq
pFzyq16CrbS2i2t+piN7g9Wy7HaC9T/+sTj5lY7cXl0brWklWP1g3P3USjrK
aTBNfdhEMAkZlV/bQEcHV9Me5dUSzBtQK1nRTEfBW6M1dv8guN9qm7v2bzpy
3Gu3qvwbwT3MR1/ns+iI+9uBe7CU4Oan+n5io3S0ou4fEqf6p1HIeZnIOB3t
q95r/4rqr5/Otxunpqh4b2irLkkh+MSDM9H/aDKIsfy/xyXPCHa2K/ojEJdB
ijvuqwTeI/hwsJUZT1IGjdl6/dYOJtjpPSueIy2DVAv4rqnXCXZQoe/qkZNB
W3uO0GwvEryv3TGpSVkGdaC5GWsdCd55XNihVEcGPcma46G2lKrHo8icj8tl
0IKJyoJqDYLNvi4Vx7oyaHjadcNRZYK3L7N6+36NDGL25P3WlSDYiCTIZvwn
g97NTy/ZyxXgjReNv0SbyaBOA2t+V6IAb0hqVH1oIYNmh2T/S4ml5neT67mI
XTIo52dqvu0DAV67KVL9vpUMambe9N9zVYB1Z3qvBByQQVfbC9Xa9gnwoqCg
le6nZJD4RPNRG1EB9mxY5+fsKoOyagJueP3j4+IlXd9t3GRQ2++L6t4CPj5U
anDKwFMGbQhTmdFt5OMY4aEXc6/IoJtNZ68YJfOxnI+98otbMsjB0lZ54Q4+
pnmsntWUJIP8vv6cYnry8J7i33u/J1PxQ5Z20REejqffTcCpMkjIKnOvmQ0P
b05nwctMGdQQsqJTdiMPX+E+vnLunQxa72922HGSi4dcZg9Ilcsgu+zY60JX
ubjrQEuzUZ8MivRHtaXn+rGkod0rJ44MUn5Wmf/KqR/rLag758eVQUuO1yid
2dmPg7srJPOJDLoj4R8Wp9mPV7rmb179VwY9vn6uIvEXB/v4RicsmCuLrpun
9Zqt42BGvN2pSR1Z5CHReCymsQ9v7637l+smi+aKKTqU1/Zg32Uh3hlnZdGw
zqGW4vwenO2xfSrJUxb1p7xYnJjQg1WmPwjFeski/1nbvFZ79mAB8+Wc636y
qOxbTupBmR4csf0SY1eILPqxveWgxI5u3JGiupqVJovWRu0zvpHaiS95upxg
8mVRE2ux8c/rrXhX3mMzppccMvny9kByVjkWTJ7yERmVQyvZ0xLrb6TCs1/X
3ridm4c6WgIWOA/XwvgJQ6fLE/PQ/jB+T8ayTjAr0EEXpuahb3ESwWdNO+Gx
lKK6x8w8lPr7zTL1w51gkD3UfkJEHsVVZUlYRHWC38Qrx30S8ujrtW1762Y6
QSREznGDijx6Gjr38K0fXSCZ0+cw8p88kvNL1uhy6gH7WT8NBw3kkVGsidme
yz2QZlcyn79ZHmVwMnamhvXArsnYth4jefTAQOfmkpIeCDWxcqg3k0cbNsep
LlzYC/KNH+xzDsgjl2F3x5W/e2H+VNhBjyvyqLTiuvi4SR9s79r5/qGPPOpS
oO0IduiD82VzFYr85FHHgpGgifN9UBF2rVb8hjziL/4TE/q8D7w0PXa8uCOP
dEX3a3rO9EH1bssNv2LlUUth8KeJLDZcT5CeZ4jlkf1bS7OLwv2QFlRx9shH
eXTCdDrwHKMfGl0Dq259kkfNt4Ti9yztB90N07cayuSR010riRzLfmj5xhc6
Wy2PZFqFd4o97Yd1I98FCZ3yaPbjTQs4a7jA2nanQkyUgT7bJpwfMOaBs7mT
+pLZDARycQ051jxo26XntUWMgc73DiTbHeVBvU27xhVJBgqTFHdBN3hQcmTt
Za48Ax3dPxtFYB488W/RqlrCQGpVB6Q2rOGD4o1M334tBgp++uftP+BDRODN
utk6DPS8qLHq8U4+3L630h90Gch3koj6neDDpcc3GjLXM9DYjMbQu1g+WL9d
dvPBNgb6+WjDtslpPlTnC7Vk7GAgtw0+7HRxAZgX/Vz13ZyBxKx2yCMmtZ/9
7N8qaslAl22UG6eWC2BVXd1ar30MVKEgl9W7TwCSxLtr30kGYqU7adknCyB4
yHLjhdMMxEze+n4wRwAio0tCws4wUH7sMiWXQgGMT/7Qr/BgoOStTKXeHwJg
iy8O23SFgS6dFJnc/kcAnzS/g9odBlqXfLDz4VoCZiHtZsx7DCSfJioX9B+B
6pEhG+n7DPRDI3fabguB36VKrtPhDFRm3jb4dBeBv87HH/2OYaDrp0LuFR8n
4Fdx5XlDLANtiOFwP5whMGtNSHrVUwYSykmujzlHQE44t7QogYFGqgp1J/wI
LI+jDT5NZiB0Wf/MzggC2bOZk1GpDGS9cU6gTTQBfbelc+6nM9D7y+PTm58S
MDW0nO+fzUD2nkenc18RqHxxRPviGwba3pPuvTWVgLXkxbXueQyEbb+YZmcS
ONzyZIdjPgNl1Zrlrn1PgG2UZW33gYH+RFy2/P/3SbfkUsfdRQy0o+av9n8f
Cfhc5l6AEgbKm8y5/rmcQJSCfsKCCgaKFl974VQDAVV/izSF7wwkOqATFdhE
4DnL8R29ioGWM+WabrQSyMwNrJqpYaDGM3rvNboIbJgf0zRWR/lNQWhPSQ+B
ooC0HvKTgTLHGma29hH4trd+vL2J0gPTo/u5BKwK+mY1tjBQ/xfiRxcQaFw4
IVPdxkBGpo2ejAECjrelVcvbGchja53n5CAB1qCGVnEnA3l+EvMt/UPAdb/e
mnfdDPToe9H9MyME/hRvN8zsZaCNJ/a/HhslcEXbfntSHwP99+JAufNfAkKh
7nvjOQx0M8KZm/6PQODY9UOPuAzkaL1StnWcgJRj1MlQPgPFzHmysX+CQMSX
1+eDCaVPS6JT0yQBZd1C/6uDVL5izsGvpwg8i6y+fekPdb52TsaBaQLaU92R
Z0cYyOIWt45HcfrRsfgTYwx0/5b/qOMMAb3v4qlO/xiIGFoz31D8Ya3a230T
VD+rKa7lUGz0eHWJ5RQDPct+aDFD8VeaSeX2GQa6FlLoTK0XwfLUvkYkzETt
NuEXqihuqDndvVGEiZLzDW4GUeyg7y9YNYuJNH2FwzX+/z0zPvyf9hwmSji9
NTaWiueU2EtRjblMpOZ848VfKv5vtOB7WyWYyLagp3oRxcunTjKPSTHRqtM6
t3WofEPGzOOC6Uxk4X22RpLSgwyu0E6RZaJDPpOvKij9LHn0rMp5TJQdYEg/
SumbzRrUH2AwUYjud7EmSv95nXUlcopMdCTqVNRSqj7nW3LN9ZSZ6Ms+0Xwb
qn4/fz6st1NlIuPQ9AsOVH3XV192uKLGRCJ1r74hQvVbqaE7XkidX7HHMqaf
wH684G/nYiZiftoZIMMmkP9e+JqoFhMVHVjj4NxLwDf9c/iOZUxkuEdePLqd
6t+kVyquK5hoLOJ1jy/lV/T81ouQlUxUGmvrsZnyM+3Rzry6tUxk1yfIsKol
cCR8JYzqMdGBqQ8nX1YRKL0rW664kYlGzp/o/VlB+eXazyYHAyZqfdC9tryE
QJ/3W+erm5lI6EwH/U4Rge1e0dwExETjQozipfkEJE47TPUZU/ojk6xxqj9D
rXvVPXcyEYskuHJjCQzuKnsdsZuJ+vB8/3sPqX7Y8XrN2z1MpFBmGC4RToCx
+YzxpA0TbY/LrHscSCBGa+R44CEm+mSwwlfKjcCExq+BJCcm2rbWb2coNY/s
Vd9f/uZM5VOw0IY4EVgg63tH5jgTOWV81jbaS+DFuGhGjDsTvR8ZLtq0nppX
I6wNhR5MdPWRqeYzXQLHSHlx+zkqfo9vs7o1CSztuVu7+BITPbHvtJxkUn6u
lB9Nv8pE+tXrFQNHBPA2frHhpzDq+sOeY9MpAlg8Y+z98QET7Z6dpt2YIIBQ
B5f3OJKJ+LiaFx4tgBPKL/U+RDPR+aufrdICBaAcoaWb+4yJ9uXHPPVyFIBP
kM6CV1lMNL99RdcRCWp+95o5JOYwUcvE/foDQgKwMT79+HkuE5kf2zSxdoQP
usKpCvHvmcihplH23m8+tF9ZIRP9kYlmhO89a8ngg5HbKuE7NUzEU14WNWzB
h/TvlnCrjon2avhRqwg+qCzz8A36Sfk5ld7MXMuH4b6sfzeamIh7I1HtsyIf
Eg+vHfLpZCL/ePbOsi4eiNms73YbpPw5Mr7YzYMHVZsMPlvJKiDSzbqWfJkL
t99dmDCdp4COZ/TdjDrJhW16Gas3MRSQ9P5ixxP7uVCsu/DpIiUFNCu2sbZw
IxdyNMQuDqsroEOw6szq0X54NKdeO2qVAjKx+npxh2s/HKk7fbdptwIyXnVC
PNuEA+qWiSWVexSQyPn6+5fWcKD1+++/H/cqICH6MTGtBRyw/bLHJdlOAb1q
qFE1+MuG7e83bPZ2VEC2O3Jbt79mg26cyICquwIqMVCxmprNhr+nHu91ClFA
dXbZJw9mseD+ledz/EMV0OxLlr5Ho1mgeTul4Em4Avq9sGO59TUW2LwuWNQS
pYBGUxjf+yxZkN3X8scmTgHRyutndwt6wfWoaoR5pgL6biv5eotmL3Q4PKlf
X6uABtfFSB6/0Q3llnE2UkxF5J6SOP/TRDs46xu8ehWhiJxKsl+BRw2c5FeO
tEYpIrQzSXzjiho4+8zRWC5aER10UvFV4VSD/9wbnT5PFFHb8zetL5yqIbbp
q4rVS0Uk2uy6NfJJFTRctgudfKuIFHYqVNvurgCzfM/Le1oU0Qcn1fdqsR9h
j5toeWCbIvoknOujKPMR9i2MYn5oV0Q7Z8zPTd0ohuO33+do9iiiZ/P9dij8
KoIAynQTPEU0D3dEPzyXD0Xj95xfTiuiR7YSa7teZsHn9AVZLUJKKFnidHTr
3Uz47pw1IyOihPwjbyXe7E2Hlor6WO85SmhVywqDTJ9k+Buj8stSRgmllR07
9/D1M5jZlbYkUE4JXbiYeGwp5ynMFoHzBfJKyNShasO0XwzIn3aW1VRSQs1g
aGORHAYqC4YdD6oooUv72RXx/rdhYd3N9ND5Sqgs49mT4ORroBOkMPV5gRIy
Ntauyk32gNWbXptPaCihyVX3/v//3c3/AxYbO7g=
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$14835, {3}}]& ], 
        Annotation[#, "Charting`Private`Tag$14835#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., -0.5}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., -0.5}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.999999512844876, 0.9999999999999671}}, {{
        0, 6.283185307179586}, {-0.999999512844876, 0.9999999999999671}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Q\"", "\"U\"", "\"V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7156032019622865`*^9, 3.715603233488204*^9, 3.715603266752286*^9, {
   3.715603313986062*^9, 3.715603318363041*^9}, 3.715603360312177*^9, {
   3.7156034302443094`*^9, 3.7156034672062855`*^9}, {3.7156035016147156`*^9, 
   3.7156035131573715`*^9}, {3.715603606486293*^9, 3.7156036226295786`*^9}, {
   3.715607267880443*^9, 3.715607288140216*^9}, 
   3.715607321530053*^9},ExpressionUUID->"5f5952b9-53a4-46a4-b426-\
67a6ef288c7e"],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{
  3.7156032019622865`*^9, 3.715603233488204*^9, 3.715603266752286*^9, {
   3.715603313986062*^9, 3.715603318363041*^9}, 3.715603360312177*^9, {
   3.7156034302443094`*^9, 3.7156034672062855`*^9}, {3.7156035016147156`*^9, 
   3.7156035131573715`*^9}, {3.715603606486293*^9, 3.7156036226295786`*^9}, {
   3.715607267880443*^9, 3.715607288140216*^9}, 
   3.715607321539549*^9},ExpressionUUID->"405c49dc-28f4-4c01-a4ac-\
4c305f7c7122"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/x/0/wBmmF+V
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$14918, {1}}]& ], 
        Annotation[#, "Charting`Private`Tag$14918#1"]& ], 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Wr8rRRwZCPuXLBFtxKcmDuo0Zoijvl0Hzv/a3IhXmaipVOWIo8X57508Ljfi
D40Jk+8LxNG1OWYiDoJGXDeTgsO+iaM3Kl+WS/1qwsK7iky2cMWR1W+6Wdzz
FuzQ37UnXkcCPa6aKRLWbseMRctPHXotgd6e5Gb0s7twaPgd29dpEijdN+ff
A9FuLE7jGg1nSaBjdifstdS7sVDna5Xb+RJoG0niS9h1Y95TrcrcbxJo2CTk
e/mnblyqvGiVlEACuZoe0h991IPPyymPFqyRREZqPf+Zr2Zhcu1y1+wNkija
RFtpcgcLnxpsrNqzSRJNanDNHzizsFP1w1d9WyXRTrMSw/MPWNgihLF/no0k
srWT3TL1h4UXict+OHVREuncWhM7L7MP1wqLXVf6IImsZUh61DwOFqRFH7Is
lkQGDVqHr2hz8NwDyzYFlUqi51WWmkaGHIyydw0Pf5dEZfq77vke4+B058hj
1W2SiGz+svvZWw6+82mhedCMJGrsvK16y5raP900lB8xkkKdMYVKxpe42Gn1
j4Fl26TQiwCxTv9bXOzd5lTpbC6F5nEMFJ7EcHG2XkBg9V4pZKIXFOD9gYvV
WRV/U45KoaA4Zbsv01w8abqvzTlQChmtez9ww5eHc8XOvaz+KoWUDPWLNI/w
McvnGr+oUgpdYDVfv+3Ox4qD99el1UihxgfBzTXefOzTlFpyq0kKZYblzpOI
4GPjZNZvI44UIidVTmh+4uNa8wMKuWLSqEdcrmJUhdovF5849FxSGvnWzz4T
oinA69ddTAyTkUZBV8yHxFYLcIxqxFo3RWn05MUx75cmAnyYX7lbS1sa9er5
n7t+RoAHQrYER2+TRsq5f97kvqX20yKWP4LMpdGhhouTXsUCbH3xENNrtzTa
Zp0SpvxVgN85er+wspNG1vt+3xBrFmD/VbnFEselkfB98sJvXIAzX3yaM35K
GnUqPvPaQyO4S7F2F9uNul/slO1scYJNhUlrqZc0ou+LWchUIli6Vvufb6A0
+vRv3eJKPYKR6Qbkelsafc54GJthQLBnvknQgRBpal696T+3leCGBGfGhihp
lBXMEDyzJPjJudjVA4nS6Fl6amf4SYKr+pIv/X4tjW683GF3w51gIfv3+Hua
NIpzueNhc4Hgo8YNO1/nSqPqjKe+T68SvJwhc8r5szQaSm12+BRJ8LyMgtTE
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
Ntauyk32gNWbXptPaCihyVX3/v//3c3/AxYbO7g=
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$14918, {2}}]& ], 
        Annotation[#, "Charting`Private`Tag$14918#2"]& ], 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAA78KzuM1gT4L0FM9+vtCuyXpvjse
k18/zYFIGhZqIbz6sC9k2ZJvP7Wwb6jnaTG85RRo+LaSfz+DxkbFsmlBvNpG
hMKlko8/wtSurCFpUbzVX5InnZKfPwqILJ3+ZmG8UmwZ2piSrz+bzMaJhF5x
vJHyXLOWkr8/IV+SQ708gbw7xUoKQnPQP/rBTXZfW5G8cHpOYbNw2D9N+nC+
3WmYvG24ZY4CI+A/Ix4eWTzdnbzU6EkJp2LkP7SJVnq44KC8ii/2ALZZ6D+S
wKbov6ChvHEryJXApew/emPXLJM5obz6Y2uu3W7wP/ZeOAsuQZ+8Yr1WUJBm
8j++sPH57lGavGPx1MDAiPQ/4Jm1BOEwk7yMMLdvpob2P914orQ3mYa8AsC3
N4R6+D9OzpNunBBnvBEqS87fmPo/pNlHgJizeTxIn0Kj8JL8P8AjYJF9cI08
F+/MRn+3/j/q3gktjK+WPJrHugEDaQBAlZBamGvvnDw8HUH/IGQBQI6p9+0k
faA8K+AQ5H10AkAN2yYwMZChPK2oEmi1cgNAy8tA/KlzoTx83l3TK4YEQCQY
PXD6H6A8cTw4S56UBUAc4xrWv2KbPPqfRGLrkAZAHeRATHoglTzQcJpgd6IH
QM8Iu4mJ04k8OUci/t2hCEBDX5PiZ55xPMlFOahAnAlAeb9U8qvRcLylsZk5
4qsKQJhM7nzMfYq8FSMsal6pC0CEKFcD19uUvNIBCIIZvAxAICrJMzepm7y1
CHOm0MkNQIHrrwJCNaC8LBUQamLFDkCD0ZVjjmuhvO+O9hQz1g9AVJz6ECyN
obwjh4cvb2oQQDnunq0njqC84lrb2kLnEEBNBNBgsS2dvEjl0/m1bhFA3pzF
eDH4lrx4cmVoFu0RQEoFyg4Uc4+8TrabShZ2EkDlx5o8Mz17vO78anwD9hJA
ISwi0H5zXzyh14G0bnMTQCdOcPx86IQ8+mg9YHn7E0DvZLYiufCSPB39kVtx
ehRAtYfWPQesmTzmR4vKCAQVQLBcoTjOLp88wybMPx6LFUCVLaySaTWhPGoI
pgQhCRZADJjjwQeloTy3oCQ9w5EWQFDNTEug6qA8zjs8xVIRF0DKx7QLlU6e
PPhqm1NgjhdAQGZhYhcImTzIUJ9VDRYYQP0Z79nPo5E8Yjk8p6eUGEA4KEA7
dD2DPGntzfXclhhAeXv8smnygjxwoV9EEpkYQM7nvBFIp4I8fwmD4XydGEDs
MMLywBCCPJzZyRtSphhA+3gfTq3igDzWeVeQ/LcYQBdBNDKCBX08SrpyeVHb
GEA1r29uvmxzPFFuBMiG3RhAT1RBv0nScjxYIpYWvN8YQGqhQB6+N3I8Z4q5
sybkGEB6UX74ZAJxPIRaAO777BhAFXBVf38tbTy++o1ipv4YQARCweWdeGM8
xa4fsdsAGUDKbRtXh0FiPMxisf8QAxlABPsbh1oKYTzbytScewcZQIfJEiGI
N108+Job11AQGUDoPBWZmntTPP9OrSWGEhlAUdCEa1wMUTwGAz90uxQZQCKG
AOsSOk08FGtiESYZGUCKB2AfYnxDPBsf9F9bGxlAEXSGP8Y6PTwi04WukB0Z
QOG8SZ6kfDM8KocX/cUfGUBuEhx31nwjPDE7qUv7IRlA9LPjPfr7Qjvi8jkh

           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$14918, {3}}]& ], 
        Annotation[#, "Charting`Private`Tag$14918#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., -0.5}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., -0.5}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.999999512844876, 0.9999999999999671}}, {{
        0, 6.283185307179586}, {-0.999999512844876, 0.9999999999999671}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Q\"", "\"U\"", "\"V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7156032019622865`*^9, 3.715603233488204*^9, 3.715603266752286*^9, {
   3.715603313986062*^9, 3.715603318363041*^9}, 3.715603360312177*^9, {
   3.7156034302443094`*^9, 3.7156034672062855`*^9}, {3.7156035016147156`*^9, 
   3.7156035131573715`*^9}, {3.715603606486293*^9, 3.7156036226295786`*^9}, {
   3.715607267880443*^9, 3.715607288140216*^9}, 
   3.7156073216388903`*^9},ExpressionUUID->"103dfa6a-3bd3-4eca-8c6e-\
9bd29ed76f69"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
IJjd1LwDhmkxR2JamyHpvxpqWgcqRLV7QPi8STvMjhTdwZyoEJuLn1xfeDuc
Wc+ZG3SlQhrfio0fNLTDonjszzIvKsQ/WEtSE+kA3Zjrb+1CqJByEP+Q6WoH
0Fjw3W/LpULpj2yTu9M74fr8PaqYcSr0YJ/zXBXdZ1Dep7YjcJUa2fqG6vyM
64EjI6xj927RoKj8ygumA0NQkMdmX+5Oi4g/bD4l2YyCz7BF95EgOqQoLLm5
9/44LJ5RSbENo0OfL6t+CYwaB6divmtpkXRo10KT4VTaOJgFDq6zxdOhzANu
PJn146AkdkloPZcOTYSIfyjbGIe124ZurR/oEKn9ca/VrT/gwXJ2jy0LPdL4
I5hqbDUBbsqKZ1Of0KOera5Pp8mTQOXyxO9xAj3SZa/q9RGehMi02VL/ZHrE
dzedNl96EvJpXvBdycLzh6XSxzUnYbSVmyJSRo8qLvk/++M1CYYXN6KKu+mR
PKH91nbvJMi71Pc2szEgp9jP0dLhU9CcxsNcsZcB8UiTpPbGTYH+Zw/I5WFA
HIYG4bPpU+AiJ5UXKsSAVKIbjAIqpiB3Pe2O7lEGdIvzHYfAzykgB9/n67/A
gDq+mUpKyE3Detopm6koBlTz+LCc3udpUF1RiZF5yoCWtq/6BA5Ow31dhSbP
RAZE4r6xN//3NBC2DgvRZTKgvRF5pA9r08BpumeUr5QBXXzkNmYoOAPSHN8u
635lQIVWJ2WSnGfg5vXu6CcDDIhFVPvcsMcMVDR1vP32nQGxSjYQ2f1nQMWt
QfDaOAN6wrR+XDdmBrQ7s376rTAgvcHqi0wVM2AbcuNyMTcjary8nhW1PgN5
P+yjV/Yxono+K+pvNBSYlrd5qyLEiOweWViyM1PA/behYJsYI8p0yF+8yEsB
f3Wln6MnGBFdFG8U9wkKJG3SXeawZESqejUvYzwp0OWaZO2ZieeL1MSTxvD7
zyjWjVs5jEgjJ4//518KBLwOeuqez4iosKiPGRgF5Cnubc4ljKjI2yNieZ0C
KdfPyl1tYkSsWRNz06wYONptMl4YZUSL9wdzCErYv+cOmbrjjCjkSg//hCoG
+7InlHUmGdH5wYOOVScx6PrV43ZmnhH1R1ReO3IOA4XLBYMqNAQ09knUx9QK
Azpzy9diQgS0fq5SdMAfA0vvHi3RQwTU+9q36l0gBpVJ2mMHxQhIuHhvb2oI
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
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$14996, {}}]& ], 
        Annotation[#, "Charting`Private`Tag$14996#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., -0.5}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., -0.5}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.5, 0.9999999999999836}}, {{
        0, 6.283185307179586}, {-0.5, 0.9999999999999836}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Linear Polarizer\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7156032019622865`*^9, 3.715603233488204*^9, 3.715603266752286*^9, {
   3.715603313986062*^9, 3.715603318363041*^9}, 3.715603360312177*^9, {
   3.7156034302443094`*^9, 3.7156034672062855`*^9}, {3.7156035016147156`*^9, 
   3.7156035131573715`*^9}, {3.715603606486293*^9, 3.7156036226295786`*^9}, {
   3.715607267880443*^9, 3.715607288140216*^9}, 
   3.7156073217220087`*^9},ExpressionUUID->"e1d94cb6-9876-4b8f-82d8-\
092a32807e00"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 951},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 164, 3, 67, "Section",ExpressionUUID->"8fdb9166-14af-4c6a-8cd5-f22126e1048e"],
Cell[747, 27, 3885, 79, 200, "Input",ExpressionUUID->"7a3df993-5a72-4981-9c7c-d8eb769d8d65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4669, 111, 156, 3, 67, "Section",ExpressionUUID->"2f883c56-455b-493d-9cdb-283a9ab0fcfc"],
Cell[CellGroupData[{
Cell[4850, 118, 166, 3, 53, "Subsection",ExpressionUUID->"64cf3db2-b28c-4603-afa6-c5b4769bd9f6"],
Cell[CellGroupData[{
Cell[5041, 125, 357, 7, 69, "Subsubsection",ExpressionUUID->"6ce49fd1-71e4-4c14-b475-a45a202c5b57"],
Cell[5401, 134, 5092, 138, 374, "Input",ExpressionUUID->"d8f5867c-2baf-4dcc-a53f-928c82e9a7c2",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10542, 278, 178, 3, 53, "Subsection",ExpressionUUID->"82f97700-236a-404c-b624-ee47239caac8"],
Cell[10723, 283, 305, 7, 28, "Input",ExpressionUUID->"706830fc-c842-4eba-a315-f5b3c8a0121b"],
Cell[11031, 292, 11357, 277, 1364, "Input",ExpressionUUID->"394ef536-da7c-475c-b72e-6df320894a32",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[22425, 574, 163, 3, 53, "Subsection",ExpressionUUID->"6be471ee-79e6-47c7-ab7e-ca6e053e34aa"],
Cell[22591, 579, 11828, 258, 1109, "Input",ExpressionUUID->"cdd075d5-a56d-4b49-8166-70c60f5e1a93",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34468, 843, 171, 3, 67, "Section",ExpressionUUID->"6f44b0c3-8c80-450c-a3de-a1e3bd7b184b"],
Cell[CellGroupData[{
Cell[34664, 850, 884, 22, 86, "Input",ExpressionUUID->"f9a05848-2e12-47d8-8a2a-6cc1ac2ecdc6"],
Cell[35551, 874, 12442, 319, 1097, "Output",ExpressionUUID->"a95c9dcb-ff8f-4e96-9a03-efb41e1aefba"],
Cell[47996, 1195, 2265, 36, 90, "Message",ExpressionUUID->"2dd9d275-9e36-4c88-b9dd-bd884ce8b2b0"],
Cell[50264, 1233, 459, 10, 21, "Message",ExpressionUUID->"c84b8928-6abf-4d7e-b98c-4efb09a6c49b"],
Cell[50726, 1245, 771, 13, 32, "Output",ExpressionUUID->"9407c9af-f310-4fb5-a16c-6378a0303426"],
Cell[51500, 1260, 2265, 36, 90, "Message",ExpressionUUID->"bd6a1527-a00e-452b-bc39-4245aaf8c871"],
Cell[53768, 1298, 459, 10, 21, "Message",ExpressionUUID->"45d39009-5085-431c-bc08-894b29ddff70"],
Cell[54230, 1310, 2366, 37, 90, "Message",ExpressionUUID->"b7096814-ddf7-4ad8-ba68-3682c258ec59"],
Cell[56599, 1349, 440, 10, 21, "Message",ExpressionUUID->"f9e39116-aa69-434f-aedc-0cc207da3de2"],
Cell[57042, 1361, 2324, 37, 90, "Message",ExpressionUUID->"350ccbf1-c79d-4850-8a80-e9ec599d7722"],
Cell[59369, 1400, 440, 10, 21, "Message",ExpressionUUID->"25308c3a-245a-4b9b-ae50-97e69ccbf415"],
Cell[59812, 1412, 424, 9, 21, "Message",ExpressionUUID->"8a084ac4-b5d4-4d02-8e10-f8fa4d80fb2d"],
Cell[60239, 1423, 2265, 36, 90, "Message",ExpressionUUID->"938be962-0fab-43ec-bc15-a7088c614557"],
Cell[62507, 1461, 2267, 36, 90, "Message",ExpressionUUID->"d702e4c1-0cf1-4f11-b932-a2475d315974"],
Cell[64777, 1499, 428, 9, 21, "Message",ExpressionUUID->"8b94942b-68f2-4430-a9fb-7b13217e1686"],
Cell[65208, 1510, 1647, 41, 245, "Output",ExpressionUUID->"1f8f7023-df82-4250-aede-0475c0476d23"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[66904, 1557, 265, 6, 53, "Section",ExpressionUUID->"cc0b15c0-d048-4754-9dd2-5ead86301455"],
Cell[CellGroupData[{
Cell[67194, 1567, 501, 9, 44, "Subsubsection",ExpressionUUID->"8f0b8c07-214e-4829-afbb-74947d75f3d9"],
Cell[CellGroupData[{
Cell[67720, 1580, 806, 17, 78, "Input",ExpressionUUID->"04b0ad5f-b1a7-455e-9c3c-d8daa56b5c56"],
Cell[68529, 1599, 734, 15, 32, "Output",ExpressionUUID->"a0ed9dcb-ef79-4cfa-b2c2-d6f36d5b9058"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69312, 1620, 217, 4, 53, "Subsection",ExpressionUUID->"55ac41c9-c306-42d1-8844-bcf119e05e6d"],
Cell[CellGroupData[{
Cell[69554, 1628, 184, 4, 28, "Input",ExpressionUUID->"b930bbd5-9772-455f-b1e7-6e5ff757d5c3"],
Cell[69741, 1634, 417, 11, 32, "Output",ExpressionUUID->"251810f4-5566-455d-abbf-d2b9367c20a9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70207, 1651, 165, 3, 53, "Subsection",ExpressionUUID->"e90baba5-1085-4610-8de6-ae4e9234b760"],
Cell[CellGroupData[{
Cell[70397, 1658, 487, 13, 48, "Input",ExpressionUUID->"9a3f59df-7b36-471c-98ff-b89d273eb4b4"],
Cell[70887, 1673, 293, 9, 32, "Output",ExpressionUUID->"2f8aa906-0061-46ba-909d-91b5d3bd6075"]
}, Open  ]]
}, Open  ]],
Cell[71207, 1686, 183, 3, 53, "Subsection",ExpressionUUID->"fc4fa21b-3bf5-4466-9ceb-e0c94a0e4a0e"],
Cell[CellGroupData[{
Cell[71415, 1693, 442, 6, 37, "Subsection",ExpressionUUID->"7708c0b8-c849-4c77-8fd2-d83da55042b7"],
Cell[CellGroupData[{
Cell[71882, 1703, 1212, 23, 78, "Input",ExpressionUUID->"d24c7273-8607-4344-a2e6-f83cd2806d80"],
Cell[73097, 1728, 315, 9, 32, "Output",ExpressionUUID->"6ed5cffe-3285-4194-9284-4b896da3bd92"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73461, 1743, 251, 4, 53, "Subsection",ExpressionUUID->"5f62dfa9-d97d-4e5a-9dc8-57bf6df34690"],
Cell[73715, 1749, 984, 18, 28, "Input",ExpressionUUID->"a56df538-9e10-4944-9543-678afb723f34"],
Cell[CellGroupData[{
Cell[74724, 1771, 216, 5, 28, "Input",ExpressionUUID->"7aeefa28-71aa-45ab-baa8-1e3ecac66fa5"],
Cell[74943, 1778, 337, 10, 32, "Output",ExpressionUUID->"50c1a9bb-6166-4f5c-bf06-0af2e7cdf015"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75329, 1794, 204, 3, 53, "Subsection",ExpressionUUID->"bbbd3045-5ae9-40a3-b9a7-44f6b2a28538"],
Cell[CellGroupData[{
Cell[75558, 1801, 3411, 77, 143, "Input",ExpressionUUID->"fbd7ebed-e05b-4754-961b-9aafbcecb5e5"],
Cell[78972, 1880, 1819, 33, 48, "Output",ExpressionUUID->"25fcb625-c3b6-45d1-a56a-2e6f0d829280"],
Cell[80794, 1915, 1841, 34, 48, "Output",ExpressionUUID->"1e02f4e7-b5d4-44dc-a8ca-566dcccff2ae"],
Cell[82638, 1951, 56123, 973, 240, "Output",ExpressionUUID->"3228c21d-af32-4fc6-bfa9-a79d145c6249"],
Cell[138764, 2926, 1831, 31, 32, "Output",ExpressionUUID->"e6eaf36d-a629-4e1e-bcb5-16ee6b73f56a"]
}, Open  ]],
Cell[140610, 2960, 265, 6, 28, "Input",ExpressionUUID->"11e604d2-8190-4c0c-b425-3ebab2a2746f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140912, 2971, 294, 7, 53, "Subsection",ExpressionUUID->"5d1af739-e29d-49bd-9030-e8547da9b25e"],
Cell[CellGroupData[{
Cell[141231, 2982, 585, 12, 28, "Input",ExpressionUUID->"4af3ba28-f37b-45ae-9324-58379e50fdb4"],
Cell[141819, 2996, 23957, 412, 462, "Output",ExpressionUUID->"1b4942dd-29d5-4f95-8312-d0e603b5f4b3"]
}, Open  ]],
Cell[165791, 3411, 363, 7, 28, "Input",ExpressionUUID->"e8aa91d4-9b3b-42b4-aba0-8a5ff5cb87d0"],
Cell[CellGroupData[{
Cell[166179, 3422, 129, 3, 28, "Input",ExpressionUUID->"f82ae853-64b7-4345-9f73-e6fef3215709"],
Cell[166311, 3427, 130, 3, 32, "Output",ExpressionUUID->"3d4cd61d-8510-4c26-8e71-23c75311c45f"]
}, Open  ]],
Cell[166456, 3433, 753, 17, 48, "Input",ExpressionUUID->"84462be7-46c5-4b3c-bd72-19eaa1b28704"],
Cell[CellGroupData[{
Cell[167234, 3454, 2948, 74, 129, "Input",ExpressionUUID->"3260b323-01e6-4088-90a4-fbdcd3b9e676"],
Cell[170185, 3530, 31158, 547, 266, "Output",ExpressionUUID->"661144f6-1488-4152-ac17-6b04ffb2e55f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201380, 4082, 458, 9, 28, "Input",ExpressionUUID->"1fa38b2e-702d-4caa-b6f9-cc5c29708263"],
Cell[201841, 4093, 14706, 246, 275, "Output",ExpressionUUID->"5ee921d5-f81b-4162-ae4f-d685a5948da1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216584, 4344, 487, 9, 48, "Input",ExpressionUUID->"72c73b5b-c91e-4181-8b49-682c7a5dda15"],
Cell[217074, 4355, 31364, 554, 275, "Output",ExpressionUUID->"27641a65-d287-4285-8fd6-114e13d7d5df"],
Cell[248441, 4911, 12049, 202, 275, "Output",ExpressionUUID->"b67749c7-2592-4a56-b027-a91e0f7a5a8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260527, 5118, 4113, 114, 143, "Input",ExpressionUUID->"bb43f47e-bd98-495b-b14e-9278dfbbd382"],
Cell[264643, 5234, 498, 8, 32, "Output",ExpressionUUID->"f906cdd7-58ed-4558-957a-84b4f4b0dc82"],
Cell[265144, 5244, 46243, 835, 232, "Output",ExpressionUUID->"5f5952b9-53a4-46a4-b426-67a6ef288c7e"],
Cell[311390, 6081, 497, 8, 32, "Output",ExpressionUUID->"405c49dc-28f4-4c01-a4ac-4c305f7c7122"],
Cell[311890, 6091, 46245, 835, 232, "Output",ExpressionUUID->"103dfa6a-3bd3-4eca-8c6e-9bd29ed76f69"],
Cell[358138, 6928, 22126, 404, 237, "Output",ExpressionUUID->"e1d94cb6-9876-4b8f-82d8-092a32807e00"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

