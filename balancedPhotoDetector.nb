(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    440858,       8613]
NotebookOptionsPosition[    432712,       8480]
NotebookOutlinePosition[    433091,       8496]
CellTagsIndexPosition[    433048,       8493]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateListOfFileNames", "[", 
    RowBox[{"prefix_", ",", "date_", ",", "runtimes_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", "fileNames"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fileNames", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "runtimes", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"fileNames", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"prefix", ",", "date", ",", "\"\<_\>\"", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"runtimes", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", "\"\<.dat\>\""}], 
           "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "fileNames"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetFileHeaderInfo", "[", "dataFileName_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rawFile", ",", "data", ",", "association", ",", "k"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rawFile", "=", 
        RowBox[{"Import", "[", "dataFileName", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"association", "=", 
        RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringPart", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rawFile", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "\[Equal]", 
          "\"\<#\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"association", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"association", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"rawFile", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"rawFile", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "association"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ErrorListPlot2", " ", "is", " ", "a", " ", "convenience", " ", 
     RowBox[{"function", ".", " ", "It"}], " ", "accepts", " ", "as", " ", 
     "an", " ", "argument", " ", "a", " ", "list", " ", "of", " ", 
     RowBox[{"lists", ".", " ", "The"}], " ", "first", " ", "level", " ", 
     "of", " ", "lists", " ", "can", " ", "have", " ", "any", " ", 
     RowBox[{"length", ".", " ", "The"}], " ", "second", " ", "level", " ", 
     "should", " ", "have", " ", "3", " ", 
     RowBox[{"elements", ".", " ", "The"}], " ", "first", " ", "element", " ",
      "is", " ", "the", " ", "independent", " ", "variable"}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", 
     "dependent", " ", "variable"}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "third", " ", "element", " ", "is", " ", "the", 
     " ", "error", " ", "associated", " ", "with", " ", "the", " ", 
     "depenedent", " ", 
     RowBox[{"variable", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ErrorListPlot2", "[", "data_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "orderedPairs", ",", "dataT", ",", "errorValues", ",", "errorBars", ",",
        "errorBarData", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dataT", "=", 
       RowBox[{"Transpose", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"orderedPairs", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Drop", "[", 
         RowBox[{"dataT", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"errorValues", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"dataT", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"errorBars", "=", 
       RowBox[{
        RowBox[{"ErrorBar", "[", "errorValues", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"errorBarData", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "data", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"errorBarData", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"orderedPairs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"ErrorBar", "[", 
              RowBox[{
               RowBox[{"errorValues", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ErrorListPlot", "[", "errorBarData", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFileDataset", "[", "dataFileName_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawFile", ",", "headerStrippedData", ",", "columnHeaderLineNumber", 
       ",", "lastColumnToImport", ",", "j", ",", "k", ",", "ass", ",", 
       "tabularData", ",", "ds", ",", "rbAbsorptionRef", ",", 
       "rbAbsorptionPro"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rawFile", "=", 
       RowBox[{"Import", "[", "dataFileName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringPart", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"rawFile", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "\[Equal]", 
         "\"\<#\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"headerStrippedData", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"rawFile", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", "All"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tabularData", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "2"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "headerStrippedData", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"headerStrippedData", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ass", "=", 
            RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k", "=", "1"}], ",", 
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", 
               RowBox[{"headerStrippedData", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ass", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"ass", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"headerStrippedData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
                  RowBox[{
                   RowBox[{"headerStrippedData", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"tabularData", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"tabularData", ",", "ass"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ds", " ", "=", 
       RowBox[{"Dataset", "[", "tabularData", "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImportFile", "[", "dataFileName_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"GetFileHeaderInfo", "[", "dataFileName", "]"}], ",", 
    RowBox[{"GetFileDataset", "[", "dataFileName", "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7150122777567425`*^9, 3.7150122840119996`*^9}, {
   3.7150123261726923`*^9, 3.7150123303405285`*^9}, {3.7150124359734163`*^9, 
   3.715012479646136*^9}, {3.7150128069518833`*^9, 3.715012818751912*^9}, {
   3.7150129667449007`*^9, 3.7150129819452457`*^9}, {3.7150130364173155`*^9, 
   3.7150131715294724`*^9}, {3.7150133166513133`*^9, 
   3.7150133179692016`*^9}, {3.7150133480254803`*^9, 3.715013381257094*^9}, {
   3.715013414513726*^9, 3.715013414978044*^9}, {3.7150135356901937`*^9, 
   3.715013558972037*^9}, {3.7150136509316206`*^9, 3.7150136664751987`*^9}, {
   3.715013710956468*^9, 3.715013751796263*^9}, {3.7150138363427997`*^9, 
   3.715013845285886*^9}, {3.7150139033013687`*^9, 3.715013907556264*^9}, {
   3.7150146812816114`*^9, 3.7150146815527964`*^9}, {3.7150164533544197`*^9, 
   3.7150165176511755`*^9}, {3.7150165661391735`*^9, 3.715016634939995*^9}, {
   3.7150167998842473`*^9, 3.715016921549045*^9}, {3.7150169518296175`*^9, 
   3.715016979725424*^9}, {3.7150170467736287`*^9, 3.715017105548256*^9}, {
   3.7150948951139283`*^9, 3.715094911169752*^9}, {3.7150953668023195`*^9, 
   3.7150953669304056`*^9}, {3.71509547147389*^9, 3.7150954720903053`*^9}, {
   3.7197658839029007`*^9, 3.7197659070372405`*^9}, {3.7197659457708945`*^9, 
   3.7197660290811825`*^9}, {3.7197661229894333`*^9, 3.719766331593191*^9}, {
   3.71976639842731*^9, 3.7197664022978144`*^9}, {3.7197665231443744`*^9, 
   3.719766607216653*^9}, {3.7197666562423406`*^9, 3.719766774943578*^9}, {
   3.7197668095833435`*^9, 3.719766845426547*^9}, {3.7197668922256002`*^9, 
   3.719766973687598*^9}, {3.7197670229320755`*^9, 3.7197671748575573`*^9}, {
   3.719767211001157*^9, 3.719767279392329*^9}, {3.7197673437851367`*^9, 
   3.719767345919751*^9}, {3.71976739892021*^9, 3.719767418071865*^9}, {
   3.7197676091769943`*^9, 3.7197676098816247`*^9}, {3.719767873688553*^9, 
   3.7197678740479684`*^9}, {3.719767906943899*^9, 3.719767953359387*^9}, {
   3.7197681782323227`*^9, 3.7197681846884727`*^9}, {3.719841880776393*^9, 
   3.7198418824845448`*^9}, 3.719841923152977*^9, {3.7198511194510756`*^9, 
   3.7198511333894997`*^9}},ExpressionUUID->"596fa2e4-c4b7-47e8-90be-\
e7948e209090"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"raspberryPi", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Z:\>\"", ",", "\"\<RbData\>\"", ",", "\"\<2017-10-20\>\""}],
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dropBoxfolder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<C:\>\"", ",", "\"\<Users\>\"", ",", "\"\<kahrendsen2\>\"", ",", 
      "\"\<Dropbox\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataFolder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<00School\>\"", ",", "\"\<research\>\"", ",", "\"\<DataRuns\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"folder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"dropBoxfolder", ",", "dataFolder"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "folder", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileNames", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"folder", ",", "\"\<17-11-15_BalancedPhotoDetector\>\""}], 
      "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"names", "=", 
     RowBox[{"FileNames", "[", 
      RowBox[{"StringExpression", "[", 
       RowBox[{
       "\"\<POL\>\"", ",", "__", ",", "\"\<_\>\"", ",", "__", ",", 
        "DigitCharacter", ",", "\"\<.dat\>\""}], "]"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"names", "=", 
  RowBox[{"FileNames", "[", "]"}]}]}], "Input",ExpressionUUID->"122b1f08-e983-\
4e45-96c2-871c2e7f8ac2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"15-06-09_USBCounterError\"\>", 
   ",", "\<\"15-07-06mockPolarizationData\"\>", ",", "\<\"16-01-14\"\>", 
   ",", "\<\"16-01-21_Data\"\>", ",", "\<\"16-05-25_PolarizationData\"\>", 
   ",", "\<\"16-07-06_PolarizationData\"\>", 
   ",", "\<\"16-08-04_PolarizationData\"\>", 
   ",", "\<\"16-08-07_HeliumTargetPictures\"\>", 
   ",", "\<\"16-08-09_PolarizationData\"\>", 
   ",", "\<\"16-10-17_polarimeter\"\>", ",", "\<\"16-10-27_DataReport\"\>", 
   ",", "\<\"16-11-03_faradayRotation\"\>", 
   ",", "\<\"16-11-07_faradayRotation\"\>", 
   ",", "\<\"16-11-18_faradayRotation\"\>", 
   ",", "\<\"16-12-09_faradayRotation\"\>", ",", "\<\"17-01-31\"\>", 
   ",", "\<\"17-02-17_plusMinus\"\>", 
   ",", "\<\"17-03-06_PlusMinusWavemeter\"\>", 
   ",", "\<\"17-03-10_non-RbFaradayRotation\"\>", 
   ",", "\<\"17-03-15_AimingFor5e12\"\>", 
   ",", "\<\"17-03-15_wavemeterNoRb\"\>", ",", "\<\"17-03-28\"\>", 
   ",", "\<\"17-03-29_pumpLaserFindingCircular\"\>", 
   ",", "\<\"17-03-30_WavemeterReliability\"\>", 
   ",", "\<\"17-04-04_polarization\"\>", ",", "\<\"17-04-06_polarization\"\>",
    ",", "\<\"17-04-07_wmReliability\"\>", ",", "\<\"17-04-18\"\>", 
   ",", "\<\"17-04-18_polarization\"\>", ",", "\<\"17-04-22\"\>", 
   ",", "\<\"17-04-25_ProbePolarizationDriftOpenChamber\"\>", 
   ",", "\<\"17-04-30_laserReport\"\>", ",", "\<\"17-05-17_DirtyGunRun\"\>", 
   ",", "\<\"17-05-18_ProbeDrift\"\>", ",", "\<\"17-05-19_BetterLaser\"\>", 
   ",", "\<\"17-05-24_SimplifiedPolarization\"\>", 
   ",", "\<\"17-05-25_LaserProfiling\"\>", ",", "\<\"17-06-02\"\>", 
   ",", "\<\"17-06-06_IntensityOfProbeStudy\"\>", ",", "\<\"17-06-11\"\>", 
   ",", "\<\"17-06-13\"\>", ",", "\<\"17-06-16\"\>", ",", "\<\"17-06-17\"\>", 
   ",", "\<\"17-06-25\"\>", ",", "\<\"17-07-01_nRbVsBufferGasAnalysis\"\>", 
   ",", "\<\"17-07-01_PumpLaserAnalysis\"\>", 
   ",", "\<\"17-07-03_lowerNRb_BGPStudy\"\>", 
   ",", "\<\"17-07-03_ProbeDrift\"\>", ",", "\<\"17-07-03_pumpBroadening\"\>",
    ",", "\<\"17-07-06_lotsOfProbeMeasurements\"\>", 
   ",", "\<\"17-07-06_MagneticField\"\>", ",", "\<\"17-07-06_probePower\"\>", 
   ",", "\<\"17-07-12_polVsPumpPower\"\>", 
   ",", "\<\"17-08-01_rgaInitialScans\"\>", 
   ",", "\<\"17-08-03_redoingSystemDiagnostic\"\>", 
   ",", "\<\"17-08-06_probeDrift\"\>", 
   ",", "\<\"17-08-18_furtherPolarizationStudy\"\>", 
   ",", "\<\"17-08-19_furtherPolarizationStudy2\"\>", 
   ",", "\<\"17-08-22_furtherPolarizationStudyFoundLeak\"\>", 
   ",", "\<\"17-08-29_BvsProbePower_probeDetuneVsMagnetRot\"\>", 
   ",", "\<\"17-09-05_Polarizations_100mTBGP\"\>", ",", "\<\"17-09-20\"\>", 
   ",", "\<\"17-10-03_ElectronGun\"\>", ",", "\<\"17-10-16_ElectronGun\"\>", 
   ",", "\<\"17-10-24_UnpolarizedPolarization\"\>", 
   ",", "\<\"17-10-26_24And30eVRuns\"\>", 
   ",", "\<\"17-10-28_24and30eVRedux\"\>", 
   ",", "\<\"17-11-04_MoreUnpolarizedRuns\"\>", 
   ",", "\<\"17-11-06_UnpolarizedRuns2\"\>", 
   ",", "\<\"17-11-15_BalancedPhotoDetector\"\>", ",", "\<\"NewFile2.tsv\"\>",
    ",", "\<\"NewFile.tsv\"\>", ",", "\<\"pumpPower.png\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7197666093567963`*^9, {3.719766709983227*^9, 3.719766733025034*^9}, 
   3.7197667757197547`*^9, 3.7197668224942417`*^9, {3.719766899814595*^9, 
   3.719766925951026*^9}, 3.7197669764158907`*^9, 3.719767048174368*^9, {
   3.719767149145995*^9, 3.719767200402505*^9}, 3.7197672507995653`*^9, 
   3.719767280911682*^9, 3.7197673858232164`*^9, 3.7197675420415883`*^9, 
   3.719767610449316*^9, 3.719767809823286*^9, 3.7197678613781786`*^9, {
   3.7197679564867496`*^9, 3.719767981501093*^9}, 3.719768108031645*^9, {
   3.7197681657424097`*^9, 3.719768190400571*^9}, 3.7198419398292236`*^9, 
   3.7199218299460955`*^9},ExpressionUUID->"7645e3e0-9f43-43e7-8ac4-\
31c1367ca5c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FDayRotation2017-11-15_154904.dat\"\>", 
   ",", "\<\"FDayRotation2017-11-15_222329.dat\"\>", 
   ",", "\<\"FDayRotation2017-11-16_131648.dat\"\>", 
   ",", "\<\"FDayRotation2017-11-16_135259.dat\"\>", 
   ",", "\<\"intensityData1.csv\"\>", ",", "\<\"intensityData1.xlsx\"\>", 
   ",", "\<\"intensityData2_steppingHWP.xlsx\"\>", 
   ",", "\<\"intensityData3_every2degrees.xlsx\"\>", 
   ",", "\<\"intensityData4_every10degreesFullRev.xlsx\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7197666093567963`*^9, {3.719766709983227*^9, 3.719766733025034*^9}, 
   3.7197667757197547`*^9, 3.7197668224942417`*^9, {3.719766899814595*^9, 
   3.719766925951026*^9}, 3.7197669764158907`*^9, 3.719767048174368*^9, {
   3.719767149145995*^9, 3.719767200402505*^9}, 3.7197672507995653`*^9, 
   3.719767280911682*^9, 3.7197673858232164`*^9, 3.7197675420415883`*^9, 
   3.719767610449316*^9, 3.719767809823286*^9, 3.7197678613781786`*^9, {
   3.7197679564867496`*^9, 3.719767981501093*^9}, 3.719768108031645*^9, {
   3.7197681657424097`*^9, 3.719768190400571*^9}, 3.7198419398292236`*^9, 
   3.7199218299460955`*^9},ExpressionUUID->"6fb723dd-18d4-41af-988d-\
14fa76726e50"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719767202296254*^9, 
  3.719767204734474*^9}},ExpressionUUID->"2342bd97-b1d7-4e33-acad-\
5a7e85ea1875"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"ImportFile", "[", 
    RowBox[{"names", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<STEP\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"det1", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<PRB\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"det2", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<PUMP\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"det3", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<REF\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"difference", "=", 
   RowBox[{"det1", "-", "det2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sum", "=", 
   RowBox[{"det1", "+", "det2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"average", "=", 
   RowBox[{"sum", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizedIntensity", "=", 
    RowBox[{"difference", "/", "sum"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDet1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "det1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDet2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "det2"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataDiff", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"angle", ",", "difference"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataNorm", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "normalizedIntensity"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"sum", ",", 
   RowBox[{"LabelStyle", "\[Rule]", "30"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7197660373922014`*^9, 3.7197660498740587`*^9}, {
  3.719766344512555*^9, 3.719766357583848*^9}, {3.71976718482265*^9, 
  3.719767190598956*^9}, {3.71976735073493*^9, 3.7197673935901103`*^9}, {
  3.7197682523746004`*^9, 3.719768298606872*^9}, {3.719841954625204*^9, 
  3.7198419662710657`*^9}, {3.719842191184346*^9, 3.7198421917357187`*^9}, {
  3.719842529680666*^9, 3.719842578497592*^9}, {3.7198426159048233`*^9, 
  3.719842803280751*^9}, {3.7198428414737563`*^9, 3.7198428580640497`*^9}, {
  3.7198429053042154`*^9, 3.719843042842698*^9}, {3.7198445692842607`*^9, 
  3.7198445797473183`*^9}, {3.7198448728039885`*^9, 3.719844874779321*^9}, {
  3.7198450506999817`*^9, 3.7198450509071198`*^9}, {3.7198451344195566`*^9, 
  3.719845141931671*^9}, {3.7199227546430416`*^9, 3.719922761638561*^9}, {
  3.7199228940833397`*^9, 
  3.719922905412228*^9}},ExpressionUUID->"bc4536dc-15f5-464f-a833-\
09e3902e27ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.632709`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"-", "0.301737`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0.17670699999999995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0.5955360000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "0.725605`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "0.526762`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "0.10197800000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", 
     RowBox[{"-", "0.365627`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", 
     RowBox[{"-", "0.6627839999999999`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", 
     RowBox[{"-", "0.631564`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", 
     RowBox[{"-", "0.27998300000000004`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"110", ",", "0.17945499999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "0.586529`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"130", ",", "0.724994`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140", ",", "0.526151`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"150", ",", "0.08755200000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"160", ",", 
     RowBox[{"-", "0.39096800000000004`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"170", ",", 
     RowBox[{"-", "0.6733939999999999`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"180", ",", 
     RowBox[{"-", "0.627901`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"190", ",", 
     RowBox[{"-", "0.2997520000000001`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "0.19563699999999995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"210", ",", "0.591185`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"220", ",", "0.722628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"230", ",", "0.526151`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"240", ",", "0.08121600000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"250", ",", 
     RowBox[{"-", "0.378908`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"260", ",", 
     RowBox[{"-", "0.666753`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"270", ",", 
     RowBox[{"-", "0.629427`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"280", ",", 
     RowBox[{"-", "0.29357`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"290", ",", "0.177622`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", "0.597216`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"310", ",", "0.728276`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"320", ",", "0.531189`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"330", ",", "0.088086`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"340", ",", 
     RowBox[{"-", "0.376007`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"350", ",", 
     RowBox[{"-", "0.6710280000000001`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.719845142579111*^9, 3.7199218325684156`*^9, 3.719922761966705*^9, {
   3.719922898458604*^9, 
   3.7199229056934757`*^9}},ExpressionUUID->"b434cfa5-4dfd-4699-9d2e-\
ae6801b91155"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQEf7B283ty69+6lPVTAwcY3bc/akldQPoeDyMs6
P8d/ML6Aw701B3+vinkN5Ys4cEjPi9P0hvElHA647Cn99xamXsbh0I/MO7Pv
w/gKDin23Us97GB8JYf2OzzmDz7D7FdxsHKcLWP3EsZXc1hWw7HKTR+mXsNB
z/qIfU4mjK/lEH9JYu1iLZj9Og6Cf2/9emkP4+s5PNi7+FiLBIxv4LBHnZ97
6zKYfkMHq4vrnE75w/hGDrJrszzdLWF8Y4c2a3G3qosw95g4XNFbNvNdKUze
1IF907yo2q8wvpnD5+NbzHpzYfaZOzAJ+S7ocIXxLRzMSuVE/3+Hqbd0OPM2
7t3kxTC+lUPf2nSO4zowvrXDQXPf+bIfYPbbOEw4IF/37zeMb+vg/jhgP3c0
TL0dmv/sHRb8uWud5QOz38FhddSlQL40KL/BwSF4ZhJfEx9M3tFhjr/s6inz
oPobHB3CdF9qsBvDzHNyWHpbaOcDnlf2AKLKp8Q=
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.8043059},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1013.3333333333337`, Automatic},
  LabelStyle->30,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 36.}, {0.806821, 0.857123}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.719845142579111*^9, 3.7199218325684156`*^9, 3.719922761966705*^9, {
   3.719922898458604*^9, 
   3.7199229057247267`*^9}},ExpressionUUID->"2e83acae-4d64-42eb-9af8-\
561ea41c33aa"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DFTC", "[", 
    RowBox[{"list_", ",", "rev_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "numItems", ",", "i", ",", "k", ",", "j", ",", "returnList", ",", 
       "intensity"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"returnList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"numItems", "=", 
       RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "0"}], ",", 
        RowBox[{"j", "<", 
         RowBox[{"numItems", "/", "2"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"returnList", ",", "0"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<=", "numItems"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"intensity", "=", 
          RowBox[{"list", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", " ", "[", 
          RowBox[{
           RowBox[{"i", "=", "0"}], ",", 
           RowBox[{"i", "<", 
            RowBox[{"numItems", "/", "2"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"i", "\[Equal]", "0"}], " ", "||", 
               RowBox[{"i", "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"numItems", "/", "2"}], "-", "1"}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"returnList", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["1", "numItems"], "*", "intensity", "*", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                   "2", "*", "\[Pi]", " ", "*", "i", " ", "*", "rev", "*", 
                    " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"k", "-", "1"}], ")"}], "numItems"]}], 
                   "]"}]}]}]}], ";"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"returnList", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["2", "numItems"], "*", "intensity", "*", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                   "2", "*", "\[Pi]", " ", "*", "i", "*", " ", "rev", " ", 
                    "*", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"k", "-", "1"}], ")"}], "numItems"]}], 
                   "]"}]}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "returnList"}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DFTS", "[", 
    RowBox[{"list_", ",", "rev_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "numItems", ",", "i", ",", "k", ",", "j", ",", "error", ",", 
       "returnList", ",", "intensity", ",", "errors"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"returnList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"error", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"numItems", "=", 
       RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "0"}], ",", 
        RowBox[{"j", "<", 
         RowBox[{"numItems", "/", "2"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"returnList", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"errors", ",", "0"}], "]"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<=", "numItems"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"intensity", "=", 
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", " ", "[", 
          RowBox[{
           RowBox[{"k", "=", "0"}], ",", 
           RowBox[{"k", "<", 
            RowBox[{"numItems", "/", "2"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", "\[Equal]", "0"}], " ", "||", 
               RowBox[{"k", "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"numItems", "/", "2"}], "-", "1"}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"returnList", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["1", "numItems"], "*", "intensity", "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                   "2", "*", "\[Pi]", " ", "*", "k", " ", "*", "rev", "*", 
                    " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], 
                   "]"}]}]}]}], ";"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"returnList", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["2", "numItems"], "*", "intensity", "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                   "2", "*", "\[Pi]", " ", "*", "k", "*", " ", "rev", " ", 
                    "*", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], 
                   "]"}]}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<=", "numItems"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"intensity", "=", 
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", " ", "[", 
          RowBox[{
           RowBox[{"k", "=", "0"}], ",", 
           RowBox[{"k", "<", 
            RowBox[{"numItems", "/", "2"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", "\[Equal]", "0"}], " ", "||", 
               RowBox[{"k", "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"numItems", "/", "2"}], "-", "1"}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"returnList", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["1", "numItems"], "*", "intensity", "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                   "2", "*", "\[Pi]", " ", "*", "k", " ", "*", "rev", "*", 
                    " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], 
                   "]"}]}]}]}], ";"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"returnList", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"returnList", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["2", "numItems"], "*", "intensity", "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                   "2", "*", "\[Pi]", " ", "*", "k", "*", " ", "rev", " ", 
                    "*", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], 
                   "]"}]}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "returnList"}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DFT", "[", 
    RowBox[{"list_", ",", "rev_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DFTS", "[", 
      RowBox[{"list", ",", "rev"}], "]"}], ",", 
     RowBox[{"DFTC", "[", 
      RowBox[{"list", ",", "rev"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.714930989766158*^9, 3.714931273381729*^9}, {
   3.714931593824005*^9, 3.714931657376255*^9}, {3.7149317594086933`*^9, 
   3.7149318090724907`*^9}, {3.71493188536441*^9, 3.7149320456424866`*^9}, {
   3.7149321011542645`*^9, 3.7149322504688797`*^9}, {3.7149324325817184`*^9, 
   3.714932533462733*^9}, {3.714932566749175*^9, 3.7149325925735903`*^9}, {
   3.714932728934595*^9, 3.7149327828783064`*^9}, {3.7149328223992023`*^9, 
   3.7149328643447485`*^9}, {3.7149330096396275`*^9, 3.714933188185135*^9}, {
   3.714933334274555*^9, 3.714933344674633*^9}, {3.714933481762928*^9, 
   3.7149334851942625`*^9}, {3.7149335404528685`*^9, 
   3.7149335524200125`*^9}, {3.714933586058905*^9, 3.7149336140759726`*^9}, {
   3.714933726204281*^9, 3.7149337445157423`*^9}, {3.7149338202853065`*^9, 
   3.7149338293484745`*^9}, {3.714933886429321*^9, 3.714933890604162*^9}, {
   3.7149339484293165`*^9, 3.714933990891946*^9}, {3.7149340294619503`*^9, 
   3.714934029622057*^9}, {3.7149340623090963`*^9, 3.7149340937983265`*^9}, {
   3.7149353616214447`*^9, 3.7149353762584057`*^9}, {3.714935420651596*^9, 
   3.7149354571341934`*^9}, 3.7149356093017855`*^9, 3.7149357207339354`*^9, {
   3.714935961757963*^9, 3.7149360308948145`*^9}, {3.7149363216768627`*^9, 
   3.714936322317294*^9}, {3.7149364382774754`*^9, 3.714936454469393*^9}, {
   3.714936486614064*^9, 3.7149365236610413`*^9}, {3.7149367613022614`*^9, 
   3.7149367737816753`*^9}, {3.714936823230014*^9, 3.7149368397581573`*^9}, {
   3.7149368699064827`*^9, 3.7149369080932293`*^9}, {3.71493705408037*^9, 
   3.714937057143552*^9}, {3.714937204063235*^9, 3.714937207781885*^9}, {
   3.7149372759514565`*^9, 3.714937287255512*^9}, {3.7149373625054283`*^9, 
   3.7149373631848907`*^9}, {3.7149941667534285`*^9, 3.714994304506333*^9}, {
   3.715090026318074*^9, 3.7150901122450066`*^9}, {3.715090156200736*^9, 
   3.7150901694827538`*^9}, {3.715090221220171*^9, 3.715090232720847*^9}, {
   3.715090380824772*^9, 3.715090382121738*^9}, {3.71509041515535*^9, 
   3.715090418686855*^9}, {3.7159946422620554`*^9, 3.7159947497827024`*^9}, {
   3.7159948175585985`*^9, 3.7159948246944885`*^9}, {3.7159948713664527`*^9, 
   3.715994873054201*^9}, {3.7159951411580544`*^9, 3.715995149557665*^9}, {
   3.7197682109473877`*^9, 
   3.719768211794815*^9}},ExpressionUUID->"0fbff5b3-fa0e-4926-bc88-\
ebd45b8daf62"],

Cell[CellGroupData[{

Cell["\<\
According to a Chp 22 in an optics handbook (chapter authored by Russell A. \
Chipman), We have the following mueller matrix for a general retarder\
\>", "Subsubsection",
 CellChangeTimes->{{3.7150992515927672`*^9, 3.715099258910709*^9}, {
  3.715099430239667*^9, 
  3.715099492743205*^9}},ExpressionUUID->"b56ba961-9425-4e66-8e5d-\
49a05d056cf4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LR", "[", 
   RowBox[{"\[Theta]fast_", ",", "retardance_"}], "]"}], ":=", 
  RowBox[{"(", GridBox[{
     {"1", "0", "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]fast"}], "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]fast"}], "]"}], "^", "2"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Theta]fast"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]fast"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", "\[Theta]fast"}], "]"}]}], 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}]},
     {"0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Theta]fast"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]fast"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", "\[Theta]fast"}], "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]fast"}], "]"}], 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}], "^", "2"}]}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]fast"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}]},
     {"0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Theta]fast"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]fast"}], "]"}]}], 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}], 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Pi]", " ", "retardance"}], "]"}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LRzero", "[", "\[Delta]_", "]"}], ":=", 
   RowBox[{"(", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", 
       RowBox[{"Cos", "[", "\[Delta]", "]"}], 
       RowBox[{"Sin", "[", "\[Delta]", "]"}]},
      {"0", "0", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Delta]", "]"}]}], 
       RowBox[{"Cos", "[", "\[Delta]", "]"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LPzero", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", GridBox[{
       {"1", "1", "0", "0"},
       {"1", "1", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MuellerRotation", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"(", GridBox[{
     {"1", "0", "0", "0"},
     {"0", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Theta]"}], "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}]}], "0"},
     {"0", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "\[Theta]"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Theta]"}], "]"}], "0"},
     {"0", "0", "0", "1"}
    }], ")"}]}]}], "Input",
 CellChangeTimes->{{3.715099506417509*^9, 3.7150999047075634`*^9}, {
  3.7151000510035377`*^9, 3.715100065626396*^9}, {3.7151008809847164`*^9, 
  3.7151008942303023`*^9}, {3.7151010976222024`*^9, 3.7151011788385115`*^9}, {
  3.7151023376505847`*^9, 3.715102362560378*^9}, {3.7151081233758526`*^9, 
  3.715108128489396*^9}, {3.715175328800923*^9, 3.715175370881539*^9}, {
  3.715604651474867*^9, 3.71560474553402*^9}, {3.7156048869142723`*^9, 
  3.7156048888567533`*^9}, {3.715604984035781*^9, 3.7156049867190228`*^9}, {
  3.715607609265271*^9, 3.715607614924973*^9}, {3.7197494736161304`*^9, 
  3.719749473768295*^9}},ExpressionUUID->"f5207a12-5bb4-4e0c-820a-\
4b2d27a85353"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We will assume our incident vector was 100% linearly polarized in the \
horizontal direction\
\>", "Subsubsection",
 CellChangeTimes->{{3.7150998748362465`*^9, 3.7150999197057714`*^9}, {
  3.7150999940511394`*^9, 3.7151000097947555`*^9}, {3.7151004934846153`*^9, 
  3.715100508132429*^9}, {3.7151005395804043`*^9, 3.715100622636276*^9}, {
  3.715100704676879*^9, 
  3.715100728253394*^9}},ExpressionUUID->"1f60d278-e3ea-45e1-9c0a-\
931188da2437"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"inc", "=", 
  RowBox[{"(", GridBox[{
     {"1"},
     {"0"},
     {"1"},
     {"0"}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"LRzero", "[", "\[Delta]", "]"}], ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], "]"}]}], ")"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7151006245030336`*^9, 3.715100624876859*^9}, {
   3.715100685750094*^9, 3.7151006998130736`*^9}, {3.7151007353253317`*^9, 
   3.715100775933672*^9}, {3.71510085567815*^9, 3.715100857862251*^9}, {
   3.715101071975757*^9, 3.71510107278231*^9}, 3.7151022503685045`*^9, 
   3.715102732594359*^9, {3.7151029214935303`*^9, 3.715102921804517*^9}, {
   3.71560571366185*^9, 3.715605734425416*^9}, {3.7156075189010153`*^9, 
   3.715607537042543*^9}, {3.719749388920704*^9, 
   3.719749391800187*^9}},ExpressionUUID->"1974e1a4-259a-4994-8c47-\
6b8d4939b9c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7151027330030437`*^9, 3.715102922350258*^9, 3.715103018881852*^9, 
   3.7151769662879243`*^9, 3.7155361959749966`*^9, 3.7156054861327267`*^9, {
   3.715605723359839*^9, 3.7156057348146276`*^9}, 3.715607539446978*^9, 
   3.7157077367663856`*^9, {3.71974945269519*^9, 3.719749459806636*^9}, 
   3.7197494968664274`*^9, 3.7197690923594933`*^9, 
   3.7199218430008936`*^9},ExpressionUUID->"b7b090bd-8be4-405a-8ef2-\
678f52890aac"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Delta]", "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]},
     {"0", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Delta]", "]"}]}]},
     {"0", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Delta]", "]"}]}], 
      RowBox[{"Cos", "[", "\[Delta]", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7151027330030437`*^9, 3.715102922350258*^9, 3.715103018881852*^9, 
   3.7151769662879243`*^9, 3.7155361959749966`*^9, 3.7156054861327267`*^9, {
   3.715605723359839*^9, 3.7156057348146276`*^9}, 3.715607539446978*^9, 
   3.7157077367663856`*^9, {3.71974945269519*^9, 3.719749459806636*^9}, 
   3.7197494968664274`*^9, 3.7197690923594933`*^9, 
   3.7199218430165253`*^9},ExpressionUUID->"904331a4-4913-422b-8bf3-\
dcc401144534"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
First, we pass the 45\[Degree] light through a horizontal linear polarizer \
and a vertical linear polarizer. \
\>", "Section",
 CellChangeTimes->{{3.719749539231494*^9, 
  3.7197495876715183`*^9}},ExpressionUUID->"5bb748da-4bee-485f-9f15-\
e1d5b5b76ffe"],

Cell[CellGroupData[{

Cell["First Horizontal", "Subsection",
 CellChangeTimes->{{3.719749625559496*^9, 
  3.719749629310981*^9}},ExpressionUUID->"1f538b94-c7d8-4277-9786-\
f9c0c94c572b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LPzero", ".", "inc"}]], "Input",
 CellChangeTimes->{{3.7197495919598384`*^9, 
  3.719749607247356*^9}},ExpressionUUID->"7e083974-0d30-42ea-95af-\
fac103c79ada"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7197496474377728`*^9, {3.719769083339423*^9, 
   3.719769097180265*^9}},ExpressionUUID->"73176b0c-ef78-48f1-9f8c-\
e317ac5e3927"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Then vertical", "Subsection",
 CellChangeTimes->{{3.7197496372636013`*^9, 
  3.7197496503991475`*^9}},ExpressionUUID->"33ecc48c-c17e-4dd2-90f4-\
4448e5ad92fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vertLP", "=", 
   RowBox[{
    RowBox[{"MuellerRotation", "[", 
     RowBox[{"\[Pi]", "/", "2"}], "]"}], ".", "LPzero", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"MuellerRotation", "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"vertLP", ".", "inc"}]}], "Input",
 CellChangeTimes->{{3.719749653976249*^9, 
  3.719749752912033*^9}},ExpressionUUID->"b25a6795-58c3-46d5-85f9-\
37e411ce1d4a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.719749699357726*^9, 3.719749710143527*^9}, {
   3.7197497493887463`*^9, 3.719749753198414*^9}, 3.719769100500016*^9, 
   3.7199218495100503`*^9},ExpressionUUID->"c542eba1-0642-4d29-8b2a-\
33c687338784"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now we want to have an arbitrary linearly polarized input, and see how the \
intensity changes as the angle changes for both the vertical polarizer and \
the horizontal
polarizer. We begin the arbitrary polarization at 45\[Degree].\
\>", "Subsection",
 CellChangeTimes->{{3.719749800855319*^9, 3.719749830631254*^9}, {
  3.7197498928546915`*^9, 3.7197499288302383`*^9}, {3.719749965342338*^9, 
  3.7197499832702417`*^9}},ExpressionUUID->"a056d93b-53fc-44ca-a838-\
fd5557b5095a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"arbinc", "=", 
   RowBox[{"(", GridBox[{
      {"1"},
      {"1"},
      {"0"},
      {"0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arbLP", "=", 
   RowBox[{
    RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], ".", "LPzero", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"MuellerRotation", "[", "\[Theta]", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arbinc", "=", 
   RowBox[{
    RowBox[{"LR", "[", 
     RowBox[{"\[Theta]", ",", ".5"}], "]"}], ".", "arbinc"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LPzero", ".", "arbinc"}], "\[IndentingNewLine]", 
 RowBox[{"vertLP", ".", "arbinc"}], "\[IndentingNewLine]", 
 RowBox[{"balancedIntensity", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"LPzero", ".", "arbinc"}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"vertLP", ".", "arbinc"}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7197498332004004`*^9, 3.719749885303258*^9}, {
   3.7197499326225348`*^9, 3.719750067454442*^9}, {3.719750141245785*^9, 
   3.719750145493662*^9}, {3.7197501976313877`*^9, 3.7197502144533453`*^9}, 
   3.719750331437702*^9, {3.719750406381483*^9, 3.719750416525867*^9}, {
   3.71976895328592*^9, 3.7197690659031715`*^9}, {3.719769141311273*^9, 
   3.719769169886428*^9}, {3.7197692382075357`*^9, 3.719769263078602*^9}, 
   3.719772295844415*^9, {3.719772459084523*^9, 3.719772543429414*^9}, {
   3.7197926339430904`*^9, 3.7197926360058174`*^9}, {3.719792676126253*^9, 
   3.719792757502467*^9}, {3.7197928177273006`*^9, 3.7197928566955566`*^9}, {
   3.7197929077839165`*^9, 3.7197929141359224`*^9}, {3.7197929779212604`*^9, 
   3.7197930584323196`*^9}, {3.7197931234415855`*^9, 3.719793142152923*^9}, 
   3.719842261143534*^9, {3.7198437497377644`*^9, 3.7198438113062925`*^9}, {
   3.7198439812503233`*^9, 3.7198439864498634`*^9}, {3.719844034155344*^9, 
   3.7198440371303687`*^9}},ExpressionUUID->"7c8a6d3c-09b8-42ea-b307-\
3ff373e6ed20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], "-", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], "-", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.71974995588649*^9, {3.719750005119372*^9, 3.7197500218382044`*^9}, 
   3.7197500695544605`*^9, 3.7197501713292956`*^9, 3.7197502147728405`*^9, {
   3.719750413860669*^9, 3.7197504168201995`*^9}, {3.719769079588338*^9, 
   3.719769102718137*^9}, 3.7197691731877775`*^9, 3.7197692467064466`*^9, {
   3.7197724851481175`*^9, 3.719772487165465*^9}, {3.7197725265130053`*^9, 
   3.7197725438587055`*^9}, {3.7197927310756826`*^9, 3.719792758076233*^9}, {
   3.7197927934288087`*^9, 3.7197928198117824`*^9}, {3.719792851948468*^9, 
   3.719792857147391*^9}, {3.7197929896460924`*^9, 3.719793023548936*^9}, 
   3.719793059021551*^9, 3.719793142829172*^9, 3.719842224817032*^9, 
   3.7198422659287634`*^9, 3.7198437502320995`*^9, {3.719843804350603*^9, 
   3.71984381172958*^9}, 3.719843986818115*^9, 3.7198440382501316`*^9, 
   3.719844287918479*^9, 
   3.719921851650815*^9},ExpressionUUID->"7ad8965e-9f48-4641-ac87-\
a2cbb4933dbf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], "-", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.71974995588649*^9, {3.719750005119372*^9, 3.7197500218382044`*^9}, 
   3.7197500695544605`*^9, 3.7197501713292956`*^9, 3.7197502147728405`*^9, {
   3.719750413860669*^9, 3.7197504168201995`*^9}, {3.719769079588338*^9, 
   3.719769102718137*^9}, 3.7197691731877775`*^9, 3.7197692467064466`*^9, {
   3.7197724851481175`*^9, 3.719772487165465*^9}, {3.7197725265130053`*^9, 
   3.7197725438587055`*^9}, {3.7197927310756826`*^9, 3.719792758076233*^9}, {
   3.7197927934288087`*^9, 3.7197928198117824`*^9}, {3.719792851948468*^9, 
   3.719792857147391*^9}, {3.7197929896460924`*^9, 3.719793023548936*^9}, 
   3.719793059021551*^9, 3.719793142829172*^9, 3.719842224817032*^9, 
   3.7198422659287634`*^9, 3.7198437502320995`*^9, {3.719843804350603*^9, 
   3.71984381172958*^9}, 3.719843986818115*^9, 3.7198440382501316`*^9, 
   3.719844287918479*^9, 
   3.719921851650815*^9},ExpressionUUID->"320353f5-6f1c-42c5-8a5b-\
fc79a2580707"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", "\[VeryThinSpace]", "+", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], "-", 
   RowBox[{"1.`", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.71974995588649*^9, {3.719750005119372*^9, 3.7197500218382044`*^9}, 
   3.7197500695544605`*^9, 3.7197501713292956`*^9, 3.7197502147728405`*^9, {
   3.719750413860669*^9, 3.7197504168201995`*^9}, {3.719769079588338*^9, 
   3.719769102718137*^9}, 3.7197691731877775`*^9, 3.7197692467064466`*^9, {
   3.7197724851481175`*^9, 3.719772487165465*^9}, {3.7197725265130053`*^9, 
   3.7197725438587055`*^9}, {3.7197927310756826`*^9, 3.719792758076233*^9}, {
   3.7197927934288087`*^9, 3.7197928198117824`*^9}, {3.719792851948468*^9, 
   3.719792857147391*^9}, {3.7197929896460924`*^9, 3.719793023548936*^9}, 
   3.719793059021551*^9, 3.719793142829172*^9, 3.719842224817032*^9, 
   3.7198422659287634`*^9, 3.7198437502320995`*^9, {3.719843804350603*^9, 
   3.71984381172958*^9}, 3.719843986818115*^9, 3.7198440382501316`*^9, 
   3.719844287918479*^9, 
   3.71992185166644*^9},ExpressionUUID->"ec280732-eaee-4dc1-b79e-\
279d68db8240"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719842275721367*^9, 
  3.7198422821276884`*^9}},ExpressionUUID->"c8788c08-6a3c-42bd-bad7-\
75d1300106a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Looking at how the small angle approximation might be used to calculate the \
angle\
\>", "Subsection",
 CellChangeTimes->{{3.7197503357783003`*^9, 3.719750391341377*^9}, {
  3.7197725317395306`*^9, 
  3.7197725334516854`*^9}},ExpressionUUID->"daa1b5d9-d7e2-4f5d-ac56-\
b511db8e639b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "balancedIntensity", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7197501280868626`*^9, 3.71975016843011*^9}, {
   3.7197502524080973`*^9, 3.7197502852941494`*^9}, 3.71975031602975*^9, {
   3.719750475886902*^9, 3.719750524206856*^9}, {3.7197649665204463`*^9, 
   3.719764966800584*^9}, {3.71976831920722*^9, 3.719768336174403*^9}, 
   3.7197691900387807`*^9},ExpressionUUID->"65915b49-7d6e-4567-9053-\
4713cb8e73e6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
v3kU5N+oxVVuZePJ0S37YQ0TpOSEZSR/sbD75sonpW+Y0BrrTPBOM3G/ff+N
hFwmPGn3rRFpYWKzBA6XG9+YsOaV65GYQibeTdXUQSNMiK7xO7ElgIm5lt+y
sTILAl/q6zpxMHFk3V19nM2C83oHBpJHGZhHKGVnfDkLXm79a8X+ysBe+uVr
A8h90hqdLdnFLxn4dNHixN4ZFvBsPXB37gQDyye5JpTsZsPL/VvvzeaP4Kyr
R+aKP7NB4ojrng/nh/GGnAv9cXVsCHc1udqoPYyj2CG//PrY8JNZ1fZAbBhf
O1v6RpuXgH+fVTeU5w1hncM7TIoPErDmv+4ytDyI69eJpxX9IvepvMZy6PoA
nj974X2H2xgM+kek2G7pxbZiEz5FXmMQ/0l2p8tcD64oubb/mf8YTOMNm3ZW
9OCHUmF/zMPH4F+fhfeYRQ9W+JXC1ZA+BrRTEWsOB3fj47sHzaqZYyDmdnP/
1Rcd+L3omeVc57/QsNTJSrvYhO2KzY4+dBiHmpiYJ3FpRXhnLp0idZHMrKMb
4+59wlwfWutfeo+Di31R63rXfJyYYH0yO3QcbPkP2LKUc3BvkIN1U+o4KH4L
L1o+moztDLxc1hDjcCPpPiso/gnYNT8JTfGeAHqvR7ZD5hfYWXvSYMeNCYit
/cEUxeXAVSW16lPoBDglSeVa1lRA4qe4B99jyBw3Wlcx8A16495EsQsnQLmy
44m5eA3Ynfv4WoVjErZYPFyTrlQHZ/82lJaGTsKozbeNEkqtYHvt4cn8h5NQ
OqBQoPqiFSy5jdgfoifhtqtONkusDcyoX6TjUyZhU+JyhtRsGxzUzPTyq5wE
7m21K7bjDtgaeF95N/8UvBBTrHZ41g2zonrR2SFTsOPkcbGZrj6YjOHclvZg
Cjp6zkZ8EeuHv/LFFYlPp8AoYMoD7e8HhorKRETyFGRahBscfNMPHebyxpe+
TcFZrnC56/YDUJbwj3sL3zSMJi1ZVTYOwr3teReTgqfBeaXLxnXuI1C9s3nQ
M3wa5CYkvRujRoBfdcbqQNQ0KGys0fivaARuaaob9b+ZBs/uGw1veRlwXSdP
Ub5iGs52/9DgeMwA5+N5PXHcM7B9m+78vbhRSDFrNnddOQN1BYHNI0WjMGg+
80tLfAZy9gRPtLeNwhkr9ZI2+Rmo1r0qdovOBHOHvFgpnRnYHyt2puoeE/R9
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
AexFBWM=
       "]]},
     Annotation[#, "Charting`Private`Tag$6630#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{728., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999986633107022, 0.9999999999998685}}, {{
     0, 6.283185307179586}, {-0.9999986633107022, 0.9999999999998685}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7197501738283005`*^9, 3.7197502213022747`*^9, {3.719750261680033*^9, 
   3.719750285649642*^9}, 3.7197503170712147`*^9, {3.7197504958073435`*^9, 
   3.7197505244805775`*^9}, {3.7197649623007407`*^9, 3.719764967358557*^9}, 
   3.7197683371855583`*^9, {3.7197691807628784`*^9, 3.719769190525535*^9}, 
   3.719769251752276*^9, 3.7197724917965865`*^9, {3.7197725357722497`*^9, 
   3.7197725467646637`*^9}, 3.7197927340380917`*^9, 3.719792824629157*^9, 
   3.719793064199301*^9, 3.719793145232701*^9, 
   3.71992185661989*^9},ExpressionUUID->"e04aa4b1-4dd6-4f84-9580-\
7693c0eba952"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Building a model for the rotating the HWP data", "Section",
 CellChangeTimes->{{3.7198422867678175`*^9, 
  3.719842296335271*^9}},ExpressionUUID->"b8bf1754-fcf4-41da-8784-\
dbb52f3c8bee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"model1", "=", 
  RowBox[{
   RowBox[{
    FractionBox["A", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}], "*", 
         RowBox[{"\[Pi]", "/", "180"}]}], "]"}], "^", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}], "*", 
         RowBox[{"\[Pi]", "/", "180"}]}], "]"}], "^", "2"}]}], ")"}]}], "+", 
   "B"}]}], "\[IndentingNewLine]", 
 RowBox[{"model2", "=", 
  RowBox[{
   RowBox[{
    FractionBox["A", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}], "*", 
         RowBox[{"\[Pi]", "/", "180"}]}], "]"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}], "*", 
         RowBox[{"\[Pi]", "/", "180"}]}], "]"}], "^", "2"}]}], ")"}]}], "+", 
   "B"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelDifference", "=", 
   RowBox[{"A", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}], "*", 
         RowBox[{"\[Pi]", "/", "180"}]}], "]"}], "^", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}], "*", 
         RowBox[{"\[Pi]", "/", "180"}]}], "]"}], "^", "2"}]}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"fit1", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataDet1", ",", "model1", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o", ",", "B"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit2", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataDet2", ",", "model2", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o", ",", "B"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitDiff", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataDiff", ",", "modelDifference", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitNorm", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataNorm", ",", "modelDifference", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7198422986728477`*^9, 3.7198424999916396`*^9}, {
  3.7198430717531986`*^9, 3.7198432391130843`*^9}, {3.7198432952749662`*^9, 
  3.719843305433819*^9}, {3.719843846524047*^9, 3.719843850025409*^9}, {
  3.7198440529621477`*^9, 3.719844108723112*^9}, {3.719844216981623*^9, 
  3.719844232235918*^9}, {3.7198443056684494`*^9, 3.719844310179492*^9}, {
  3.7198444732274714`*^9, 3.7198445036359806`*^9}, {3.7198495181412387`*^9, 
  3.7198495310189238`*^9}},ExpressionUUID->"0d98292b-e908-43a0-a250-\
d63bc4652203"],

Cell[BoxData[
 RowBox[{"B", "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "A", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["1", "90"], " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}]}], "]"}], "2"], "-", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "90"], " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}]}], "]"}], "2"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.719843167312654*^9, 3.7198431967194896`*^9}, 
   3.7198432397044835`*^9, 3.719843306278387*^9, {3.7198441150644298`*^9, 
   3.7198441353940763`*^9}, 3.719844233120515*^9, 3.719844310787904*^9, 
   3.7198445342506313`*^9, 3.7198445872373714`*^9, 3.719844894172402*^9, 
   3.719845057483556*^9, 
   3.7198495315933113`*^9},ExpressionUUID->"0950ce66-d626-4616-87f9-\
9b5140561b9e"],

Cell[BoxData[
 RowBox[{"B", "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "A", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["1", "90"], " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}]}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "90"], " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}]}], "]"}], "2"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.719843167312654*^9, 3.7198431967194896`*^9}, 
   3.7198432397044835`*^9, 3.719843306278387*^9, {3.7198441150644298`*^9, 
   3.7198441353940763`*^9}, 3.719844233120515*^9, 3.719844310787904*^9, 
   3.7198445342506313`*^9, 3.7198445872373714`*^9, 3.719844894172402*^9, 
   3.719845057483556*^9, 
   3.719849531597314*^9},ExpressionUUID->"0dfe9bc4-7bba-44e2-ae36-\
2cbe1d3ccb43"],

Cell[BoxData[
 RowBox[{"A", " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["1", "90"], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}]}], "]"}], "2"], "-", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "90"], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}]}], "]"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.719843167312654*^9, 3.7198431967194896`*^9}, 
   3.7198432397044835`*^9, 3.719843306278387*^9, {3.7198441150644298`*^9, 
   3.7198441353940763`*^9}, 3.719844233120515*^9, 3.719844310787904*^9, 
   3.7198445342506313`*^9, 3.7198445872373714`*^9, 3.719844894172402*^9, 
   3.719845057483556*^9, 
   3.7198495316003156`*^9},ExpressionUUID->"f5966d90-421f-4c8b-adf2-\
dcf864c0ae47"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.7899081566720693`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.36571429556095814`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "5.99716126962889`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "5.99716126962889`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"]}], ")"}]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.7314285911219163, \
$CellContext`\[Theta]o -> 5.99716126962889, $CellContext`B -> 
      0.7899081566720693}, {{$CellContext`\[Theta]}, $CellContext`B + 
      Rational[1, 2] $CellContext`A (1 + 
        Cos[Rational[1, 90] 
           Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 - 
        Sin[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, 0.08885}, {10, 0.262503}, {20, 0.510122}, {30, 0.725299}, {
     40, 0.789265}, {50, 0.684157}, {60, 0.470887}, {70, 0.227238}, {
     80, 0.074118}, {90, 0.089079}, {100, 0.269144}, {110, 0.502412}, {
     120, 0.717742}, {130, 0.788273}, {140, 0.686447}, {150, 0.460201}, {
     160, 0.215636}, {170, 0.073049}, {180, 0.08946}, {190, 0.263572}, {
     200, 0.519052}, {210, 0.724154}, {220, 0.787433}, {230, 0.684462}, {
     240, 0.456842}, {250, 0.219529}, {260, 0.071904}, {270, 0.091292}, {
     280, 0.265022}, {290, 0.505236}, {300, 0.725147}, {310, 0.792242}, {
     320, 0.688355}, {330, 0.459972}, {340, 0.221361}, {350, 0.071522}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`B, $CellContext`\
\[Theta], $CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.719843167312654*^9, 3.7198431967194896`*^9}, 
   3.7198432397044835`*^9, 3.719843306278387*^9, {3.7198441150644298`*^9, 
   3.7198441353940763`*^9}, 3.719844233120515*^9, 3.719844310787904*^9, 
   3.7198445342506313`*^9, 3.7198445872373714`*^9, 3.719844894172402*^9, 
   3.719845057483556*^9, 
   3.719849531638341*^9},ExpressionUUID->"c8d1dcc6-bcdc-406a-acaf-\
1c9826f3413f"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.7520506448773165`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.3442002004328721`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "5.966724287393074`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "5.966724287393074`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"]}], ")"}]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.6884004008657442, \
$CellContext`\[Theta]o -> 5.966724287393074, $CellContext`B -> 
      0.7520506448773165}, {{$CellContext`\[Theta]}, $CellContext`B + 
      Rational[1, 2] $CellContext`A (1 - 
        Cos[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 + 
        Sin[Rational[1, 90] 
           Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, 0.721559}, {10, 0.56424}, {20, 0.333415}, {30, 0.129763}, {
     40, 0.06366}, {50, 0.157395}, {60, 0.368909}, {70, 0.592865}, {
     80, 0.736902}, {90, 0.720643}, {100, 0.549127}, {110, 0.322957}, {
     120, 0.131213}, {130, 0.063279}, {140, 0.160296}, {150, 0.372649}, {
     160, 0.606604}, {170, 0.746443}, {180, 0.717361}, {190, 0.563324}, {
     200, 0.323415}, {210, 0.132969}, {220, 0.064805}, {230, 0.158311}, {
     240, 0.375626}, {250, 0.598437}, {260, 0.738657}, {270, 0.720719}, {
     280, 0.558592}, {290, 0.327614}, {300, 0.127931}, {310, 0.063966}, {
     320, 0.157166}, {330, 0.371886}, {340, 0.597368}, {350, 0.74255}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`B, $CellContext`\
\[Theta], $CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.719843167312654*^9, 3.7198431967194896`*^9}, 
   3.7198432397044835`*^9, 3.719843306278387*^9, {3.7198441150644298`*^9, 
   3.7198441353940763`*^9}, 3.719844233120515*^9, 3.719844310787904*^9, 
   3.7198445342506313`*^9, 3.7198445872373714`*^9, 3.719844894172402*^9, 
   3.719845057483556*^9, 
   3.719849531643345*^9},ExpressionUUID->"6ca23347-432c-4743-ada0-\
bcacedbc1389"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.7099140956852726`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "5.982403977980147`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "5.982403977980147`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"]}], ")"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.7099140956852726, \
$CellContext`\[Theta]o -> 
      5.982403977980147}, {{$CellContext`\[Theta]}, $CellContext`A (
       Cos[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 - 
       Sin[Rational[1, 90] 
         Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, -0.632709}, {10, -0.301737}, {20, 0.17670699999999995`}, {
     30, 0.5955360000000001}, {40, 0.725605}, {50, 0.526762}, {
     60, 0.10197800000000001`}, {70, -0.365627}, {80, -0.6627839999999999}, {
     90, -0.631564}, {100, -0.27998300000000004`}, {
     110, 0.17945499999999998`}, {120, 0.586529}, {130, 0.724994}, {
     140, 0.526151}, {150, 0.08755200000000002}, {
     160, -0.39096800000000004`}, {170, -0.6733939999999999}, {
     180, -0.627901}, {190, -0.2997520000000001}, {
     200, 0.19563699999999995`}, {210, 0.591185}, {220, 0.722628}, {
     230, 0.526151}, {240, 0.08121600000000001}, {250, -0.378908}, {
     260, -0.666753}, {270, -0.629427}, {280, -0.29357}, {290, 0.177622}, {
     300, 0.597216}, {310, 0.728276}, {320, 0.531189}, {330, 0.088086}, {
     340, -0.376007}, {350, -0.6710280000000001}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`\[Theta], \
$CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.719843167312654*^9, 3.7198431967194896`*^9}, 
   3.7198432397044835`*^9, 3.719843306278387*^9, {3.7198441150644298`*^9, 
   3.7198441353940763`*^9}, 3.719844233120515*^9, 3.719844310787904*^9, 
   3.7198445342506313`*^9, 3.7198445872373714`*^9, 3.719844894172402*^9, 
   3.719845057483556*^9, 
   3.7198495316473475`*^9},ExpressionUUID->"98ebed02-e1a1-40a7-aa3d-\
fe10dc34e4cc"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.8529437370831153`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "5.96581181930419`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "5.96581181930419`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"]}], ")"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.8529437370831153, \
$CellContext`\[Theta]o -> 
      5.96581181930419}, {{$CellContext`\[Theta]}, $CellContext`A (
       Cos[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 - 
       Sin[Rational[1, 90] 
         Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, -0.7807280027739081}, {10, -0.36497073455717194`}, {
     20, 0.20948340143941518`}, {30, 0.6964828281457953}, {
     40, 0.8507254447929186}, {50, 0.6259411183147326}, {
     60, 0.12143187154975733`}, {70, -0.44583058469484926`}, {
     80, -0.8172227565288156}, {90, -0.7799763375578285}, {
     100, -0.3421641485522523}, {110, 0.21742396431171992`}, {
     120, 0.6908834979474766}, {130, 0.8513795986622075}, {
     140, 0.6213821667259134}, {150, 0.1051233715555022}, {
     160, -0.47549134072776805`}, {170, -0.8217212614644194}, {
     180, -0.7782407745956043}, {190, -0.3625026605522339}, {
     200, 0.23221918484640935`}, {210, 0.6897318121203142}, {
     220, 0.8479180698349522}, {230, 0.6243092742648376}, {
     240, 0.09756050683029259}, {250, -0.46323196807691275`}, {
     260, -0.8225821375565812}, {270, -0.7751459031958926}, {
     280, -0.3564412455349229}, {290, 0.2132700966560605}, {
     300, 0.7000719746611681}, {310, 0.8505830358978193}, {
     320, 0.6282386836045467}, {330, 0.10589066884011454`}, {
     340, -0.4592569702551149}, {350, -0.8242858125571204}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`\[Theta], \
$CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.719843167312654*^9, 3.7198431967194896`*^9}, 
   3.7198432397044835`*^9, 3.719843306278387*^9, {3.7198441150644298`*^9, 
   3.7198441353940763`*^9}, 3.719844233120515*^9, 3.719844310787904*^9, 
   3.7198445342506313`*^9, 3.7198445872373714`*^9, 3.719844894172402*^9, 
   3.719845057483556*^9, 
   3.71984953165135*^9},ExpressionUUID->"8b59dc00-65ac-486c-8592-\
5f9124a5361d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"model1", "/.", 
       RowBox[{"fit1", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataDet1", "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"model2", "/.", 
       RowBox[{"fit2", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataDet2", "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"modelDifference", "/.", 
       RowBox[{"fitDiff", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataDiff", "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"modelDifference", "/.", 
       RowBox[{"fitNorm", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataNorm", "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.719843263713678*^9, 3.7198434838971934`*^9}, {
  3.7198441555798187`*^9, 3.7198441569237337`*^9}, {3.7198442021875505`*^9, 
  3.719844202746931*^9}, {3.719844240699628*^9, 3.7198442492834177`*^9}, {
  3.7198443227950025`*^9, 3.719844357459383*^9}, {3.7198445127231097`*^9, 
  3.7198445294834146`*^9}},ExpressionUUID->"8196bedc-c62f-4a51-86c7-\
6cc4b9dfa7b9"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
Qq52w79uphQ4uIvndNETJ8SWiX1BSAHuMv0BjWeEn5Xeie5HKLBqmETufUnw
mayIOy1AgcnZj5s9qARfA0Y9dnYKdN5kz1wrIvQ8mRarJvJ89SGd40llRH+j
K0eNiLyf8za+VbSK4DumlfzpVx7ccnxnX1LrhEPevK44lwdhG1iXTzcQ69WO
liQT2PmRZuKX14Rfr86Gdi7kgd6J2H1e7wh9VhHPl//mwYnexqr1VkJPp64E
GxMF9gcyGtxuJ9Zfy/i2kYsCXNwqtL3dBH/RtwkTQhT4S4kIL/tMzJeNYiyU
osC4di3v2a/EPIXFeScNCrTTVp/3fyPqT0vZGa0pUBl7QsVnxAlJ8GYhNpgC
2aKhnzdMEP6H3FGeS6ZAYl25VzKdOK+H/wWqlVDAcflYWsUs0Y/kmpH2jwLn
7gZI6SwQ+2vcvR4dyAdF2aI33/4QfHt5h+MM84HDS+rXxnXCz7bMecbifFja
7HPtLqMzRn4icaXQ8mE0J2+POIsztvu9dmPiokL50CGdc+zO2GzwbrxZmwpx
S/enP3I5o94mgb8SHlQw5Np88zyvM+ZeMGv4dZ0KMzD5QU/AGUMSS8kZHVSo
NjXx7hAicCcYxPymQrzPaw4DUWI9R3zbW8EC2Jfx33lDcWekKoabunoVwHwp
92zXEWfsPZYt0XSvAF59jEoyknJGHLmiGNZYAFb/bDuM5QksdVTvn1Ah3LYW
NDTTcEbXzGMTxycKgRR4/VfvGWdMqmBaJQkUgcTNv3fMdZwxM9IhbFi/CJqr
e7stDJ3xYFt04EhDEfwTSDGxtnNGhgdzCq3FxeDxhd3C/hKhL2P3T6/PpaAw
H/Z3JJLgP1bQe0ukDFjYptMcYpzRl9r/ZtWzDLIUW746XndG1tEG8f82lUNv
apy1y31nfHUu/fQ2nQpQN10neZY4Y+pKIa81VzVw+3hv+FFO6GX3DbX1robB
uIHHXtXOuBTI8jD5QzWEllaNeDcS82sX7G8l1kDB9hBHvw5nnO1e+PtCpA6E
umddgn44Y/ni5bAryvUgarpxt9ocoddrzT7pYj3s/7K9k3PRGcM2MvNART0c
HVI6+WzVGWNOVQdeO94AOB3D1b/FBRmakySLFBrBgYm/QuWQC/aefRdsZvEa
cuVU2NhdCPwmokqXrQVelhnW9bkT69/oWb4yb4ECJeeAHG8X1Lkg/4n6rAUq
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
AYcIcz4=
        "]]},
      Annotation[#, "Charting`Private`Tag$101293#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQMnn9ovub9vmz2Ep+IQ2sqWdPPMBSjfxEGDOz7+
ddADKN/O4bDnLPtlps+hfBeHv8Ixa1Y4voTyPR04u7ss5j55CuX7OaxWdrdi
Vr4H4TcEOrB5mDQqiZ2Fyoc4pDdwb0r9uQkqH+bQvuLQ/IdnYe6JdDDurDq4
3PIiVD7awfnY4pBDwjD3xDmUPpMT2vf9GYTvkOBwzzrLp8MS6p6GRIeyf283
xX+HuudAkoN6p+rTd8V3ofpTHJp6X9//OvM0VH+qw7YMxlthm2HuSXPwvO6z
7+YzqHsOpDs4cnNKxN6DhU+mQ27P3A9Cc6Ducchy4JmQweSqAw2fhmwHh8Cb
G5YZQd1zIMdBMUr7lsxzWPjkOSTKxFg9s4G6xyHf4SzL4Z1tkmeg/AIHptnF
H3wyoO55UOBg+jZp1su47VDzCx3uyay7KvcN6h6FIgeFRIkNT7Sg7jlQ5OAU
Y1mdbgJ1T0KxQ+EEgafcUbD4KnH4Yr5QgJEdGn4LShzKb7ik6RXA3FPqcJj/
3PK+UKh7HpQ6dJ3+yOXiv8keAH4Yrzg=
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{715.5555555555559, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {0., 0.7899076113331593}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198432817208233`*^9, {3.7198433540786295`*^9, 3.7198434126561403`*^9}, {
   3.719843444495617*^9, 3.7198434845976686`*^9}, {3.719844119873704*^9, 
   3.719844157209928*^9}, 3.719844204313998*^9, 3.71984425003593*^9, 
   3.719844358372999*^9, 3.719844539457142*^9, 3.719844589825116*^9, 
   3.7198448975396724`*^9, 3.7198450609969263`*^9, 
   3.719849616631672*^9},ExpressionUUID->"47ca4f28-d8c4-4463-a5a4-\
7eb90abf6d59"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
hvk=
        "]]},
      Annotation[#, "Charting`Private`Tag$102439#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQPtvinPmMSf20N4Kg4TuZK5HfkeQfkmDjd2299b
HXYVyrdzyO2Z+0FozgEo38UhxkJgEqvPBijf0+HWs2NfWlSPQPl+DjfP9tSZ
zLkO4TcEOiTp2rEe+AEzP8ShKud0w+YpUPsbwhw03yx60cgPc0+kA6+F98mi
SQ+h8tEOV186XAtefQUqH+ewfP3z7Gmnoe5xSHCYxdlWzGsMdU9DosOKv9f8
prRA3XMgySHg2A+D6ptQ9zCkONx8u/mUT+ZjqP5UB7YGrbw7j2DuSXOYu8CX
b/6XZ1D96Q7GKxfyHmCDuT/TwcSb6cqVTVD3OGQ5zLlvcFGB9SBUf7aDANu8
av7pUPccyHEIzTnzusMZFj55Dhb7Exc5ct2A6s93iH7zLTJVDeaeAofEI3aM
Iouh7nlQ4PAy6bKXogDMfYUON65Uhvy5Dw0fhSIH8963Wxd8h7rnQJFDeeMk
Ju4EaPgkFDtcCuRLE06AxVeJQ3Ur63dmOah7FpQ4HDz29f2vM9DwcSh1SF35
tW6xLNQ9D0odTBZtMf9x6Lk9AJw0tPw=
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{742.2222222222226, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {0., 0.7520503482215523}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198432817208233`*^9, {3.7198433540786295`*^9, 3.7198434126561403`*^9}, {
   3.719843444495617*^9, 3.7198434845976686`*^9}, {3.719844119873704*^9, 
   3.719844157209928*^9}, 3.719844204313998*^9, 3.71984425003593*^9, 
   3.719844358372999*^9, 3.719844539457142*^9, 3.719844589825116*^9, 
   3.7198448975396724`*^9, 3.7198450609969263`*^9, 
   3.719849617129007*^9},ExpressionUUID->"159733ee-ede7-4a10-a29a-\
8c54263e59cb"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
DwAJovlP
        "]]},
      Annotation[#, "Charting`Private`Tag$103589#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQPnAu58VLN/sh/CU3E4279/ywr/y1C+icOHLX8O
hM47Zg/h2zmseFbUvJDvMZTv4vCJR+qXusVzKN/TIehixG/r2w+gfD8Hj/CX
76ykd0H4DYEOB80encxLuw41P8Qh90/nqTbTpxB+Q5iDxPRVW46awtwT6fD8
mfRF29cXofLRDkmuvMsSf8DcE+fQ/Uul/MaRRxC+Q4LD6qqfc9WMoe5pSHTg
sbeYb3UN6p4DSQ4x3JsvnMvcBtWf4vBRpGjpPNabEPMdUh3eB72aVNgDc0+a
wxbWlmuHxaHuOZDuoOpuxaysDwufTAef2YVSi7hOQu3PclCNkDn35xXUPQ3Z
DnUTUg8ekYe650AOqnsY8hyWlLyMn3RqC1R/vkNAGE84u8MNqHsKHBgDDZK5
wqDueVDg4MTaLu6iAnVPQ6HDpR7XyzdPXoLwFYochLLaQgL3QMPnQJHDk91T
dqXIQOMrodjB/JhfBacfLL5KHKZeuy/U8B/qngUlDjfcbG6e7YGGj0Opwwsv
llX1AlD3PCh1OJwRto2/8ul+AHZPu0Y=
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{766.6666666666686, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {-0.7099120382298753, 0.7099139233987941}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198432817208233`*^9, {3.7198433540786295`*^9, 3.7198434126561403`*^9}, {
   3.719843444495617*^9, 3.7198434845976686`*^9}, {3.719844119873704*^9, 
   3.719844157209928*^9}, 3.719844204313998*^9, 3.71984425003593*^9, 
   3.719844358372999*^9, 3.719844539457142*^9, 3.719844589825116*^9, 
   3.7198448975396724`*^9, 3.7198450609969263`*^9, 
   3.719849617609331*^9},ExpressionUUID->"8a861a5e-643d-4813-9774-\
8c77dcf4e821"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
9ei/Tunnjg==
        "]]},
      Annotation[#, "Charting`Private`Tag$104734#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQM32u977fz9Yj+Ep+Kw/7GV2bro61C+iYNRlJxy
1IVT9hC+ncOmycrR0zyfQfkuDurhGRNVLF9D+Z4O2q48q7eyP4Hy/RwC+//v
0RDbD+E3BDqYdZkw1nbcgZof4nD+0qywDWqvIPyGMAfB++veT/gKc0+kw6rA
nyUsz65C5aMd3n/kyui5chpqfpzDxZ8Ltm6XhrrHIcFhQvf03AY7qHsaEh30
fvbcinn0GMI/kOQw3+tBU+zLXVD9KQ7H7Wqti/PuQcx3SHXoiuFN7vKGuSfN
YfKKTKPI51D3HEh32GH1KdrOGBY+mQ4+S023Re88C7U/y6FBk6nYQwjqnoZs
ByPZEmFVJah7DuQ4bL9UWBj+C+oehjyH9AXmm3b+3AHVn+8g3hG2afrSu1D3
FDh0dSYdmx4Edc+DAgfOqN/H/52Fuqeh0OGlmuLHd+evQfgKRQ7/5HVt832g
4XOgyOFFY0P43zSoexKKHSyumr36aQ6LrxKHeBtW5g4paHwtKHFgXz9v/jLp
3VD3lDpYab+NKE+BuudBqcOXVe8X9yS82g8AYlS8yg==
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{811.1111111111121, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {-0.8529430715624347, 0.8529436461875325}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198432817208233`*^9, {3.7198433540786295`*^9, 3.7198434126561403`*^9}, {
   3.719843444495617*^9, 3.7198434845976686`*^9}, {3.719844119873704*^9, 
   3.719844157209928*^9}, 3.719844204313998*^9, 3.71984425003593*^9, 
   3.719844358372999*^9, 3.719844539457142*^9, 3.719844589825116*^9, 
   3.7198448975396724`*^9, 3.7198450609969263`*^9, 
   3.7198496180886545`*^9},ExpressionUUID->"f28f8fb4-ca00-4a6a-92d5-\
89a047c3232a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Doing the same analysis at a different Probe Power", "Section",
 CellChangeTimes->{{3.719851085339487*^9, 
  3.719851096355833*^9}},ExpressionUUID->"c4f289ee-c13c-4a84-987c-\
2cc25adc8073"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"raspberryPi", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Z:\>\"", ",", "\"\<RbData\>\"", ",", "\"\<2017-10-20\>\""}],
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dropBoxfolder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<C:\>\"", ",", "\"\<Users\>\"", ",", "\"\<kahrendsen2\>\"", ",", 
      "\"\<Dropbox\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataFolder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<00School\>\"", ",", "\"\<research\>\"", ",", "\"\<DataRuns\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"folder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"dropBoxfolder", ",", "dataFolder"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "folder", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileNames", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"folder", ",", "\"\<17-11-15_BalancedPhotoDetector\>\""}], 
      "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"names", "=", 
     RowBox[{"FileNames", "[", 
      RowBox[{"StringExpression", "[", 
       RowBox[{
       "\"\<POL\>\"", ",", "__", ",", "\"\<_\>\"", ",", "__", ",", 
        "DigitCharacter", ",", "\"\<.dat\>\""}], "]"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"names", "=", 
  RowBox[{"FileNames", "[", "]"}]}]}], "Input",
 CellChangeTimes->{{3.719851180495005*^9, 
  3.719851181635705*^9}},ExpressionUUID->"71b500bd-c26f-4c9f-970c-\
5618844db42d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"15-06-09_USBCounterError\"\>", 
   ",", "\<\"15-07-06mockPolarizationData\"\>", ",", "\<\"16-01-14\"\>", 
   ",", "\<\"16-01-21_Data\"\>", ",", "\<\"16-05-25_PolarizationData\"\>", 
   ",", "\<\"16-07-06_PolarizationData\"\>", 
   ",", "\<\"16-08-04_PolarizationData\"\>", 
   ",", "\<\"16-08-07_HeliumTargetPictures\"\>", 
   ",", "\<\"16-08-09_PolarizationData\"\>", 
   ",", "\<\"16-10-17_polarimeter\"\>", ",", "\<\"16-10-27_DataReport\"\>", 
   ",", "\<\"16-11-03_faradayRotation\"\>", 
   ",", "\<\"16-11-07_faradayRotation\"\>", 
   ",", "\<\"16-11-18_faradayRotation\"\>", 
   ",", "\<\"16-12-09_faradayRotation\"\>", ",", "\<\"17-01-31\"\>", 
   ",", "\<\"17-02-17_plusMinus\"\>", 
   ",", "\<\"17-03-06_PlusMinusWavemeter\"\>", 
   ",", "\<\"17-03-10_non-RbFaradayRotation\"\>", 
   ",", "\<\"17-03-15_AimingFor5e12\"\>", 
   ",", "\<\"17-03-15_wavemeterNoRb\"\>", ",", "\<\"17-03-28\"\>", 
   ",", "\<\"17-03-29_pumpLaserFindingCircular\"\>", 
   ",", "\<\"17-03-30_WavemeterReliability\"\>", 
   ",", "\<\"17-04-04_polarization\"\>", ",", "\<\"17-04-06_polarization\"\>",
    ",", "\<\"17-04-07_wmReliability\"\>", ",", "\<\"17-04-18\"\>", 
   ",", "\<\"17-04-18_polarization\"\>", ",", "\<\"17-04-22\"\>", 
   ",", "\<\"17-04-25_ProbePolarizationDriftOpenChamber\"\>", 
   ",", "\<\"17-04-30_laserReport\"\>", ",", "\<\"17-05-17_DirtyGunRun\"\>", 
   ",", "\<\"17-05-18_ProbeDrift\"\>", ",", "\<\"17-05-19_BetterLaser\"\>", 
   ",", "\<\"17-05-24_SimplifiedPolarization\"\>", 
   ",", "\<\"17-05-25_LaserProfiling\"\>", ",", "\<\"17-06-02\"\>", 
   ",", "\<\"17-06-06_IntensityOfProbeStudy\"\>", ",", "\<\"17-06-11\"\>", 
   ",", "\<\"17-06-13\"\>", ",", "\<\"17-06-16\"\>", ",", "\<\"17-06-17\"\>", 
   ",", "\<\"17-06-25\"\>", ",", "\<\"17-07-01_nRbVsBufferGasAnalysis\"\>", 
   ",", "\<\"17-07-01_PumpLaserAnalysis\"\>", 
   ",", "\<\"17-07-03_lowerNRb_BGPStudy\"\>", 
   ",", "\<\"17-07-03_ProbeDrift\"\>", ",", "\<\"17-07-03_pumpBroadening\"\>",
    ",", "\<\"17-07-06_lotsOfProbeMeasurements\"\>", 
   ",", "\<\"17-07-06_MagneticField\"\>", ",", "\<\"17-07-06_probePower\"\>", 
   ",", "\<\"17-07-12_polVsPumpPower\"\>", 
   ",", "\<\"17-08-01_rgaInitialScans\"\>", 
   ",", "\<\"17-08-03_redoingSystemDiagnostic\"\>", 
   ",", "\<\"17-08-06_probeDrift\"\>", 
   ",", "\<\"17-08-18_furtherPolarizationStudy\"\>", 
   ",", "\<\"17-08-19_furtherPolarizationStudy2\"\>", 
   ",", "\<\"17-08-22_furtherPolarizationStudyFoundLeak\"\>", 
   ",", "\<\"17-08-29_BvsProbePower_probeDetuneVsMagnetRot\"\>", 
   ",", "\<\"17-09-05_Polarizations_100mTBGP\"\>", ",", "\<\"17-09-20\"\>", 
   ",", "\<\"17-10-03_ElectronGun\"\>", ",", "\<\"17-10-16_ElectronGun\"\>", 
   ",", "\<\"17-10-24_UnpolarizedPolarization\"\>", 
   ",", "\<\"17-10-26_24And30eVRuns\"\>", 
   ",", "\<\"17-10-28_24and30eVRedux\"\>", 
   ",", "\<\"17-11-04_MoreUnpolarizedRuns\"\>", 
   ",", "\<\"17-11-06_UnpolarizedRuns2\"\>", 
   ",", "\<\"17-11-15_BalancedPhotoDetector\"\>", ",", "\<\"NewFile2.tsv\"\>",
    ",", "\<\"NewFile.tsv\"\>", ",", "\<\"pumpPower.png\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7198511862766347`*^9, 
  3.7198521154488077`*^9},ExpressionUUID->"a16b44a9-9f0b-4493-bfee-\
5841dad21230"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FDayRotation2017-11-15_154904.dat\"\>", 
   ",", "\<\"FDayRotation2017-11-15_222329.dat\"\>", 
   ",", "\<\"FDayRotation2017-11-16_131648.dat\"\>", 
   ",", "\<\"FDayRotation2017-11-16_135259.dat\"\>", 
   ",", "\<\"intensityData1.csv\"\>", ",", "\<\"intensityData1.xlsx\"\>", 
   ",", "\<\"intensityData2_steppingHWP.xlsx\"\>", 
   ",", "\<\"intensityData3_every2degrees.xlsx\"\>", 
   ",", "\<\"intensityData4_every10degreesFullRev.xlsx\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7198511862766347`*^9, 
  3.7198521154488077`*^9},ExpressionUUID->"1e4b84d4-1ae0-45db-a658-\
67f71d732fa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"ImportFile", "[", 
    RowBox[{"names", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<STEP\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"det1", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<PRB\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"det2", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<PUMP\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"det3", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<REF\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"difference", "=", 
   RowBox[{"det1", "-", "det2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sum", "=", 
   RowBox[{"det1", "+", "det2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"average", "=", 
   RowBox[{"sum", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizedIntensity", "=", 
    RowBox[{"difference", "/", "sum"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDet1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "det1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDet2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "det2"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDiff", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "difference"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataNorm", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "normalizedIntensity"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "dataNorm", "]"}]}], "Input",
 CellChangeTimes->{{3.719852148060339*^9, 
  3.7198521482322044`*^9}},ExpressionUUID->"d1d132a2-a5b3-4d33-8881-\
94195e6a56e2"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQNHdc44rRF7ux/CU3FgXqmn7Nt4G8o3cRCe9Dl5
zsWz9hC+ncNbK1e31xEvoXwXB66Zx6tleN9D+Z4O66sNWdwan0P5fg7el7bf
PLP9IITfEOgwV/V6L6/uA6j5IQ73f6ldlZj1DsJvCHPY4MTN2qIGc0+kg1L0
NPbvRVD3NEQ7HDKMCJ3ddB5qfpzD/8Y9ri63XkD4DgkOwjES3e0w9zQkOrTc
DbbVCYC650CSw/TDLrxM3w9D9ac4rC6b8XiZPdQ9DqkOFxrq/s1rhLknzUFM
vMlHiOPtfgB0/lyq
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 180.}, {-0.9563106692438302, 0.970401546163773}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198521497635555`*^9, {3.7198521848005476`*^9, 
   3.7198522008597856`*^9}},ExpressionUUID->"4a5e9c44-e876-47f9-bdb1-\
f261e2b47217"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fit1", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataDet1", ",", "model1", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o", ",", "B"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit2", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataDet2", ",", "model2", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o", ",", "B"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitDiff", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataDiff", ",", "modelDifference", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitNorm", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataNorm", ",", "modelDifference", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}]}], "Input",ExpressionUUID->"bdce87e1-585f-462b-98ec-507c27248c57"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.49246838066729187`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.24519867164107526`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "5.712521592477578`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "5.712521592477578`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"]}], ")"}]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.4903973432821505, \
$CellContext`\[Theta]o -> 5.712521592477578, $CellContext`B -> 
      0.49246838066729187`}, {{$CellContext`\[Theta]}, $CellContext`B + 
      Rational[1, 2] $CellContext`A (1 + 
        Cos[Rational[1, 90] 
           Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 - 
        Sin[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, 0.021067}, {10, 0.135259}, {20, 0.300974}, {30, 0.448751}, {
     40, 0.492031}, {50, 0.427913}, {60, 0.274334}, {70, 0.11671}, {
     80, 0.010228}, {90, 0.020609}, {100, 0.135946}, {110, 0.304485}, {
     120, 0.43837}, {130, 0.487833}, {140, 0.427226}, {150, 0.280594}, {
     160, 0.117245}, {170, 0.010915}, {180, 0.021678}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`B, $CellContext`\
\[Theta], $CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7198522280959463`*^9},ExpressionUUID->"695bf0cf-3e6b-4b58-9757-\
891164f9f32a"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.46342393146817557`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2283577685842781`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "5.68098413412811`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "5.68098413412811`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"]}], ")"}]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.4567155371685562, \
$CellContext`\[Theta]o -> 5.68098413412811, $CellContext`B -> 
      0.46342393146817557`}, {{$CellContext`\[Theta]}, $CellContext`B + 
      Rational[1, 2] $CellContext`A (1 - 
        Cos[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 + 
        Sin[Rational[1, 90] 
           Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, 0.442034}, {10, 0.33914}, {20, 0.18724}, {30, 0.052058}, {
     40, 0.007404}, {50, 0.065492}, {60, 0.207621}, {70, 0.355322}, {
     80, 0.457987}, {90, 0.442263}, {100, 0.340132}, {110, 0.184187}, {
     120, 0.055111}, {130, 0.007328}, {140, 0.067095}, {150, 0.204873}, {
     160, 0.359138}, {170, 0.456766}, {180, 0.445698}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`B, $CellContext`\
\[Theta], $CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7198522281115713`*^9},ExpressionUUID->"49af006a-92b6-45ac-a6ce-\
5651218857cf"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.4724313014944548`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "5.7116455965358215`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "5.7116455965358215`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"]}], ")"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.4724313014944548, \
$CellContext`\[Theta]o -> 
      5.7116455965358215`}, {{$CellContext`\[Theta]}, $CellContext`A (
       Cos[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 - 
       Sin[Rational[1, 90] 
         Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, -0.420967}, {10, -0.203881}, {20, 0.11373400000000003`}, {
     30, 0.396693}, {40, 0.484627}, {50, 0.362421}, {
     60, 0.06671300000000002}, {70, -0.23861200000000005`}, {
     80, -0.44775899999999996`}, {90, -0.42165400000000003`}, {
     100, -0.20418599999999998`}, {110, 0.12029800000000002`}, {
     120, 0.38325899999999996`}, {130, 0.480505}, {140, 0.360131}, {
     150, 0.07572100000000001}, {160, -0.24189300000000002`}, {
     170, -0.445851}, {180, -0.42402}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`\[Theta], \
$CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7198522281115713`*^9},ExpressionUUID->"fd056b98-1f0d-46b2-9441-\
c2fab9257a62"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.9831207254575614`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "5.671053674753413`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "5.671053674753413`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"]}], ")"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.9831207254575614, \
$CellContext`\[Theta]o -> 
      5.671053674753413}, {{$CellContext`\[Theta]}, $CellContext`A (
       Cos[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 - 
       Sin[Rational[1, 90] 
         Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, -0.9090176872863586}, {10, -0.42976692615287976`}, {
     20, 0.2329593170208147}, {30, 0.792104375121054}, {
     40, 0.9703504960605482}, {50, 0.734530456724192}, {
     60, 0.138421636874812}, {70, -0.5054996271439226}, {
     80, -0.9563106692438302}, {90, -0.9109516237750395}, {
     100, -0.428891904267788}, {110, 0.2461733023377644}, {
     120, 0.7766438829458479}, {130, 0.970401546163773}, {
     140, 0.7285367200665154}, {150, 0.15597558639413187`}, {
     160, -0.5077700085855289}, {170, -0.9533228846157957}, {
     180, -0.9072352880764096}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`\[Theta], \
$CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7198522281115713`*^9},ExpressionUUID->"9ae3348f-e6bd-4476-bec0-\
be8ca0b4db05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"model1", "/.", 
       RowBox[{"fit1", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataDet1", "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"model2", "/.", 
       RowBox[{"fit2", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataDet2", "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"modelDifference", "/.", 
       RowBox[{"fitDiff", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataDiff", "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"modelDifference", "/.", 
       RowBox[{"fitNorm", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataNorm", "]"}]}], "}"}], "]"}]}], "Input",Expr\
essionUUID->"82447bdc-f0f8-4c70-a709-97ef79a674d0"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
Qo/Hzc8EgUvwuOL2SvL8sM4OOZqFwO/x2Meq9W4obML9ymRfONxkWmjkaSDP
D0PiRsLhCDixxfJT/0vC/EXM5yASArWOb3J9Q+Yzynrn7R4Na0oZQalt5HkV
PdiceygW8t+dTqO2k/lysnZ3u8eB5penpfs6yPg3j1PLTOMhfkvUxPOPbshj
aNRILUkAgRBJ/a+D5H21NmdrbWQSVKWlOZfQ3bDoyY3jh1STwaSUNcp/mLCh
8CKwp0Dml94anlHi7yutdjg1FfZoh4jLfid+n27kLTLSQHZrx0L0ghva7axJ
28qVBZoeBoJnltxQXQw4N0ZkAaWpW4bzrxuyb+SxKGa6B1E+Az6xTO4omTVh
1LJ4D7o7R38lriGs1O1wlvkBeF77M5O+0R2LvOIqBkzyIOrzpQ2mm92Rsrfi
pOBUHqSfWJbcLuiO9YPLRn3/f79/ZXLLFHLH6Xpf796CR7BBheNntqg7osn1
1kSBAij4K/TtyWF3LPXM7Pa8WQwNBhlrXY+44+Cw2MFtP4rh4yMRCcmj7liz
IttIUyyB5QvidiUy7mgQcytFfKoEzpQdGi8Dd9KfXjsVqFMKX10UR55rueNy
w6qEpsPlIDps2//B3h3t9ksFzVrVQsekHGulozv6bqq6HvWxFkIXuA9mOruj
yZ2IzmeqdTDMWxHi4u6ObqUtrG17n8NtFXaJdZfc0Ur83VG6fz3wP8r1UY5y
R9bkAHULowZg9Z7gL89xRym3Hav1TzTC6DrHs7c/k3irRTE/xzaYvlW1ZDHm
jkIriSyleW2wvJsjV+KLOzZUKLye+dIGfMp5TOXf3NHn3e9tXlbvQdH/S/GH
GXfsf92+r/5gO2RMWvKvYfLA74Gx6va7P8DFdyZ97kIeOFDe6TPI1wk2xo/D
ZbZ74O3D/J80pDrBY2Lp8MoOD8w3zln9WKcTolenx1wT9UAT+eJ7ytc7oeJU
n9zDvR4o9vioeMPqLthYcO7uoIwHbrl+YDLivy5oj9W2VDvngf+lvz+87nk3
+HRMCUqf98DYDRIhikPdsH1TQrvwBQ98u4GhdmGpG5zudJ5aNPFA3ltPuUWP
9wD7YyOBJ1YeWD4PlwSe9IBCk8U7Xk8PPHirSIs/sRe+crKGrXh54NyRTEWW
gl6I13lwYtLHAzkPfNJoauoFes+Xh68ve+CKaEZSL1Mf+I07hfpe8UCXc9ZS
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
XeDAto0fgCN1PK/8iSeq3rf8819PO4R76HwrK/VERerqQ16m7eAvIeb4rMET
Lf6MfbNsbwOH1BanEron7h+N145baYbT68dPegx7ok3lWrvZhmbYE87EJTXi
iRqKv/bZRTTDuMfRJ8VjZP0q1mfjuJqBqp3xo2jSE/k9DGXHhJrAaDXNpXCR
zGfttcUX34AabYvb401eyCvRFmSb9RIaMiI0EgW8MHv9Fgqn1Us42Tor5rvF
C7uM1l/4Kv4SJHe19Clt90KZZA7G6ScNINhzWWlglxdePNy49kPNC/h+YmgT
x1EvvK0+nPHs/XOIY86stdX3wslZA5bJiQrgOMR5U+sc8d8H2gvBFRBm7Otx
5LwX7ueamysVqADfUp3dKxe98NXS32x5jXKg2qxKSLHwQjsXw3Vtz57BkWYL
q9fuXij5WviETVEJ9CTsWica74W+Afrx4oH5UABcdl8TvJAntjGaeyIPwn7M
vXpywwunRQyjQs/lgdTpV4EyqURXVEviPpILsUyWs1p3vVB4U00sy6ocUHXN
7PN97IU3H0XP7vuWBdu2RR2TL/DCCrxsW+aSBXPNrjdYikg+CdbrJ+cy4Z44
aMU+9UI3/wlTClsm/B0aqr9f5YVMfy9xwOXbUKq5NbftrRe2P/kkM/k3Ga4u
Mq9OaibzdToLrpVPBovcb9QLrV5IiYx+XBySBDysVVtH35P4zmhKMd8NcKo2
ilvo9sKiL9f2V1jEg5I9Ttb1kvFnbpsxBcXBls17Tof1e5Hvuz1NHRALbz3+
MHPTif72g7Rez1UQ3ZviLTbmhfVHCpZOmkXCYk9A58S4Fw4rCIdb6EVAe7i1
ZOFXomuvv/hTKxwCP0l/k530QpwVKlM3vgLn4oTUVn4Qfc+Vwe3OobD/FGv2
qymiN3dcc4gIgf6bnaZn//P6/+8lvJ/uBkGxanUV/y+ST6DXRst/ARA1d29z
/2/CYTEs35384ZiOxwerRTLean5azOcScP27cHDvMvHfkRI+wusLo48Urk79
JfpX1UO1td6QuGaDit8qb8RKTws6ekLN7JCxJ4s3BpveSHjzxwO+DOV7uKz2
RqbPG5kzXrgDb5NPtN0ab6xXtb7tcNcNTpYqZ1qsJbrucq+5kCvYZGwoN1lH
xgc8Uvoq4gwJMfR3hlxE3xay3VfLEWq8Ho3qcBO97dk5gQx7GKf4LmlsIPqp
8a0fNtkBj6YKrwofYYnvE3mlNiB3nFcCNpL4pdLAPF9rsNnJANnNhBl7GR8t
rCCe67HhEUESb8tlKE2zhOp5X+cDW4leM0hryrOA8c8qYbu3EbZsWH+LzQJ4
3vOmi+wg8VcCFXOiqSBXxSjeKkK4wsjtPykq2Dx4/HajKIm/wg+hzFSIJ1/C
3LsIH51I05+nQPVl1d9rd5N494BntvxUGLfh42KVILrM+Oo6Qyrw6A2L/ttL
9Mg89XPPif+pJyfm9xM99FXQPm0LsNnjpzt7kOi7ns2eYrGEeD41u0lJosdF
HoymW0LVP76gcSmit4+vXjtsBWMTw8nD0oTVDidUrLEBno9PHvcfI3w9/mDi
OVs4Ue/3skuGjJ/kD41rsgOrR2r9bSeIbtPllWfpAHEp/DNvT/4/P64TvaJO
MOpUsL0WCWdo5O9Z5wbrjS4fLVckfKHpqLKYO8gqqWsWKxOepX4z1PGAWMGR
Sw/UCdcnJWt88oQK1sL4DA3C/RXsO1S94fPU5Ye3NMn5SVe7+6HWB2QaN368
rkO4qkW6dMwPLIpHvkfqkfgZrY6uZH+4fruQOdSA5JeQ0VJqFAgjHqclvY3I
eSrmXq++LgSu7wi4akbxxuGn13K7ZcKhgkPjnpGFN2YG+B+1MI6AkV+bKvWs
CJ/12SYeGQkyrUXjqnZkvPHbRViMhhHfUYVDbkRv2L1mg3YccFoVG0l4EL/V
h0b6TeLh+NlAV1FPbxTWqRaX3JwA13YJ3NnsS/SOM4LnbiVCGc/Y0w1+3kgx
oThto96AT0vFzev8Sb5R+VMXDiQB55fAT6sDCS8pPGf7lwTHOs7MrwSR+Eu3
Pu3oTIb/AZ8L+bk=
        "]]},
      Annotation[#, "Charting`Private`Tag$110848#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQP9uZIF0yZNtYfwVBz81+7bpRVwEMo3cbCfsKdY
w/kylG/n8IzNWTZsxx0o38XBaEL69Pza+1C+p8MeBSXTt0m3oXw/B/fJ3YYb
+i5C+A2BDiv3yD7c8mAvVD7EYbsK+5usTy1Q+TCHxeHMU9qkYO6JdMi5yLRl
bRrUPQ3RDmw33Jevq4G5J85hIlcytyMf1D0OCQ6xZlbPl1tA3dOQ6LCOr2HH
6nCoew4kOZRwx3Y6fIW6hyHF4e6MeRuOMO+D6k91qE7zbJgV1QbVn+aQvk37
y0GjafYALJZXOQ==
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {0., 0.49246836001355215`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198522523998923`*^9},ExpressionUUID->"c1147b1d-8e12-4081-ab33-\
9a2d69216c64"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVXHc41u8XlqSpJEVSiRZfychoOccshWRn7z1e6032TsjKShJCKptkJyPK
yJ7vW5IkLZpmfs/vL9d93fe5z3nOeT4f73HhgJmzuiUjAwPDASYGhv9/dekS
OvK0+430/igGhsthNJD+li1uJl8LJwTZB9m8aTB+TyLhoHwHtH9T18twpkGJ
p3/TOnkaGJyy4dmvSwOuD3z6f+S+QCtPb3nxYRqo7vmT+01uGY5FM++7VD0G
Vhm8u45t+AcufwpcJx6Pgf+hS6H2HatQIC2XJn93DIY5+kXcH63B5mvp6lT/
MdjAe4x1TnQd7jS2KU+UGQMbibcdM3JbsC6u8edC7Sj88vRg2nSYBbc9Dnyb
9HgUAmo2n+HfsBUDYo6EMaeOQgpKPbbu2IZ9ota7jKmjYJHTJu/6aDtePhw1
vSw4CglFB/i+i+7E497qpQLxI/C7qe/ttBw3ni7dYmUvPQxsyltYveu5MU98
u9Dmw8Mg3C+PLCf3YtOxwouBLMNgN/kkQ0RoH36byFD6MTYEFMYO4bNbeLDk
yssXP6lD8IG3cC70zwGMZFnTNpozCK/NXd042g/hsFa8cORMP2R/WKSecj+G
rXz/dXf/1wPnta6/cSs4hvGeU1UzW3vgS/MOxYKpY3hgs33q8lw3nMgW3Mlz
RQg3dD5g2VTZDc1mRmXrpI+j4QdWi2G5bvjxffzqdLAw6s6K56k96YIdjvLl
ZSqiuEnyq8N11nbQtN587MI7cfwlocdPWWgCoGqJ6qyIo13lR57XTU0gEHpP
0mK3BKqW1xZpRTcBw30xWb/LEri449sLGl8TFLzR1yl9LoHaFk95P6k1ArN2
fiBXliQKTP65/6isASrlVQZnzE6i+7cD/tqyNXBfI3nsr99JVL5mKrD4vhqi
zd6NM905ifmaNJ+9YdVgEeDxeV/fSaQ8dngy3V4F22vvMmjIncI8jUndSsNK
sBP7JlDDdxq3+Ad/dLjzBPbwxvhHTp7BhgvHg6XDi6E24hf/AuNZLOYqd2CU
KAaDn1f6rQ6cxfMMpl67XxZBevNBflkjwifQ7vy6Xgi81tW980NnUbeqa/1z
znwQyP9wyKpdGtU4Nm5jvfEA2tkvdvd9kkZdtnXpBf9ywcG32EtmAyDDFo9Q
RmouFKp6v+ZWAAzfPjQ/ZpsDonOs1/rqAce5FBeire7D3j37rHiuIKq9XVnz
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
        "]]},
      Annotation[#, "Charting`Private`Tag$111993#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQPtonk/Pbzu2EN4Kg4//hg4VWy5CuWbOMxNdvhW
9f04lG/nsLLt77yI5augfBcH9dsHZFcE10H5ng4efmp5okc2QPl+Dn221XrB
k09B+A2BDu/Uk2tm7L0GlQ9xONu/f8sK/7tQ+TAH82N+FZx+MPdEOpitFWHa
eQTqnoZohzPT1nQVTIa5J87h7U4f3ybzNRC+Q4LD/6pW1u/MUPc0JDqUL9zp
p6y7EcI/kOQguzbL090S6h6GFIenvAafZf9A3eOQ6vBA73fpcmuYe9IcahUq
nwe03bEHACKDWsE=
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {0., 0.46342393134714127`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198522528374214`*^9},ExpressionUUID->"26f04b5b-7627-4b14-a753-\
202d10ffa5e7"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
dkCesSs7Et3bv8QxY88=
        "]]},
      Annotation[#, "Charting`Private`Tag$113138#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQPr6nImyX+8tR/CU3FY6LP45FGJU1C+icOhysJH
q2X32kP4dg6CYcmc2ck3oXwXh6M9H74psNyH8j0dtHpn3HxueB3K93NguGSe
KSWyEcJvCHToKDTvuNZ1Dmp+iMPysPhY0RV3IPyGMIe9E/j4E//A3BPpwNCp
FnBECeqehmiHBqNj7TdP74OaH+cQXLzzYED7DQjfIcGhUEGFe8aBe1D7Eh0C
ll18ksQDdc+BJIdpl+dNKk7aDNWf4hBzXqAv8hvUPQ6pDmse/1h4qQPmnjQH
8VSzEyrKt/cDAGeNXwA=
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {-0.47243125696517346`, 0.4724312489582425}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198522532593236`*^9},ExpressionUUID->"5018d7f8-5623-49dc-b650-\
cc579576c202"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
OryT7e1+AIE86Og=
        "]]},
      Annotation[#, "Charting`Private`Tag$114283#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQNHdc44rRF7ux/CU3FgXqmn7Nt4G8o3cRCe9Dl5
zsWz9hC+ncNbK1e31xEvoXwXB66Zx6tleN9D+Z4O66sNWdwan0P5fg7el7bf
PLP9IITfEOgwV/V6L6/uA6j5IQ73f6ldlZj1DsJvCHPY4MTN2qIGc0+kg1L0
NPbvRVD3NEQ7HDKMCJ3ddB5qfpzD/8Y9ri63XkD4DgkOwjES3e0w9zQkOrTc
DbbVCYC650CSw/TDLrxM3w9D9ac4rC6b8XiZPdQ9DqkOFxrq/s1rhLknzUFM
vMlHiOPtfgB0/lyq
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {-0.9831204664855735, 0.9831203906653239}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.719852253665599*^9},ExpressionUUID->"e010c0ba-d3d3-4412-992d-\
688312240b1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"ImportFile", "[", 
    RowBox[{"names", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<STEP\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"det1", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<PRB\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"det2", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<PUMP\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"det3", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<REF\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"difference", "=", 
   RowBox[{"det1", "-", "det2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sum", "=", 
   RowBox[{"det1", "+", "det2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"average", "=", 
   RowBox[{"sum", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizedIntensity", "=", 
    RowBox[{"difference", "/", "sum"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDet1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "det1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDet2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "det2"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDiff", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "difference"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataNorm", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"angle", ",", "normalizedIntensity"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "dataNorm", "]"}]}], "Input",
 CellChangeTimes->{{3.7198523238889494`*^9, 
  3.719852324342125*^9}},ExpressionUUID->"74f30b25-6a11-4772-a319-\
07aee77f515c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., -0.727090195804318}, {10., -0.34282620786570733`}, {20., 
      0.20450640793495778`}, {30., 0.653424571600055}, {40., 
      0.7894057672467967}, {50., 0.5855281265396967}, {60., 
      0.10499114924323916`}, {70., -0.4233791146762254}, {
      80., -0.7708608317090617}, {90., -0.5697921184069281}, {
      100., -0.3444421936448285}, {110., 0.20463582899601315`}, {120., 
      0.6458899314061316}, {130., 0.790954259079035}, {140., 
      0.5761139937948004}, {150., 0.1047621000960555}, {
      160., -0.4419977719365439}, {
      170., -0.7693255071421707}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 170.}, {-0.7708608317090617, 0.790954259079035}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.719852324779634*^9, 
  3.7198523619569244`*^9},ExpressionUUID->"4aca9e19-5e7b-4bd5-a1b2-\
2846a3b87b2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fit1", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataDet1", ",", "model1", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o", ",", "B"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit2", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataDet2", ",", "model2", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o", ",", "B"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitDiff", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataDiff", ",", "modelDifference", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitNorm", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataNorm", ",", "modelDifference", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "\[Theta]o"}], "}"}], ",", "\[Theta]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"model1", "/.", 
       RowBox[{"fit1", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataDet1", "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"model2", "/.", 
       RowBox[{"fit2", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataDet2", "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"modelDifference", "/.", 
       RowBox[{"fitDiff", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataDiff", "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"modelDifference", "/.", 
       RowBox[{"fitNorm", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "dataNorm", "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7198523823332644`*^9, 
  3.719852382583296*^9}},ExpressionUUID->"d7642303-11fe-4e2e-b6df-\
f6df450fa233"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.5293256373810202`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2320113040476869`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "5.969400135429439`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "5.969400135429439`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"]}], ")"}]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.4640226080953738, \
$CellContext`\[Theta]o -> 5.969400135429439, $CellContext`B -> 
      0.5293256373810202}, {{$CellContext`\[Theta]}, $CellContext`B + 
      Rational[1, 2] $CellContext`A (1 + 
        Cos[Rational[1, 90] 
           Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 - 
        Sin[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, 0.078087}, {10, 0.188462}, {20, 0.350895}, {30, 0.487604}, {
     40, 0.532486}, {50, 0.466613}, {60, 0.326163}, {70, 0.164723}, {
     80, 0.065187}, {90, 0.13045}, {100, 0.187698}, {110, 0.349139}, {
     120, 0.480734}, {130, 0.524472}, {140, 0.471422}, {150, 0.323186}, {
     160, 0.159532}, {170, 0.064805}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`B, $CellContext`\
\[Theta], $CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.719852385645975*^9},ExpressionUUID->"dbb5a583-a2b7-436a-b887-\
127c87f1d0e9"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.5079349808598654`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2231263697487543`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "6.0234958821500735`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "90"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
              "6.0234958821500735`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
              ")"}]}], "]"}], "2"]}], ")"}]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.4462527394975086, \
$CellContext`\[Theta]o -> 6.0234958821500735`, $CellContext`B -> 
      0.5079349808598654}, {{$CellContext`\[Theta]}, $CellContext`B + 
      Rational[1, 2] $CellContext`A (1 - 
        Cos[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 + 
        Sin[Rational[1, 90] 
           Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, 0.494168}, {10, 0.385091}, {20, 0.231742}, {30, 0.102207}, {
     40, 0.062668}, {50, 0.121977}, {60, 0.264182}, {70, 0.406616}, {
     80, 0.503786}, {90, 0.476001}, {100, 0.384938}, {110, 0.23052}, {
     120, 0.103429}, {130, 0.061218}, {140, 0.126786}, {150, 0.261892}, {
     160, 0.412265}, {170, 0.497069}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`B, $CellContext`\
\[Theta], $CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.719852385645975*^9},ExpressionUUID->"fe00cde7-2329-4b93-a1c9-\
24bc7170c918"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.4551368626708715`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "5.995919995230156`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "5.995919995230156`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"]}], ")"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.4551368626708715, \
$CellContext`\[Theta]o -> 
      5.995919995230156}, {{$CellContext`\[Theta]}, $CellContext`A (
       Cos[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 - 
       Sin[Rational[1, 90] 
         Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, -0.416081}, {10, -0.19662900000000003`}, {
     20, 0.11915300000000001`}, {30, 0.385397}, {40, 0.469818}, {
     50, 0.344636}, {60, 0.06198100000000001}, {70, -0.24189299999999997`}, {
     80, -0.43859899999999996`}, {90, -0.345551}, {100, -0.19724}, {
     110, 0.11861899999999997`}, {120, 0.377305}, {
     130, 0.46325400000000005`}, {140, 0.344636}, {
     150, 0.06129399999999996}, {160, -0.252733}, {170, -0.432264}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`\[Theta], \
$CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.719852385645975*^9},ExpressionUUID->"050b95b2-08de-49ad-af7f-\
a5bcf450b7f1"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.7816382867858672`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "6.064502946997143`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "90"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
             "6.064502946997143`", "\[VeryThinSpace]", "+", "\[Theta]"}], 
             ")"}]}], "]"}], "2"]}], ")"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`A -> -0.7816382867858672, \
$CellContext`\[Theta]o -> 
      6.064502946997143}, {{$CellContext`\[Theta]}, $CellContext`A (
       Cos[Rational[1, 90] 
          Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2 - 
       Sin[Rational[1, 90] 
         Pi ($CellContext`\[Theta] + $CellContext`\[Theta]o)]^2)}}, {
    1}, {{0, -0.727090195804318}, {10, -0.34282620786570733`}, {
     20, 0.20450640793495778`}, {30, 0.653424571600055}, {
     40, 0.7894057672467967}, {50, 0.5855281265396967}, {
     60, 0.10499114924323916`}, {70, -0.4233791146762254}, {
     80, -0.7708608317090617}, {90, -0.5697921184069281}, {
     100, -0.3444421936448285}, {110, 0.20463582899601315`}, {
     120, 0.6458899314061316}, {130, 0.790954259079035}, {
     140, 0.5761139937948004}, {150, 0.1047621000960555}, {
     160, -0.4419977719365439}, {170, -0.7693255071421707}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`A, $CellContext`\[Theta], \
$CellContext`\[Theta]o}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.719852385661602*^9},ExpressionUUID->"8618727b-0023-4f56-bd2d-\
f31780f313a0"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
sXVOFWd9LvwPlRPVcA==
        "]]},
      Annotation[#, "Charting`Private`Tag$117325#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0., 0.078087}, {10., 0.188462}, {20., 0.350895}, {30., 
       0.487604}, {40., 0.532486}, {50., 0.466613}, {60., 0.326163}, {70., 
       0.164723}, {80., 0.065187}, {90., 0.13045}, {100., 0.187698}, {110., 
       0.349139}, {120., 0.480734}, {130., 0.524472}, {140., 0.471422}, {150.,
        0.323186}, {160., 0.159532}, {170., 
       0.064805}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {0., 0.5293256322088655}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198523861147575`*^9},ExpressionUUID->"87c320b4-e00a-46b4-bfde-\
96fa91cde652"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
LqnT4X9rsTDe
        "]]},
      Annotation[#, "Charting`Private`Tag$118471#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0., 0.494168}, {10., 0.385091}, {20., 0.231742}, {30., 
       0.102207}, {40., 0.062668}, {50., 0.121977}, {60., 0.264182}, {70., 
       0.406616}, {80., 0.503786}, {90., 0.476001}, {100., 0.384938}, {110., 
       0.23052}, {120., 0.103429}, {130., 0.061218}, {140., 0.126786}, {150., 
       0.261892}, {160., 0.412265}, {170., 0.497069}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {0., 0.507934826253105}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.719852386552286*^9},ExpressionUUID->"ec401b37-fc9d-428c-bff1-\
49b6b9089c7f"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwUmnk0VP8bxyWhokWSLYn4liKhaPN57Ckku2xjzz4MEwoRiooWS0lRqKTs
FVIfa8mSnTFzp2TLXopQyu/+/nLe53Pus7yf53PPfc2x3cnPxJWTg4NDiouD
4/9//T8q/Peq7ZO63nAKIXWPidWns/c7aVeiV6fDxm7EMHF/xoGkHdrN6GLs
cOEdHyYuCo6oXaVNIGbc9pHAI0wsOixt80trElUzJiJduvuwkdivR9NaS4iq
s/V41CwDu2VKCcnz/kNXc/m3P+th4AiZkzFezcuI45QVBJUxMGNL177Apysg
s5RP8WsoA/NKyW+YUVoFk1p/+C3/9OIzBz43j2vxwYsG+rHu8R48GxzEtUaW
H747PZ+Rf9+DL7xee2QX7zpYe1B1TD6rB98GtTz35vWQ2GkyJ3O6B7vkNGgH
PN0IiTy5ctx13TipYLv0N6XNcKW66g7v5S48V9v5eVRLHAiXhNvO3e1YwIBv
w7m34tBxbSZ/LqsdK3ZpA//BrWC0yXCNakA79hx6kblPQQKE1yxsa+Jvx1TO
ZsWjfJKgoe3PbaLRhoel8mdifm0HfOwBxWR/C251DqBtaZKB0EnH9y6H3uHs
4d/0Q4HysO2Z3PCWnmf4mPmlT7Tn8lC71Zl7kScPT9Zt0n0+Ig96578b+B7M
xSrZezZLWivA4n/125Xu5uA6J/uSVep7odZgWavjRTr+8a3/7OhFRfiyr7RL
6IQq2uSjXVpiqAS7j6enxys9RyPZa84YeyqBZ07ZJQmOAlRGtIlNxSrBS/7P
lLtuhcjWwO6ibJUSDPLh4gmlYpS9m25yR0kZum/etOVteIFUxh9/D9+iAkjW
VWzTl0pk5r5W/viX/XByZfXpkdP1CNHNlSz/7oflWWfPgbp6JBeToeoicgDi
j/L+i1d4hziylDXDTx2Ax2of7Vgc79HzTzaWxdUHwGvaeNngQQPitngWKfpQ
FQTSQ04ItzWhMm3DnnGng5Cw9pWx41QbyjJNZc2HH4RUbzHe52LtKMHpSz/X
3YOQdi9Q+pV+O3K5EDQh0XkQ3Obq6lbmtKONlfc4TLUOQarXiQdeVh3IU3la
7rX0YWg/EZDVX9SJxKQSI64MHQHD6qwz3+V6UGX87K5FzqNgYG51c8CkB9n+
tO5y234UTML7//mF9qD7dTt2adofhRJ+bYZ1Qw+Scq/oWOg9CsYfBIItHHqR
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
/XATSLqx58Y7vR4sZaYfJXvXBFyeX5I/x+zBCm/6lvZ3mcCvm22D1dO92Lhx
96QlywQG3rYtZq9nYP/eMFbIgAlc3Wt2d6ciA5fObK94890EnNu9wtdTGfiQ
rOdZHX5TkFPW4jGaYGDdxN8zZrqmcCvMTUmmtQ+fSTf4Qjc0hTvp+xm9Y304
Lvd+220zUludKJTmYuLmWs0CwskUJtanWcaoMrHJQry3S4QpRAcww13vMHHg
KrZNbKwpmLX3Pu4pZOJkgb0nnlwzhS9Tj6fY75mYsadz1+RdU2Dsnnd+PsvE
do5iX2llpqD885Srrj4Lh/v69CRjU7B/599pb8fCmedw/at3pvCgdrJojT8L
DyQ7Z//pMoW9YufixFJZ+ExjnuPFGVPY1O4SLfKJheN7/xrnLJhCwNY1J+qn
WThv6CS8XzaFyen9GpzLLDz976fE2nVm4Pd1d6WCBIEDlY8QN+XMgP0n0PCE
JYFtD3z7fH2fGczfO3JbzYXA2gcfDiaomYHX8mhWOZXAmxDvRLwu+XwBC+iX
Cfxb4/X0ZUMzKFj38GzRLQIPaPv+iDUzg4rHRhUR9wlcfLxrMcrJDMZj91Z1
FRM4zfDS3wseZtAx+Wm/TSWBo4wPrYigmkHSTy/xwHoCn7LI5D0XbgY8m7lK
bHsIrGZtyhcSYwZre1Ol9nwisKQt94azV83AOlws6towgb87em+hpZkBK573
4aqfBGa4bBPzf2AGh85t2Su+SOAq9w4JvydmwL/bSafuH4GfeMZI+RSYQcYN
y9a/K9k40UdN1uulGaht5ytv4GVjOnVil8cbM+DbdOj7Dn42tqfdl3evM4P+
ZxouAhvZWJd+ap9rkxnQLuziviHIxgohXPudO8j6s+83ZG5hY6Hzr9Qc+8xg
4OtshoYoG/8N9zzi0G8GLn9lo2jibDwUuRXsvppB7sMetwMSbNwc3aZlM20G
b7CBXvw2Ni69dFHPes4Myi+ESPhJsnF6/IETlktmsMVjdnSI1NHXxozMV5pD
IWUpe4LUXtfTTUzXmINrxVmTi6Q2uXXS4tRGc7imMvsjj4x3KIXz9Elhc/j9
41GcK5lP6s4LO8Nt5tAU4C1WSNazJv2M4wlZc+g/25B/haz3x30xV315c1j8
OXxigeyn78HHM3oq5pDzNWVpjuy3KjvSW+ewOVQdMWuOJv148liFqqVpDpVp
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
hPBTFnJyizh7oNsT3O78ERBrYaFHku3T+oOeUKR57NbmdQRSTcxp/jjiCfS8
nf06WwnU8Dfkqem4JxhT5m+t3kOgcaaUm92MJxAaQ4bHjxHonP681sCsJ9z0
7B95Z04gvrKm7e4LnrB8/jJfjxOB5JMD2dRlT9h28s3+vHMEertS//Ucpxe8
FbPvo14ikFHA1juh3F5wxr5Lv+Emgagn35lF83vB4pf8wd1PCLTibZrS6o1e
EHsmsEK1mEA39/htSBD0guS9nWVdrwlUulq4OVXMC14/v3CnuoVAOsGTueLb
vECg+8aBjT0E6hmpuvRAygsYO2uoM2wCuZsnu8rKesHtyzm7nIYJtFDroZW3
ywu848O1nScJFKekvl1R3gv4xtUfzf4g+feBwHKpohegmUv7hRYJdDj8dcVb
VS9I35UbsZqLjZonE29rHfaCY9z7N7B42cjWxoXeoO4FE9FFIUdIvp/6oGZm
qOkFjjNKefIk/4er8St16JD1ro9Izhdko/WPv6y31PeCTZb8u/EWNsrc/HKK
ZeAFPTI8FAdRNtoXHd9EMfaCc9/05BLF2ajmh33usKkXvHS2izSSYCNTR+VL
npZkvYmX7O9tY6OhVh7Xb6e94PdsWeU5STYKVCc0A+29wD0r5fYYqVc9L5Rc
dPSC+yj4+wipU8Ri/oW5egHmO1NHI7VsvDXB6eEFVyekhK6T8V4tyFdc8vaC
UlPhscNkvmPunLf5qKT/up6aZ8l6+rp7gm7QyP4OT+3UJOv11M4zFTrrBTVc
O3PSyX7+FEfsuxvqBcMFptWxZL9Xt5utlwz3Ag47mzgO0o+t13dOZUd6gd5G
Ys0a0q/8f0uNu2K8wDpqh3kW6ae6T/uT/MtesI2lEtK8ko1aWTmxylfJ+Ya+
jYv5R6CUF1tDuK6T88wKnjZcIJB9YrJX9y1yf0Ily2/OEEjWg9/+USrZD/dx
XrNxAk1rxhifvesFxcmflm4MEOil+F/NYxmkP7vFKwyYBAr7FbhfJMsL/vuU
5BrdTu7zUxfR10+9IOWE5C6vtwTqukjwXc33gg6HuVTRUgLdtTNbti32AsmK
yw/1cgkkt1F76F+5F0jrj54SI/f5WLB0vuYHL3Byerq2wI5AG0zuZm5q8YIm
QctDp04SqHf3pltDbV4guyLtYwAQyO0zZ3AswwuUDC3V9m8nUIzugEbjVy+4
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
Xagjndq/glKzMw==
        "]]},
      Annotation[#, "Charting`Private`Tag$119614#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0., -0.416081}, {10., -0.19662900000000003`}, {20., 
       0.11915300000000001`}, {30., 0.385397}, {40., 0.469818}, {50., 
       0.344636}, {60., 0.06198100000000001}, {70., -0.24189299999999997`}, {
       80., -0.43859899999999996`}, {90., -0.345551}, {100., -0.19724}, {110.,
        0.11861899999999997`}, {120., 0.377305}, {130., 
       0.46325400000000005`}, {140., 0.344636}, {150., 0.06129399999999996}, {
       160., -0.252733}, {170., -0.432264}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {-0.4551346723952119, 0.4551362503916947}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.719852386974187*^9},ExpressionUUID->"b8c81a57-bf4c-4d9e-adcc-\
5d931b4a0796"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$120760#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0., -0.727090195804318}, {10., -0.34282620786570733`}, {20., 
       0.20450640793495778`}, {30., 0.653424571600055}, {40., 
       0.7894057672467967}, {50., 0.5855281265396967}, {60., 
       0.10499114924323916`}, {70., -0.4233791146762254}, {
       80., -0.7708608317090617}, {90., -0.5697921184069281}, {
       100., -0.3444421936448285}, {110., 0.20463582899601315`}, {120., 
       0.6458899314061316}, {130., 0.790954259079035}, {140., 
       0.5761139937948004}, {150., 0.1047621000960555}, {
       160., -0.4419977719365439}, {
       170., -0.7693255071421707}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {-0.7816381844165979, 0.7816382432204446}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198523873960915`*^9},ExpressionUUID->"e57d9b73-0ecd-4642-92a9-\
d06484755873"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1584, 841},
WindowMargins->{{1272, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 12107, 263, 1017, "Input",ExpressionUUID->"596fa2e4-c4b7-47e8-90be-e7948e209090"],
Cell[CellGroupData[{
Cell[12690, 287, 1794, 50, 189, "Input",ExpressionUUID->"122b1f08-e983-4e45-96c2-871c2e7f8ac2"],
Cell[14487, 339, 3810, 65, 175, "Output",ExpressionUUID->"7645e3e0-9f43-43e7-8ac4-31c1367ca5c0"],
Cell[18300, 406, 1207, 21, 49, "Output",ExpressionUUID->"6fb723dd-18d4-41af-988d-14fa76726e50"]
}, Open  ]],
Cell[19522, 430, 152, 3, 26, "Input",ExpressionUUID->"2342bd97-b1d7-4e33-acad-5a7e85ea1875"],
Cell[CellGroupData[{
Cell[19699, 437, 3365, 92, 297, "Input",ExpressionUUID->"bc4536dc-15f5-464f-a833-09e3902e27ed"],
Cell[23067, 531, 3203, 95, 67, "Output",ExpressionUUID->"b434cfa5-4dfd-4699-9d2e-ae6801b91155"],
Cell[26273, 628, 1948, 49, 638, "Output",ExpressionUUID->"2e83acae-4d64-42eb-9af8-561ea41c33aa"]
}, Open  ]],
Cell[28236, 680, 13284, 301, 1285, "Input",ExpressionUUID->"0fbff5b3-fa0e-4926-bc88-ebd45b8daf62"],
Cell[CellGroupData[{
Cell[41545, 985, 357, 7, 40, "Subsubsection",ExpressionUUID->"b56ba961-9425-4e66-8e5d-49a05d056cf4"],
Cell[41905, 994, 4322, 122, 284, "Input",ExpressionUUID->"f5207a12-5bb4-4e0c-820a-4b2d27a85353"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46264, 1121, 456, 9, 40, "Subsubsection",ExpressionUUID->"1f60d278-e3ea-45e1-9c0a-931188da2437"],
Cell[CellGroupData[{
Cell[46745, 1134, 1015, 24, 92, "Input",ExpressionUUID->"1974e1a4-259a-4994-8c47-6b8d4939b9c8"],
Cell[47763, 1160, 640, 14, 30, "Output",ExpressionUUID->"b7b090bd-8be4-405a-8ef2-678f52890aac"],
Cell[48406, 1176, 3226, 88, 90, "Output",ExpressionUUID->"904331a4-4913-422b-8bf3-dcc401144534"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51681, 1270, 265, 6, 60, "Section",ExpressionUUID->"5bb748da-4bee-485f-9f15-e1d5b5b76ffe"],
Cell[CellGroupData[{
Cell[51971, 1280, 164, 3, 48, "Subsection",ExpressionUUID->"1f538b94-c7d8-4277-9786-f9c0c94c572b"],
Cell[CellGroupData[{
Cell[52160, 1287, 184, 4, 26, "Input",ExpressionUUID->"7e083974-0d30-42ea-95af-fac103c79ada"],
Cell[52347, 1293, 389, 12, 45, "Output",ExpressionUUID->"73176b0c-ef78-48f1-9f8c-e317ac5e3927"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52785, 1311, 165, 3, 48, "Subsection",ExpressionUUID->"33ecc48c-c17e-4dd2-90f4-4448e5ad92fa"],
Cell[CellGroupData[{
Cell[52975, 1318, 487, 13, 45, "Input",ExpressionUUID->"b25a6795-58c3-46d5-85f9-37e411ce1d4a"],
Cell[53465, 1333, 481, 13, 45, "Output",ExpressionUUID->"c542eba1-0642-4d29-8b2a-33c687338784"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53995, 1352, 488, 9, 72, "Subsection",ExpressionUUID->"a056d93b-53fc-44ca-a838-fd5557b5095a"],
Cell[CellGroupData[{
Cell[54508, 1365, 2089, 48, 164, "Input",ExpressionUUID->"7c8a6d3c-09b8-42ea-b307-3ff373e6ed20"],
Cell[56600, 1415, 2009, 49, 45, "Output",ExpressionUUID->"7ad8965e-9f48-4641-ac87-a2cbb4933dbf"],
Cell[58612, 1466, 2031, 50, 45, "Output",ExpressionUUID->"320353f5-6f1c-42c5-8a5b-fc79a2580707"],
Cell[60646, 1518, 1263, 24, 33, "Output",ExpressionUUID->"ec280732-eaee-4dc1-b79e-279d68db8240"]
}, Open  ]],
Cell[61924, 1545, 154, 3, 26, "Input",ExpressionUUID->"c8788c08-6a3c-42bd-bad7-75d1300106a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62115, 1553, 294, 7, 48, "Subsection",ExpressionUUID->"daa1b5d9-d7e2-4f5d-ac56-b511db8e639b"],
Cell[CellGroupData[{
Cell[62434, 1564, 585, 12, 26, "Input",ExpressionUUID->"65915b49-7d6e-4567-9053-4713cb8e73e6"],
Cell[63022, 1578, 23977, 412, 417, "Output",ExpressionUUID->"e04aa4b1-4dd6-4f84-9580-7693c0eba952"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87060, 1997, 193, 3, 60, "Section",ExpressionUUID->"b8bf1754-fcf4-41da-8784-dbb52f3c8bee"],
Cell[CellGroupData[{
Cell[87278, 2004, 3264, 88, 186, "Input",ExpressionUUID->"0d98292b-e908-43a0-a250-d63bc4652203"],
Cell[90545, 2094, 980, 25, 47, "Output",ExpressionUUID->"0950ce66-d626-4616-87f9-9b5140561b9e"],
Cell[91528, 2121, 978, 25, 47, "Output",ExpressionUUID->"0dfe9bc4-7bba-44e2-ae36-2cbe1d3ccb43"],
Cell[92509, 2148, 900, 23, 47, "Output",ExpressionUUID->"f5966d90-421f-4c8b-adf2-dcf864c0ae47"],
Cell[93412, 2173, 2696, 60, 65, "Output",ExpressionUUID->"c8d1dcc6-bcdc-406a-acaf-1c9826f3413f"],
Cell[96111, 2235, 2697, 60, 65, "Output",ExpressionUUID->"6ca23347-432c-4743-ada0-bcacedbc1389"],
Cell[98811, 2297, 2713, 63, 65, "Output",ExpressionUUID->"98ebed02-e1a1-40a7-aa3d-fe10dc34e4cc"],
Cell[101527, 2362, 2973, 68, 65, "Output",ExpressionUUID->"8b59dc00-65ac-486c-8592-5f9124a5361d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104537, 2435, 1915, 49, 81, "Input",ExpressionUUID->"8196bedc-c62f-4a51-86c7-6cc4b9dfa7b9"],
Cell[106455, 2486, 24383, 419, 413, "Output",ExpressionUUID->"47ca4f28-d8c4-4463-a5a4-7eb90abf6d59"],
Cell[130841, 2907, 24501, 421, 428, "Output",ExpressionUUID->"159733ee-ede7-4a10-a29a-8c54263e59cb"],
Cell[155345, 3330, 24583, 422, 439, "Output",ExpressionUUID->"8a861a5e-643d-4813-9774-8c77dcf4e821"],
Cell[179931, 3754, 24784, 425, 464, "Output",ExpressionUUID->"f28f8fb4-ca00-4a6a-92d5-89a047c3232a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[204764, 4185, 195, 3, 60, "Section",ExpressionUUID->"c4f289ee-c13c-4a84-987c-2cc25adc8073"],
Cell[CellGroupData[{
Cell[204984, 4192, 1863, 52, 189, "Input",ExpressionUUID->"71b500bd-c26f-4c9f-970c-5618844db42d"],
Cell[206850, 4246, 3242, 57, 175, "Output",ExpressionUUID->"a16b44a9-9f0b-4493-bfee-5841dad21230"],
Cell[210095, 4305, 639, 13, 49, "Output",ExpressionUUID->"1e4b84d4-1ae0-45db-a658-67f71d732fa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210771, 4323, 2500, 79, 279, "Input",ExpressionUUID->"d1d132a2-a5b3-4d33-8881-94195e6a56e2"],
Cell[213274, 4404, 1641, 43, 208, "Output",ExpressionUUID->"4a5e9c44-e876-47f9-bdb1-f261e2b47217"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214952, 4452, 992, 24, 81, "Input",ExpressionUUID->"bdce87e1-585f-462b-98ec-507c27248c57"],
Cell[215947, 4478, 2094, 52, 65, "Output",ExpressionUUID->"695bf0cf-3e6b-4b58-9757-891164f9f32a"],
Cell[218044, 4532, 2090, 52, 65, "Output",ExpressionUUID->"49af006a-92b6-45ac-a6ce-5651218857cf"],
Cell[220137, 4586, 2068, 54, 65, "Output",ExpressionUUID->"fd056b98-1f0d-46b2-9441-c2fab9257a62"],
Cell[222208, 4642, 2148, 56, 65, "Output",ExpressionUUID->"9ae3348f-e6bd-4476-bec0-be8ca0b4db05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224393, 4703, 1591, 44, 81, "Input",ExpressionUUID->"82447bdc-f0f8-4c70-a709-97ef79a674d0"],
Cell[225987, 4749, 23623, 407, 216, "Output",ExpressionUUID->"c1147b1d-8e12-4081-ab33-9a2d69216c64"],
Cell[249613, 5158, 23659, 407, 216, "Output",ExpressionUUID->"26f04b5b-7627-4b14-a753-202d10ffa5e7"],
Cell[273275, 5567, 24014, 413, 208, "Output",ExpressionUUID->"5018d7f8-5623-49dc-b650-cc579576c202"],
Cell[297292, 5982, 23941, 412, 208, "Output",ExpressionUUID->"e010c0ba-d3d3-4412-992d-688312240b1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321270, 6399, 2500, 79, 279, "Input",ExpressionUUID->"74f30b25-6a11-4772-a319-07aee77f515c"],
Cell[323773, 6480, 1835, 45, 208, "Output",ExpressionUUID->"4aca9e19-5e7b-4bd5-a1b2-2846a3b87b2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325645, 6530, 2598, 70, 153, "Input",ExpressionUUID->"d7642303-11fe-4e2e-b6df-f6df450fa233"],
Cell[328246, 6602, 2072, 52, 65, "Output",ExpressionUUID->"dbb5a583-a2b7-436a-b887-127c87f1d0e9"],
Cell[330321, 6656, 2076, 52, 65, "Output",ExpressionUUID->"fe00cde7-2329-4b93-a1c9-24bc7170c918"],
Cell[332400, 6710, 2014, 53, 65, "Output",ExpressionUUID->"050b95b2-08de-49ad-af7f-a5bcf450b7f1"],
Cell[334417, 6765, 2118, 55, 65, "Output",ExpressionUUID->"8618727b-0023-4f56-bd2d-f31780f313a0"],
Cell[336538, 6822, 23817, 409, 216, "Output",ExpressionUUID->"87c320b4-e00a-46b4-bfde-96fa91cde652"],
Cell[360358, 7233, 23737, 407, 216, "Output",ExpressionUUID->"ec401b37-fc9d-428c-bff1-49b6b9089c7f"],
Cell[384098, 7642, 24121, 413, 208, "Output",ExpressionUUID->"b8c81a57-bf4c-4d9e-adcc-5d931b4a0796"],
Cell[408222, 8057, 24462, 419, 208, "Output",ExpressionUUID->"e57d9b73-0ecd-4642-92a9-d06484755873"]
}, Open  ]]
}, Open  ]]
}
]
*)

