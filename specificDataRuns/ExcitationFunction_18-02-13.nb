(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    280290,       5868]
NotebookOptionsPosition[    275436,       5792]
NotebookOutlinePosition[    275816,       5808]
CellTagsIndexPosition[    275773,       5805]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Sets", " ", "the", " ", "Base", " ", "directory"}], ",", " ", 
    RowBox[{
    "changing", " ", "which", " ", "files", " ", "are", " ", "easiest", " ", 
     "to", " ", 
     RowBox[{"acces", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dropBoxOn", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Dropbox\>\"", ",", "\"\<00School\>\"", ",", "\"\<research\>\"", 
        ",", "\"\<DataRuns\>\"", ",", "\"\<18-03-18_100mTorrBGP\>\"", ",", 
        "\"\<data\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"SystemInformation", "[", 
        RowBox[{"\"\<Kernel\>\"", ",", "\"\<OperatingSystem\>\""}], "]"}], 
       "\[Equal]", "\"\<Unix\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"folder", "=", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\</\>\"", ",", "\"\<home\>\"", ",", "\"\<karl\>\"", ",", 
           "dropBoxOn"}], "}"}], "]"}]}], ";"}], " ", ",", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Home", " ", "coputer", " ", "is", " ", "Linux"}], ",", " ", 
        RowBox[{
        "so", " ", "needs", " ", "\"\</\>\"", " ", "at", " ", "beginning"}]}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"folder", "=", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<C:\>\"", ",", "\"\<Users\>\"", ",", "\"\<kahrendsen2\>\"", ",",
            "dropBoxOn"}], "}"}], "]"}]}], ";"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Lab", " ", "computer", " ", "is", " ", "Windows"}], ",", " ", 
       RowBox[{
       "so", " ", "needs", " ", "\"\<C:\>\"", " ", "at", " ", "beginning", 
        "\"\<\>"}]}], "*)"}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "The", " ", "folder", " ", "that", " ", "contains", " ", "the", " ", 
      "different", " ", "data", " ", "runs", " ", "to", " ", "analyze"}], ",",
      " ", 
     RowBox[{
     "this", " ", "folder", " ", "contains", " ", "subfolders", " ", "with", 
      " ", "\[IndentingNewLine]", "individual", " ", 
      RowBox[{"runs", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"dataFolder", "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", "folder", "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", "dataFolder", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Make", " ", "a", " ", "list", " ", "of", " ", "directories", " ", "to", 
     " ", "easily", " ", "select", " ", "the", " ", "folder", " ", "you", " ",
      "would", " ", "like", " ", "to", " ", "work", " ", 
     RowBox[{"with", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"directories", "=", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"FileNames", "[", 
        RowBox[{"\"\<*\>\"", ",", "\"\<\>\"", ",", "1"}], "]"}], ",", 
       "DirectoryQ"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", 
      RowBox[{"Length", "[", "directories", "]"}]}], ",", 
     RowBox[{"i", ">", "0"}], ",", 
     RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"i", " ", "\[Rule]", " ", 
        RowBox[{"directories", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "set", " ", "rootFolder", " ", "to", " ", "the", " ", "folder", " ", 
     "name", " ", "containing", " ", "the", " ", "desired", " ", "Files"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rootFolder", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", "dataFolder", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", "rootFolder", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Obtain", " ", "the", " ", "filenames", " ", "of", " ", "the", " ", 
     "excitation", " ", "functions", " ", "and", " ", "print", " ", "them", 
     " ", 
     RowBox[{"out", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", "folder", "}"}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"files", "=", 
    RowBox[{"FileNames", "[", "\"\<EX*.dat\>\"", "]"}]}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0Fsog3EABfCvYW4ZySWFMqJILsnTqI9cC7MZtZWJlFJISFbK5YHpi/Kg
KaVI8WKX2jBGU5hbeTCR2IaFL20zNnmQ/9nD6fd06nTS2ntFnRyKovgk8L6n
0Xa+ydKpCTXv0JrndcNKdagHju2r5JfERKGiA3bFCLQfRN/jtAFa3RNGmPkU
sgurJlZk5WqW/jv+7oCvwYI+2MPl9UO1a/2hTMPSay0rdnhUIPZC1/boN/Tx
/eHlREGCIgIeKIQ8aI6XBFztU8XC1nZ9ClSfvdyeELPrJHfQzbnxWYimyXo/
dF7PF3mJG8eLYvhrSef2a0lfVx0Na3eUiVA0Yk+C0q4Zv1PH0qV65gcuxzOp
nyaWTua0pUFnp59pNrO047lbBW/Fs69zh2S3UfIGGcd84Q4xY2mpGFLdcSUw
2UAHbFk7nDQSwyIjpiBtozRQuSDXwTaPTLhHlGZ5GqFAHLYK7xuqAyq5Gj20
bgUZ4HjU1S48sVn2YF7kR7qZ2CrXZEATl8mB2qeSXFhsPxXxL8gf+U1SOFzx
NQCzXReDsDeENw4dWUNT8B8e4jKc
  "],ExpressionUUID->"106a6441-77cc-41bd-a35b-932010261170"],

Cell[BoxData["\<\"C:\\\\Users\\\\kahrendsen2\\\\Dropbox\\\\00School\\\\\
research\\\\DataRuns\\\\18-03-18_100mTorrBGP\\\\data\"\>"], "Output",
 CellChangeTimes->{
  3.7162914727463627`*^9, 3.716810766042556*^9, {3.7168147583880367`*^9, 
   3.716814764283885*^9}, 3.716814896809577*^9, 3.7168149322529488`*^9, 
   3.716814964067189*^9, {3.716815003566327*^9, 3.716815023842786*^9}, {
   3.716815058580196*^9, 3.716815086058373*^9}, 3.716896810959361*^9, 
   3.7170889836659317`*^9, 3.717091258938083*^9, {3.717175957607753*^9, 
   3.717175968761345*^9}, 3.7172751404339337`*^9, 3.7174137616212587`*^9, 
   3.7174355148344107`*^9, 3.717435599386831*^9, 3.718199098741785*^9, 
   3.7181992383593216`*^9, 3.7239892183105783`*^9, {3.7239892667965603`*^9, 
   3.7239892826933756`*^9}, 3.723993542547577*^9, 3.725767794869255*^9, {
   3.725767829724635*^9, 3.725767857496646*^9}, 3.725767952312077*^9, {
   3.7264115842040825`*^9, 3.7264115962322493`*^9}, 3.7264953219418335`*^9, 
   3.7264961526542006`*^9, {3.726496228773982*^9, 3.7264962345755215`*^9}, 
   3.72649879396121*^9, 3.726498882354232*^9, {3.726499218586545*^9, 
   3.7264992278428307`*^9}, 3.7265003967412505`*^9, 3.726502544017169*^9, {
   3.7265033526944137`*^9, 3.726503364389279*^9}, 3.726503407795081*^9, 
   3.726512421944309*^9, 3.7265124905841975`*^9, 3.72797697244696*^9, 
   3.7280938879143505`*^9, 3.7281258100788794`*^9, 3.7314262045821257`*^9, 
   3.731428005964836*^9, 3.731428052983926*^9, {3.731428266391548*^9, 
   3.731428270898589*^9}, {3.731428385704898*^9, 
   3.7314284216730742`*^9}},ExpressionUUID->"617edbab-cebf-49f0-ba4d-\
078804310bae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"EX2018-03-18_021149.dat\"\>", 
   ",", "\<\"EX2018-03-18_021318.dat\"\>", 
   ",", "\<\"EX2018-03-18_042007.dat\"\>", 
   ",", "\<\"EX2018-03-18_052845.dat\"\>", 
   ",", "\<\"EX2018-03-18_064305.dat\"\>", 
   ",", "\<\"EX2018-03-18_075144.dat\"\>", 
   ",", "\<\"EX2018-03-18_090558.dat\"\>", 
   ",", "\<\"EX2018-03-18_101436.dat\"\>", 
   ",", "\<\"EX2018-03-18_112902.dat\"\>", 
   ",", "\<\"EX2018-03-18_130418.dat\"\>", 
   ",", "\<\"EX2018-03-18_154743.dat\"\>", 
   ",", "\<\"EX2018-03-18_170735.dat\"\>", 
   ",", "\<\"EX2018-03-18_181617.dat\"\>", 
   ",", "\<\"EX2018-03-18_193116.dat\"\>", 
   ",", "\<\"EX2018-03-18_204001.dat\"\>", 
   ",", "\<\"EX2018-03-18_215513.dat\"\>", 
   ",", "\<\"EX2018-03-18_230359.dat\"\>", 
   ",", "\<\"EX2018-03-19_001900.dat\"\>", 
   ",", "\<\"EX2018-03-19_004104.dat\"\>", 
   ",", "\<\"EX2018-03-19_015629.dat\"\>", 
   ",", "\<\"EX2018-03-19_030510.dat\"\>", 
   ",", "\<\"EX2018-03-19_042024.dat\"\>", 
   ",", "\<\"EX2018-03-19_052911.dat\"\>", 
   ",", "\<\"EX2018-03-19_064414.dat\"\>", 
   ",", "\<\"EX2018-03-19_075259.dat\"\>", 
   ",", "\<\"EX2018-03-19_090755.dat\"\>", 
   ",", "\<\"EX2018-03-19_101639.dat\"\>", 
   ",", "\<\"EX2018-03-19_105809.dat\"\>", 
   ",", "\<\"EX2018-03-19_110123.dat\"\>", 
   ",", "\<\"EX2018-03-19_110504.dat\"\>", 
   ",", "\<\"EX2018-03-19_110857.dat\"\>", 
   ",", "\<\"EX2018-03-19_120957.dat\"\>", 
   ",", "\<\"EX2018-03-19_121428.dat\"\>", 
   ",", "\<\"EX2018-03-19_121708.dat\"\>", 
   ",", "\<\"EX2018-03-19_123813.dat\"\>", 
   ",", "\<\"EX2018-03-19_131949.dat\"\>", 
   ",", "\<\"EX2018-03-19_145937.dat\"\>", 
   ",", "\<\"EX2018-03-19_161426.dat\"\>", 
   ",", "\<\"EX2018-03-19_175336.dat\"\>", 
   ",", "\<\"EX2018-03-19_190822.dat\"\>", 
   ",", "\<\"EX2018-03-19_202907.dat\"\>", 
   ",", "\<\"EX2018-03-19_214353.dat\"\>", 
   ",", "\<\"EX2018-03-19_221055.dat\"\>", 
   ",", "\<\"EX2018-03-19_221259.dat\"\>", 
   ",", "\<\"EX2018-03-19_234036.dat\"\>", 
   ",", "\<\"EX2018-03-20_003227.dat\"\>", 
   ",", "\<\"EX2018-03-20_015230.dat\"\>", 
   ",", "\<\"EX2018-03-20_024420.dat\"\>", 
   ",", "\<\"EX2018-03-20_040433.dat\"\>", 
   ",", "\<\"EX2018-03-20_045630.dat\"\>", 
   ",", "\<\"EX2018-03-20_061643.dat\"\>", 
   ",", "\<\"EX2018-03-20_070837.dat\"\>", 
   ",", "\<\"EX2018-03-20_082845.dat\"\>", 
   ",", "\<\"EX2018-03-20_092043.dat\"\>", 
   ",", "\<\"EX2018-03-20_104044.dat\"\>", 
   ",", "\<\"EX2018-03-20_113237.dat\"\>", 
   ",", "\<\"EX2018-03-20_125251.dat\"\>", 
   ",", "\<\"EX2018-03-20_134446.dat\"\>", 
   ",", "\<\"EX2018-03-20_173918.dat\"\>", 
   ",", "\<\"EX2018-03-20_174314.dat\"\>", 
   ",", "\<\"EX2018-03-20_190651.dat\"\>", 
   ",", "\<\"EX2018-03-20_195846.dat\"\>", 
   ",", "\<\"EX2018-03-20_211910.dat\"\>", 
   ",", "\<\"EX2018-03-20_221123.dat\"\>", 
   ",", "\<\"EX2018-03-20_233146.dat\"\>", 
   ",", "\<\"EX2018-03-21_002337.dat\"\>", 
   ",", "\<\"EX2018-03-21_014405.dat\"\>", 
   ",", "\<\"EX2018-03-21_023606.dat\"\>", 
   ",", "\<\"EX2018-03-21_035623.dat\"\>", 
   ",", "\<\"EX2018-03-21_044819.dat\"\>", 
   ",", "\<\"EX2018-03-21_060839.dat\"\>", 
   ",", "\<\"EX2018-03-21_070036.dat\"\>", 
   ",", "\<\"EX2018-03-21_082110.dat\"\>", 
   ",", "\<\"EX2018-03-21_091308.dat\"\>", 
   ",", "\<\"EX2018-03-21_103336.dat\"\>", 
   ",", "\<\"EX2018-03-21_131018.dat\"\>", 
   ",", "\<\"EX2018-03-21_132814.dat\"\>", 
   ",", "\<\"EX2018-03-21_134126.dat\"\>", 
   ",", "\<\"EX2018-03-21_134407.dat\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7162914727463627`*^9, 3.716810766042556*^9, {3.7168147583880367`*^9, 
   3.716814764283885*^9}, 3.716814896809577*^9, 3.7168149322529488`*^9, 
   3.716814964067189*^9, {3.716815003566327*^9, 3.716815023842786*^9}, {
   3.716815058580196*^9, 3.716815086058373*^9}, 3.716896810959361*^9, 
   3.7170889836659317`*^9, 3.717091258938083*^9, {3.717175957607753*^9, 
   3.717175968761345*^9}, 3.7172751404339337`*^9, 3.7174137616212587`*^9, 
   3.7174355148344107`*^9, 3.717435599386831*^9, 3.718199098741785*^9, 
   3.7181992383593216`*^9, 3.7239892183105783`*^9, {3.7239892667965603`*^9, 
   3.7239892826933756`*^9}, 3.723993542547577*^9, 3.725767794869255*^9, {
   3.725767829724635*^9, 3.725767857496646*^9}, 3.725767952312077*^9, {
   3.7264115842040825`*^9, 3.7264115962322493`*^9}, 3.7264953219418335`*^9, 
   3.7264961526542006`*^9, {3.726496228773982*^9, 3.7264962345755215`*^9}, 
   3.72649879396121*^9, 3.726498882354232*^9, {3.726499218586545*^9, 
   3.7264992278428307`*^9}, 3.7265003967412505`*^9, 3.726502544017169*^9, {
   3.7265033526944137`*^9, 3.726503364389279*^9}, 3.726503407795081*^9, 
   3.726512421944309*^9, 3.7265124905841975`*^9, 3.72797697244696*^9, 
   3.7280938879143505`*^9, 3.7281258100788794`*^9, 3.7314262045821257`*^9, 
   3.731428005964836*^9, 3.731428052983926*^9, {3.731428266391548*^9, 
   3.731428270898589*^9}, {3.731428385704898*^9, 
   3.731428424506322*^9}},ExpressionUUID->"ee53e20f-46b5-4f29-b113-\
35ddf82f8b47"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Performs Gaussian Analysis of Excitation Function (both with counts and \
current)\
\>", "Section",
 CellChangeTimes->{{3.7265758322153645`*^9, 
  3.726575850391205*^9}},ExpressionUUID->"06d67a55-b3ec-4b03-a150-\
d1e01663bb33"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"timeString", "=", "\"\<203423\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"ExcitationFunctionProcessor", "[", "timeString", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"info", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"data", "[", "\"\<Filename\>\"", "]"}], "\[Rule]", "data"}], 
    "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeString", "=", "\"\<233539\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"ExcitationFunctionProcessor", "[", "timeString", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"info", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"data", "[", "\"\<Filename\>\"", "]"}], "\[Rule]", "data"}], 
     "|>"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "[", "info", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7150122777567425`*^9, 3.7150122840119996`*^9}, {
   3.7150123261726923`*^9, 3.7150123303405285`*^9}, {3.7150124359734163`*^9, 
   3.715012479646136*^9}, {3.7150128069518833`*^9, 3.715012818751912*^9}, {
   3.7150129667449007`*^9, 3.7150129819452457`*^9}, {3.7150130364173155`*^9, 
   3.7150131715294724`*^9}, {3.7150133166513133`*^9, 
   3.7150133179692016`*^9}, {3.7150133480254803`*^9, 3.715013381257094*^9}, {
   3.715013414513726*^9, 3.715013414978044*^9}, {3.7150135356901937`*^9, 
   3.715013558972037*^9}, {3.7150136509316206`*^9, 3.7150136664751987`*^9}, {
   3.715013710956468*^9, 3.715013751796263*^9}, {3.7150138363427997`*^9, 
   3.715013845285886*^9}, {3.7150139033013687`*^9, 3.715013907556264*^9}, {
   3.7150146812816114`*^9, 3.7150146815527964`*^9}, {3.7150164533544197`*^9, 
   3.7150165176511755`*^9}, {3.7150165661391735`*^9, 3.715016634939995*^9}, {
   3.7150167998842473`*^9, 3.715016921549045*^9}, {3.7150169518296175`*^9, 
   3.715016979725424*^9}, {3.7150170467736287`*^9, 3.715017105548256*^9}, {
   3.7150948951139283`*^9, 3.715094911169752*^9}, {3.7150953668023195`*^9, 
   3.7150953669304056`*^9}, {3.71509547147389*^9, 3.7150954720903053`*^9}, {
   3.7239939683161297`*^9, 3.723993996646428*^9}, {3.7257679941268997`*^9, 
   3.725767996990594*^9}, {3.726411633053282*^9, 3.726411637085991*^9}, {
   3.726411814391388*^9, 3.726411839103167*^9}, {3.7264153528860435`*^9, 
   3.7264154131635923`*^9}, 3.72650725701939*^9, {3.7265757918075147`*^9, 
   3.726575795516156*^9}, {3.7279772198195686`*^9, 3.727977233907164*^9}, {
   3.728093864584859*^9, 3.7280938798669963`*^9}, {3.7281258254392853`*^9, 
   3.728125835596204*^9}, {3.7314267168179336`*^9, 3.731426725021761*^9}, {
   3.731427268666405*^9, 3.7314272720277576`*^9}, {3.731427479034995*^9, 
   3.731427521619149*^9}, {3.7314275865189886`*^9, 3.7314276603610144`*^9}, {
   3.7314277035700827`*^9, 3.731427781851346*^9}, {3.7314278278957386`*^9, 
   3.731427887564613*^9}},ExpressionUUID->"f43009aa-911c-440e-855f-\
8755be91a3de"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "CountRateplot", "CountRateonsetEnergy", "CountRateonsetWidth", 
            "CountRatelowEnergySignal", "CountRatehighEnergySignal", 
            "Filename", "USB1208->HP3617Aconversion", "FilamentBias", 
            "NumberOfSecondsPerCountMeasurement", "Comments", 
            "IonGauge(Torr)", "CVGauge(N2)(Torr)", "CVGauge(He)(Torr)", 
            "CellTemp(Res)", "CellTemp(Targ)", "MagnitudeOfCurrent(*10^-X)", 
            "Currentplot", "N2Offset", "filBias", "CurrentonsetEnergy", 
            "CurrentonsetWidth", "CurrentlowEnergySignal", 
            "CurrenthighEnergySignal"}, {
            TypeSystem`Atom[Graphics], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Graphics], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 2], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[12]} -> 
           1, {All, "CountRateplot"} -> 1, {All, "CountRateonsetEnergy"} -> 
           1, {All, "CountRateonsetWidth"} -> 
           1, {All, "CountRatelowEnergySignal"} -> 
           1, {All, "CountRatehighEnergySignal"} -> 1, {All, "Filename"} -> 
           1, {All, "USB1208->HP3617Aconversion"} -> 1, {All, "FilamentBias"} -> 
           1, {All, "NumberOfSecondsPerCountMeasurement"} -> 
           1, {All, "Comments"} -> 1, {All, "IonGauge(Torr)"} -> 
           1, {All, "CVGauge(N2)(Torr)"} -> 1, {All, "CVGauge(He)(Torr)"} -> 
           1, {All, "CellTemp(Res)"} -> 1, {All, "CellTemp(Targ)"} -> 
           1, {All, "MagnitudeOfCurrent(*10^-X)"} -> 1, {All, "Currentplot"} -> 
           1, {All, "N2Offset"} -> 1, {All, "filBias"} -> 
           1, {All, "CurrentonsetEnergy"} -> 1, {All, "CurrentonsetWidth"} -> 
           1, {All, "CurrentlowEnergySignal"} -> 
           1, {All, "CurrenthighEnergySignal"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "CountRateplot" -> TypeSystem`PackageScope`AtomShape[60], 
               "CountRateonsetEnergy" -> 
               TypeSystem`PackageScope`AtomShape[60], "CountRateonsetWidth" -> 
               TypeSystem`PackageScope`AtomShape[60], 
               "CountRatelowEnergySignal" -> 
               TypeSystem`PackageScope`AtomShape[34], 
               "CountRatehighEnergySignal" -> 
               TypeSystem`PackageScope`AtomShape[34], "Filename" -> 
               TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
               "USB1208->HP3617Aconversion" -> 
               TypeSystem`PackageScope`AtomShape[60], "FilamentBias" -> 
               TypeSystem`PackageScope`AtomShape[60], 
               "NumberOfSecondsPerCountMeasurement" -> 
               TypeSystem`PackageScope`AtomShape[34], "Comments" -> 
               TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
               "IonGauge(Torr)" -> TypeSystem`PackageScope`AtomShape[60], 
               "CVGauge(N2)(Torr)" -> TypeSystem`PackageScope`AtomShape[60], 
               "CVGauge(He)(Torr)" -> TypeSystem`PackageScope`AtomShape[60], 
               "CellTemp(Res)" -> TypeSystem`PackageScope`AtomShape[60], 
               "CellTemp(Targ)" -> TypeSystem`PackageScope`AtomShape[60], 
               "MagnitudeOfCurrent(*10^-X)" -> 
               TypeSystem`PackageScope`AtomShape[34], "Currentplot" -> 
               TypeSystem`PackageScope`AtomShape[60], "N2Offset" -> 
               TypeSystem`PackageScope`AtomShape[60], "filBias" -> 
               TypeSystem`PackageScope`AtomShape[60], "CurrentonsetEnergy" -> 
               TypeSystem`PackageScope`AtomShape[60], "CurrentonsetWidth" -> 
               TypeSystem`PackageScope`AtomShape[60], 
               "CurrentlowEnergySignal" -> 
               TypeSystem`PackageScope`AtomShape[60], 
               "CurrenthighEnergySignal" -> 
               TypeSystem`PackageScope`AtomShape[60]]]]], 2, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[115251368], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "CountRateplot", "CountRateonsetEnergy", "CountRateonsetWidth", 
            "CountRatelowEnergySignal", "CountRatehighEnergySignal", 
            "Filename", "USB1208->HP3617Aconversion", "FilamentBias", 
            "NumberOfSecondsPerCountMeasurement", "Comments", 
            "IonGauge(Torr)", "CVGauge(N2)(Torr)", "CVGauge(He)(Torr)", 
            "CellTemp(Res)", "CellTemp(Targ)", "MagnitudeOfCurrent(*10^-X)", 
            "Currentplot", "N2Offset", "filBias", "CurrentonsetEnergy", 
            "CurrentonsetWidth", "CurrentlowEnergySignal", 
            "CurrenthighEnergySignal"}, {
            TypeSystem`Atom[Graphics], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Graphics], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 2], "HandleQ" -> True, "RowTarget" -> 20,
         "Data" -> TypeSystem`PackageScope`CacheHandle[115251368]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CountRateplot\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CountRateplot\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CountRateplot"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CountRateplot"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CountRateonsetEnergy\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CountRateonsetEnergy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CountRateonsetEnergy"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CountRateonsetEnergy"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CountRateonsetWidth\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CountRateonsetWidth\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CountRateonsetWidth"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CountRateonsetWidth"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CountRatelowEnergySignal\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CountRatelowEnergySignal\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CountRatelowEnergySignal"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CountRatelowEnergySignal"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CountRatehighEnergySignal\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CountRatehighEnergySignal\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CountRatehighEnergySignal"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CountRatehighEnergySignal"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Filename\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Filename\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "Filename"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "Filename"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"USB1208->HP3617Aconversion\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"USB1208->HP3617Aconversion\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "USB1208->HP3617Aconversion"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "USB1208->HP3617Aconversion"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FilamentBias\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FilamentBias\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "FilamentBias"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "FilamentBias"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NumberOfSecondsPerCountMeasurement\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NumberOfSecondsPerCountMeasurement\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "NumberOfSecondsPerCountMeasurement"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                  All, "NumberOfSecondsPerCountMeasurement"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Comments\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Comments\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "Comments"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "Comments"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IonGauge(Torr)\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IonGauge(Torr)\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "IonGauge(Torr)"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "IonGauge(Torr)"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CVGauge(N2)(Torr)\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CVGauge(N2)(Torr)\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CVGauge(N2)(Torr)"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CVGauge(N2)(Torr)"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CVGauge(He)(Torr)\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CVGauge(He)(Torr)\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CVGauge(He)(Torr)"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CVGauge(He)(Torr)"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CellTemp(Res)\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CellTemp(Res)\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CellTemp(Res)"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CellTemp(Res)"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CellTemp(Targ)\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CellTemp(Targ)\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CellTemp(Targ)"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CellTemp(Targ)"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MagnitudeOfCurrent(*10^-X)\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MagnitudeOfCurrent(*10^-X)\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "MagnitudeOfCurrent(*10^-X)"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "MagnitudeOfCurrent(*10^-X)"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Currentplot\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Currentplot\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "Currentplot"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "Currentplot"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"N2Offset\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"N2Offset\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "N2Offset"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "N2Offset"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"filBias\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"filBias\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "filBias"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "filBias"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentonsetEnergy\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentonsetEnergy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CurrentonsetEnergy"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CurrentonsetEnergy"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentonsetWidth\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentonsetWidth\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CurrentonsetWidth"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CurrentonsetWidth"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentlowEnergySignal\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentlowEnergySignal\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CurrentlowEnergySignal"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CurrentlowEnergySignal"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrenthighEnergySignal\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrenthighEnergySignal\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    All, "CurrenthighEnergySignal"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[All, "CurrenthighEnergySignal"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    "/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat", 
                    Style[
                    "/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat", 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    Key[
                    "/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                   GeneralUtilities`Slice[
                    Key[
                    "/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"]]], 
                  "Mouse"], 
                 ImageSize -> {{480.00000000000006`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{}, {{{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], FontSize -> 24, 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]], 
                    AbsolutePointSize[6]], 
                    GeometricTransformationBox[
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> 20, StripOnInput -> 
                    False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYC4hl5Qs0HVqk4MICAQ6DDtbA3+rvV1aD8AIdF
W8x/HFqiDuEzBDrkA5WfUtSE8oMc1v6KyT06TwvCbwhwqIxYYXpWWgfCPxDk
4Lbt898rM3Sh5oU4tMw7u+q8qD6UH+ugUdezM9vTAMpPc3Av+sn/kt0Qqj/P
QVdR/kvOMSifIdtB5ILLjQ8tRhD+g0wH4yMb9fKcjaH6Mxwki68LfWI0gepP
d/iv+Pdb6QEo3yHdQU4sy/dznSlcPevRfsNyWzMIXyHH4XXxVtHfv6H8AwUO
XBlKORW7zCH8C4UOH8Q8Av5UWED4Lxoc+Lm3Lqs0t4TwxZY7fN15q+vvVyj/
5C6HOxkM+Y1brMD8BslDDr+BwfWvyBoiH3TY4SH35JVNhjYQPvMRh+O7dvSy
fYDyVxxxeLZO9UnzOlsI3+Wow5lY7xPsuXYQ/vGjDm8Cd8i1attD+I+OOlxi
uMfE+QrKv3vU4c71xmK3EAeI/dOh6jdD+AxeRx3iNU8LHBdyhMhbQ/UXQfmv
jjg8rBJZ534Ryn93xCEkSH1Bp4ETRH8T0L2aVpNO90P5nkccri8usOV6D+E3
2Bxx8Kpu1vfxc4bw+Y84RIECaC2Ez7D2sMPZM0DA4wLhpxx2AAD7Bss6
                    "]]}, {}}}, {}, {}, {}, {}}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, AxesOrigin -> {9.8683984375, 0}, 
                    PlotRange -> {{10.3335, 40.1}, {0, 11204.}}, 
                    PlotRangeClipping -> True, ImagePadding -> All, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {9.8683984375, 0}, 
                    BaseStyle -> {FontSize -> 24}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{
                    FormBox["\"CountRate\"", TraditionalForm], None}, {
                    FormBox[
                    "\"'Slow' Electron Energy (eV)\"", TraditionalForm], 
                    None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                    GridLines -> {Automatic, Automatic}, GridLinesStyle -> 
                    Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, LabelStyle -> 
                    27, Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox[
                    "\"CountRate vs. Energy: 203423\"", TraditionalForm], 
                    PlotRange -> {{10.3335, 40.1}, {0, 11204.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CountRateplot"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["25.2198"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CountRateonsetEnergy"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00669539"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CountRateonsetWidth"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["69"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CountRatelowEnergySignal"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9928"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CountRatehighEnergySignal"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["Filename"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.031007"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["USB1208->HP3617Aconversion"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-130.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["FilamentBias"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["NumberOfSecondsPerCountMeasurement"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "Current is fairly unstable, but the polarization numbers are \
good., temp=120, prelude", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["Comments"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0000783"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["IonGauge(Torr)"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.284"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CVGauge(N2)(Torr)"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00105"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CVGauge(He)(Torr)"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["120."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CellTemp(Res)"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["120."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CellTemp(Targ)"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["MagnitudeOfCurrent(*10^-X)"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{}, {{{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], FontSize -> 24, 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]], 
                    AbsolutePointSize[6]], 
                    GeometricTransformationBox[
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> 20, StripOnInput -> 
                    False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYC4hl5Qs0HVqk4FLzOm/dqwnb7a2Fv9HerqznE
MLZW/eLYYb9oi/mPQ0vUHdhuyQbxTNhhnw9UfkpR02Exux2btt9O+7W/YnKP
ztNy6JcNeWR1bKd9ZcQK07PSOg5NRbf3uf/dae+27fPfKzN0HQSUJItybHfb
t8w7u+q8qL6DR9bClKKs3fYadT07sz0N4PLuRT/5X7IbOtiVrgmqWrbbXldR
/kvOMUOHsr9Ndzfk7rUXueBy40OLkcOSALF9+67ttTc+slEvz9nYQfO0wPFd
O/baSxZfF/rEaOLw+Ei4dVfxHvv/in+/lR4wcXDIrvuz1HWvvZxYlu/nOlOH
RyzLLu/i3WfPerTfsNzWzKH7rt3qM1P22b8u3ir6+7eZQ1uhece1rn32XBlK
ORW7zB3cXtlOvTxvn/0HMY+APxUWDozfbepvrdhnz8+9dVmluSXcvK87b3X9
/Wrp8ObnrKebLu61v5PBkN+4xcphOdus8ztv77X/DQyuf0XWDtWZXQzLy/fa
P+SevLLJ0MYhJDRDYdrZPfZAT/SyfbBxEJR4LT3jzh77Z+tUnzSvs3U4o/KK
df6zPfZnYr1PsOfaOUy5kyg8c+ce+zeBO+Rate0dPuo3HfNZtMv+EsM9Js5X
9g6XpJr9OGR32N+53ljsFuLgoLLzT/uX29sh6jc7OOSZvu55373dPh4UcEKO
Dk9ddnNp2u+E6C9ydLg50+m5adlO+4dVIuvcLzo6hF09/d5k5k77kCD1BZ0G
Tg5ciyNv2j3ZaX9c02rS6X4nePxfX1xgy/XeycF/WtR781s77b2qm/V9/Jwd
GjdphldM320fBQqgtc4O5XtNXBsu77Y/ewYIeFwcTBq2OzQ92m0PAKMDOAs=

                    "]]}, {}}}, {}, {}, {}, {}}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {9.8683984375, 0.09058975000000001}, 
                    PlotRange -> {{10.3335, 40.1}, {0.091979, 0.119764}}, 
                    PlotRangeClipping -> True, ImagePadding -> All, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {9.8683984375, 0.09058975000000001}, 
                    BaseStyle -> {FontSize -> 24}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{
                    FormBox["\"Current\"", TraditionalForm], None}, {
                    FormBox[
                    "\"'Slow' Electron Energy (eV)\"", TraditionalForm], 
                    None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                    GridLines -> {Automatic, Automatic}, GridLinesStyle -> 
                    Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, LabelStyle -> 
                    27, Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox[
                    "\"Current vs. Energy: 203423\"", TraditionalForm], 
                    PlotRange -> {{10.3335, 40.1}, {0.091979, 0.119764}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["Currentplot"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["100."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["N2Offset"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-130.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["filBias"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.0313"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CurrentonsetEnergy"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.43181"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CurrentonsetWidth"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.092055"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CurrentlowEnergySignal"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.108925"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_203423.dat"], 
                   Key["CurrenthighEnergySignal"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    "/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat", 
                    Style[
                    "/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat", 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][{
                    Key[
                    "/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                   GeneralUtilities`Slice[
                    Key[
                    "/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"]]], 
                  "Mouse"], 
                 ImageSize -> {{480.00000000000006`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{}, {{{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], FontSize -> 24, 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]], 
                    AbsolutePointSize[6]], 
                    GeometricTransformationBox[
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> 20, StripOnInput -> 
                    False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYC4hl5Qs0HVqk4MIDAgSCHa2Fv9Herq0H4DYEO
i7aY/zi0RB3KD3HIByo/pagJVR/ssPZXTO7ReVpQfohDZcQK07PSOhC+Q6iD
27bPf6/M0IXyox1a5p1ddV5UH8JPSHDQqOvZme1pAJXPdnAv+sn/kt0Qyi90
0FWU/5JzDMoPKHAQueBy40OLEYTPkO9gfGSjXp6zMYSvkOUgWXxd6BOjCYT/
IMvhv+Lfb6UHoHyHDAc5sSzfz3WmcPtYj/YbltuaQf2X7/C6eKvo799Q/oVi
B64MpZyKXeYQvkG5wwcxj4A/FRYQ/oo2B37urcsqzS0hfL0NDl933ur6+xXK
lz7ocCeDIb9xixWEz3nc4TcwuP4VWYP5DY9OOjzknryyydAGqv+0w/FdO3rZ
PkD4DT1nHJ6tU33SvM4WIs971uFMrPcJ9lw7iHzNWYc3gTvkWrXtIfJlZx0u
Mdxj4nwF4TfUnnW4c72x2C3EASK/DKp+M4TfsPysQ7zmaYHjQo4QeY5zEP1F
EH7D7LMOD6tE1rlfhMqfPOsQEqS+oNPACSIfe9bhuKbVpNP9ED4D81mH64sL
bLneQ/kfzjh4VTfr+/g5Q/iLzjhEgQJoLYTfcPqMw9kzQMDjAuFbn3EAAJYS
zMk=
                    "]]}, {}}}, {}, {}, {}, {}}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, AxesOrigin -> {9.8683984375, 0}, 
                    PlotRange -> {{10.3335, 40.1}, {0, 15376.}}, 
                    PlotRangeClipping -> True, ImagePadding -> All, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {9.8683984375, 0}, 
                    BaseStyle -> {FontSize -> 24}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{
                    FormBox["\"CountRate\"", TraditionalForm], None}, {
                    FormBox[
                    "\"'Slow' Electron Energy (eV)\"", TraditionalForm], 
                    None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                    GridLines -> {Automatic, Automatic}, GridLinesStyle -> 
                    Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, LabelStyle -> 
                    27, Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox[
                    "\"CountRate vs. Energy: 233539\"", TraditionalForm], 
                    PlotRange -> {{10.3335, 40.1}, {0, 15376.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CountRateplot"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["25.2157"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CountRateonsetEnergy"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000785904"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CountRateonsetWidth"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CountRatelowEnergySignal"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14455"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CountRatehighEnergySignal"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["Filename"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.031007"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["USB1208->HP3617Aconversion"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-130.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["FilamentBias"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["NumberOfSecondsPerCountMeasurement"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "Current is fairly unstable, but the polarization numbers are \
good., temp=120, postscript", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["Comments"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0000802"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["IonGauge(Torr)"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.284"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CVGauge(N2)(Torr)"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0011"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CVGauge(He)(Torr)"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["120."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CellTemp(Res)"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["120."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CellTemp(Targ)"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["MagnitudeOfCurrent(*10^-X)"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[{{}, {{{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], FontSize -> 24, 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]], 
                    AbsolutePointSize[6]], 
                    GeometricTransformationBox[
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> 20, StripOnInput -> 
                    False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxFkHlI0wEcxadDzQMXw0lmaYvMzdR5T831/c7ZLEszsbS0JNGSvGIqapJ4
FWSmoebZTEykZg4kDY+o336/zXktrcxFSahpUUpJHpRHNSnoweePB+/B47Fj
U8Pi6TQajatDT4e+jpoUZiEh24NRVzJONFoqYPzkPK/Xfi9uNWzIYVQT0NTB
/0E222NS+7sLt2sJSNXFB9lcbBmz+7BtgIC21ehkVYMDGnh9mqwdJSA78r6n
xtoRA9PiZqsVBIgfL26M1TiheaLDDdKZhKIGjWyExcMhp7ZrSgEJnNyS7sTD
Lmja2ZKt5pIQKPnJ+Gzkisc0s4ainSQ4sW2Xkvr+e4vRgDcLRW5oditB/6Aj
Ce7KducUkTsml0gXmHcIsErTMr/reWBe77xW+pWA3+yNlQzCA+XmeV2tEQqw
sbwYvJjriYNum0UFGKjKXDMFXkgIRu56yRQwl9bJWlvzwvQ5TwGHowCThN1J
WT18FNc0RW9/RsCC5aHQ9SxvdHSYTi9vI4CxOZzvg/Qou8gdzwlY7n5bvLHs
g+vWHRG2DAVMJNBS8zt8kTVIarU9JKzp7vol2Y/NHvXqcy4UTJlWPChw9UPb
nsan8SEUqHu6bhou+CFL1fowuZiCj3K7mUK5AIPdJJYrHRQMnznSb5R8AAfK
faoyX1Mwf7zL5uo+wF112ZLgfBJe0t7rG38BLE03FJ8dJ2FCm58mDkfsrw5V
TBn8yz9CpFdFq6b5FMRwh7aqmULkuSdVLtdTf/sSIRqvmgpil0iYumwhD3wh
RM7Yq8BJBgXhYfaN1138Uf2k1DuOrtvL9S0fKvPHAQkzKGYLBdp7lwQm3/wx
RljXnuBLQVBOIe9oiAjPE6eCqiqUcHrzoDYRFsxIRVYyJWiGdTILwL71idFK
qRL+ALvpMrk=
                    "]]}, {}}}, {}, {}, {}, {}}, {
                   PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                    GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                    None, ImageSize -> 96, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, AxesOrigin -> {9.8683984375, 0.12801845}, 
                    PlotRange -> {{10.3335, 40.1}, {0.12961, 0.161441}}, 
                    PlotRangeClipping -> True, ImagePadding -> All, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {9.8683984375, 0.12801845}, 
                    BaseStyle -> {FontSize -> 24}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{
                    FormBox["\"Current\"", TraditionalForm], None}, {
                    FormBox[
                    "\"'Slow' Electron Energy (eV)\"", TraditionalForm], 
                    None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                    GridLines -> {Automatic, Automatic}, GridLinesStyle -> 
                    Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, LabelStyle -> 
                    27, Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                    FormBox[
                    "\"Current vs. Energy: 233539\"", TraditionalForm], 
                    PlotRange -> {{10.3335, 40.1}, {0.12961, 0.161441}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["Currentplot"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["100."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["N2Offset"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-130.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["filBias"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["26.0299"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CurrentonsetEnergy"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.419658"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CurrentonsetWidth"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.133503"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CurrentlowEnergySignal"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.161059"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
                  GeneralUtilities`Slice[
                   Key["/home/pi/RbData/2018-02-14/EX2018-02-14_233539.dat"], 
                   Key["CurrenthighEnergySignal"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 256812103]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[256812103][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {4169., {170.5, 177.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7314268265942583`*^9, {3.7314272323314013`*^9, 3.7314272734631357`*^9}, 
   3.7314273596667943`*^9, {3.7314274600612297`*^9, 3.7314274824954634`*^9}, {
   3.731427525961215*^9, 3.731427551899432*^9}, 3.731427603567114*^9, {
   3.7314276438716035`*^9, 3.7314276631031084`*^9}, 3.7314277520530834`*^9, 
   3.7314277851202726`*^9, {3.7314278809117594`*^9, 3.731427891012649*^9}, 
   3.731427942214254*^9},ExpressionUUID->"76314eea-66d5-444f-a633-\
bc2aecaa9a68"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prints out the comments from all of the file names.", "Section",
 CellChangeTimes->{{3.7265756274465637`*^9, 
  3.7265756439185686`*^9}},ExpressionUUID->"30e6d843-e4bc-419a-92b4-\
dcc4890258b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "files", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"comments", "=", 
      RowBox[{
       RowBox[{"GetFileHeaderInfo", "[", 
        RowBox[{"files", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", "\"\<#Comments:\>\"", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"files", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\< -> \>\"", "<>", 
       "comments"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7239944708657446`*^9, 3.72399473733051*^9}, {
   3.723994827556519*^9, 3.7239948282355194`*^9}, 3.7257683501376047`*^9, {
   3.7264214372179785`*^9, 3.72642150079615*^9}, {3.7264215660264435`*^9, 
   3.7264216379072547`*^9}, {3.7264217284777536`*^9, 3.72642179291651*^9}, {
   3.7264218354293776`*^9, 3.7264218390838594`*^9}, {3.7264220283263617`*^9, 
   3.72642212241325*^9}, {3.7264222031010394`*^9, 3.72642224436506*^9}, {
   3.726422382897127*^9, 3.726422477128113*^9}, {3.726422611035041*^9, 
   3.726422612214842*^9}, {3.726422653425825*^9, 3.726422656590975*^9}, 
   3.72650027497077*^9, {3.7265756029351873`*^9, 3.7265756216149406`*^9}, {
   3.728094058799531*^9, 3.7280940960048685`*^9}, {3.7280941503518524`*^9, 
   3.728094173056327*^9}},ExpressionUUID->"7ff87e15-3225-4ce8-baa4-\
b166d790ddda"],

Cell[CellGroupData[{

Cell[BoxData["\<\"EX2018-02-13_013554.dat -> does it work here?\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941735094604`*^9}},ExpressionUUID->"612383ce-e300-4619-a4f6-\
a8ccffb8a2d2"],

Cell[BoxData["\<\"EX2018-02-13_014854.dat -> Script Test for exFn and \
electron pol., temp=100, run=1\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941735250835`*^9}},ExpressionUUID->"16e7062a-5d99-42ab-abb0-\
6ce4dfbeea3c"],

Cell[BoxData["\<\"EX2018-02-13_023109.dat -> Testing to make sure the \
negative he target is okay.\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941735407095`*^9}},ExpressionUUID->"fd3711ac-93bf-402e-9398-\
2583c78941a3"],

Cell[BoxData["\<\"EX2018-02-13_023357.dat -> One more run to get the RFA \
piece in\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941735719604`*^9}},ExpressionUUID->"059488fb-27fe-40a5-be85-\
1d23b4547b53"],

Cell[BoxData["\<\"EX2018-02-13_050758.dat -> Extended run, at increasing \
temps., temp=100, run=1, prelude\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941735875883`*^9}},ExpressionUUID->"d0b3c2db-cd69-4443-a406-\
189cc86128b5"],

Cell[BoxData["\<\"EX2018-02-13_170321.dat -> Measuring polarization etc. at \
the end of the aborted run., temp=100, run=1, postscript\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941736032143`*^9}},ExpressionUUID->"69aa7057-a7b6-4fdc-a503-\
0b0675d58931"],

Cell[BoxData["\<\"EX2018-02-13_173556.dat -> Primary increase in current came \
from adjusting sweep potential\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941736344643`*^9}},ExpressionUUID->"ac2dbae1-a84a-4f1b-bb39-\
66fc818442ec"],

Cell[BoxData["\<\"EX2018-02-13_174047.dat -> RFA\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.728094173650091*^9}},ExpressionUUID->"17b5a7ea-63a3-458a-a91a-\
de4bc7264af3"],

Cell[BoxData["\<\"EX2018-02-13_182224.dat -> Faster extended data run, \
temp=105, prelude\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.728094173681342*^9}},ExpressionUUID->"b56613fb-6582-4a4c-9ae2-\
ea5736457982"],

Cell[BoxData["\<\"EX2018-02-13_230939.dat -> Faster extended data run, \
temp=105, postscript\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.728094173696968*^9}},ExpressionUUID->"2fd0d202-e4ed-4f7d-b168-\
e9ecabdc8469"],

Cell[BoxData["\<\"EX2018-02-13_233300.dat -> Faster extended data run, \
temp=110, prelude\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941737282214`*^9}},ExpressionUUID->"a5dc66c6-5264-48f4-9025-\
dc39f81b5366"],

Cell[BoxData["\<\"EX2018-02-14_042016.dat -> Faster extended data run, \
temp=110, postscript\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.728094173743847*^9}},ExpressionUUID->"0d2285c6-aa13-4804-8965-\
a3ace38318c5"],

Cell[BoxData["\<\"EX2018-02-14_044342.dat -> Faster extended data run, \
temp=115, prelude\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941737750993`*^9}},ExpressionUUID->"36a774b5-b248-47d8-aa8f-\
4d6eee41128a"],

Cell[BoxData["\<\"EX2018-02-14_093056.dat -> Faster extended data run, \
temp=115, postscript\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941737750993`*^9}},ExpressionUUID->"2edcfe00-a401-4de6-9bef-\
2a0c6f4eefd5"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,409,68,20123486700154607583,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.728094025672542*^9, {3.728094163071337*^9, 
   3.7280941738376026`*^9}},ExpressionUUID->"4b0d9e38-0f3f-4666-969b-\
1fbf2bf1cbd0"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin","string",
   "\"String expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"EX2018-02-14_113518.dat -> \\\\\\\"\\\", \
\\\"<>\\\", RowBox[{\\\"Missing\\\", \\\"[\\\", RowBox[{\\\"\\\\\\\"KeyAbsent\
\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"#Comments:\\\\\\\"\\\"}], \
\\\"]\\\"}]}]\\).\"",2,409,69,20123486700154607583,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.728094025672542*^9, {3.728094163071337*^9, 
   3.728094173868855*^9}},ExpressionUUID->"e44a236c-59a1-454d-9dc3-\
2515925989a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\<\"EX2018-02-14_113518.dat -> \"\>", "<>", 
  RowBox[{"Missing", "[", 
   RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"#Comments:\"\>"}], "]"}]}]], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.728094173868855*^9}},ExpressionUUID->"44744bfb-17bc-439d-903a-\
11f60f4f2441"],

Cell[BoxData["\<\"EX2018-02-14_120100.dat -> Dark Counts Background (He just \
turned off, deflector preventing electrons from reaching target, room lights \
on, now probe beam is unblocked., temp=100, prelude\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.728094173868855*^9}},ExpressionUUID->"5884b6b2-936b-47c7-b11b-\
b4074fb29d60"],

Cell[BoxData["\<\"EX2018-02-14_131606.dat -> Moly Counts Background (He off, \
room lights on), temp=100, prelude\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.728094173868855*^9}},ExpressionUUID->"13e333e6-707b-4c6b-9789-\
72323703b5ca"],

Cell[BoxData["\<\"EX2018-02-14_141849.dat -> Moly Counts Background (He off, \
room lights on), rerun- i suspect residual helium in the chamber on the \
previous run, temp=100, prelude\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.728094173868855*^9}},ExpressionUUID->"68a30afb-25ee-4eb3-995c-\
a5c7fcc30f3f"],

Cell[BoxData["\<\"EX2018-02-14_162159.dat -> Current is fairly unstable, but \
the polarization numbers are good., temp=115, prelude\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941738844795`*^9}},ExpressionUUID->"7fdaa5dc-b96f-4b04-8f62-\
80bf6012355a"],

Cell[BoxData["\<\"EX2018-02-14_192323.dat -> Current is fairly unstable, but \
the polarization numbers are good., temp=115, postscript\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941739313593`*^9}},ExpressionUUID->"bf8dd4a3-1fb5-43bb-a063-\
5def59aa9fe7"],

Cell[BoxData["\<\"EX2018-02-14_203423.dat -> Current is fairly unstable, but \
the polarization numbers are good., temp=120, prelude\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.7280941739313593`*^9}},ExpressionUUID->"cfcf75c0-eb0b-4577-962a-\
c4281bcf2f0e"],

Cell[BoxData["\<\"EX2018-02-14_233539.dat -> Current is fairly unstable, but \
the polarization numbers are good., temp=120, postscript\"\>"], "Print",
 CellChangeTimes->{
  3.726495336113208*^9, 3.728094025235015*^9, {3.728094163086963*^9, 
   3.728094173978238*^9}},ExpressionUUID->"0c097fab-7937-4dbb-ba03-\
ffd3006355c0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Shows Graphs for the normalization process of the excitation function\
\>", "Section",
 CellChangeTimes->{{3.7265756503909883`*^9, 
  3.7265756804465055`*^9}},ExpressionUUID->"a8b8c20c-6d29-4300-b6a6-\
0df3b707e269"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataFolderDate", "=", "\"\<18-02-13\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"darkTimeStamp", "=", "\"\<120100\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"darkData", "=", 
   RowBox[{"GetFileDataset", "[", 
    RowBox[{"files", "[", 
     RowBox[{"[", 
      RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
       RowBox[{"files", ",", "darkTimeStamp"}], "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"darkHeader", "=", 
    RowBox[{"GetFileHeaderInfo", "[", 
     RowBox[{"files", "[", 
      RowBox[{"[", 
       RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
        RowBox[{"files", ",", "darkTimeStamp"}], "]"}], "]"}], "]"}], "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"molyTimeStamp", "=", "\"\<141849\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"molyData", "=", 
   RowBox[{"GetFileDataset", "[", 
    RowBox[{"files", "[", 
     RowBox[{"[", 
      RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
       RowBox[{"files", ",", "molyTimeStamp"}], "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"molyHeader", "=", 
    RowBox[{"GetFileHeaderInfo", "[", 
     RowBox[{"files", "[", 
      RowBox[{"[", 
       RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
        RowBox[{"files", ",", "molyTimeStamp"}], "]"}], "]"}], "]"}], "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signalTimeStamp", "=", "\"\<192323\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signalData", "=", 
   RowBox[{"GetFileDataset", "[", 
    RowBox[{"files", "[", 
     RowBox[{"[", 
      RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
       RowBox[{"files", ",", "signalTimeStamp"}], "]"}], "]"}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"signalHeader", "=", 
    RowBox[{"GetFileHeaderInfo", "[", 
     RowBox[{"files", "[", 
      RowBox[{"[", 
       RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
        RowBox[{"files", ",", "signalTimeStamp"}], "]"}], "]"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energyOffset", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nA", "=", 
   RowBox[{"1", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "9"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"torrTomTorr", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"darkCounts", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"darkData", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<SecondaryElectronEnergy\>\"", ",", "\"\<CountRate\>\"", ",", 
         "\"\<Current\>\""}], "}"}]}], "]"}], "[", 
     RowBox[{"All", ",", "Values"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energyArray", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "darkCounts", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", "energyOffset"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"darkCountArray", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "darkCounts", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"molyCounts", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"molyData", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<SecondaryElectronEnergy\>\"", ",", "\"\<CountRate\>\"", ",", 
         "\"\<Current\>\""}], "}"}]}], "]"}], "[", 
     RowBox[{"All", ",", "Values"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"molyCountArray", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "molyCounts", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"molyCurrentMag", "=", 
   RowBox[{"molyHeader", "[", "\"\<#MagnitudeOfCurrent(*10^-X):\>\"", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"molyCurrentArrayNa", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "molyCounts", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "*", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "molyCurrentMag"}], ")"}]}], "/", "nA"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"energyArray", ",", "darkCountArray"}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"energyArray", ",", "molyCountArray"}], "}"}], "]"}]}], "}"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"molyDarkSubtracted", "=", 
   RowBox[{"molyCountArray", "-", "darkCountArray"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"molyCurrentNorm", "=", 
    RowBox[{"molyDarkSubtracted", "/", "molyCurrentArrayNa"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signalCounts", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"signalData", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<SecondaryElectronEnergy\>\"", ",", "\"\<CountRate\>\"", ",", 
         "\"\<Current\>\""}], "}"}]}], "]"}], "[", 
     RowBox[{"All", ",", "Values"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signalCountArray", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "signalCounts", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signalEnergyArray", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "signalCounts", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", "energyOffset"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signalCurrentMag", "=", 
   RowBox[{
   "signalHeader", "[", "\"\<#MagnitudeOfCurrent(*10^-X):\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"signalCurrentArrayNa", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", "signalCounts", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "*", 
   RowBox[{
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "signalCurrentMag"}], ")"}]}], "/", 
    "nA"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signalDarkSubtracted", "=", 
   RowBox[{"signalCountArray", "-", 
    RowBox[{"Take", "[", 
     RowBox[{"darkCountArray", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "signalCountArray", "]"}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"signalCurrentNorm", "=", 
  RowBox[{
  "signalDarkSubtracted", "/", 
   "signalCurrentArrayNa"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signalMolySubtracted", "=", 
   RowBox[{"signalCurrentNorm", "-", 
    RowBox[{"Take", "[", 
     RowBox[{"molyCurrentNorm", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "signalCountArray", "]"}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"signalHeNorm", "=", 
    RowBox[{"signalMolySubtracted", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"signalHeader", "[", "\"\<#CVGauge(He)(Torr):\>\"", "]"}], "*",
        "torrTomTorr"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAxisLabel", "=", "\"\<Nominal Electron\\nEnergy (eV)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yAxisLabel", "=", "\"\<Raw Count Rate (Hz)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawCountsPlot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"darkCounts", ",", "None", ",", 
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}]}], "]"}], ",", "\"\<Dark Counts\>\""}], 
        "]"}], ",", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"molyCounts", ",", "None", ",", 
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}]}], "]"}], ",", "\"\<Moly Counts\>\""}], 
        "]"}], ",", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"signalCounts", ",", "None", ",", 
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}]}], "]"}], ",", 
         "\"\<Signal Counts\>\""}], "]"}]}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xAxisLabel", ",", "yAxisLabel"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yAxisLabel", "=", "\"\<Count Rate (Hz)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"molyCountsPlot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"energyArray", ",", "molyCountArray"}], "}"}], "]"}], ",", 
         "\"\<Moly Counts, Raw\>\""}], "]"}], ",", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"energyArray", ",", "molyDarkSubtracted"}], "}"}], "]"}], 
         ",", "\"\<Moly Counts, Dark Subtracted (DS)\>\""}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xAxisLabel", ",", "yAxisLabel"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yAxisLabel", "=", "\"\<Count Rate (Hz)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signalCountsPlot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"energyArray", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"Length", "[", "signalMolySubtracted", "]"}]}], 
               "}"}]}], "]"}], ",", "signalCountArray"}], "}"}], "]"}], ",", 
         "\"\<Signal Counts, Raw\>\""}], "]"}], ",", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"energyArray", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"Length", "[", "signalMolySubtracted", "]"}]}], 
               "}"}]}], "]"}], ",", "signalDarkSubtracted"}], "}"}], "]"}], 
         ",", "\"\<Signal Counts, Dark Subtracted (DS)\>\""}], "]"}]}], "}"}],
      ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xAxisLabel", ",", "yAxisLabel"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "yAxisLabel", "=", "\"\<Count Rate,\\nCurrent Normalized (Hz/nA)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"currentNormalizedPlot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"energyArray", ",", "molyCurrentNorm"}], "}"}], "]"}], 
         ",", "\"\<Moly Counts, Dark Subtracted (DS),\\nCurrent Normalized \
(CN)\>\""}], "]"}], ",", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"energyArray", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"Length", "[", "signalMolySubtracted", "]"}]}], 
               "}"}]}], "]"}], ",", "signalCurrentNorm"}], "}"}], "]"}], ",", 
         "\"\<Signal Counts, DS, CN\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"energyArray", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"Length", "[", "signalMolySubtracted", "]"}]}], 
               "}"}]}], "]"}], ",", "signalMolySubtracted"}], "}"}], "]"}], 
         ",", "\"\<Signal Counts, DS, CN, Moly Subtracted (MS)\>\""}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xAxisLabel", ",", "yAxisLabel"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "molyCurrentNorm", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandardDeviation", "[", "molyCurrentNorm", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullyNormalizedExcitationFunction", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"energyArray", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "signalMolySubtracted", "]"}]}], "}"}]}], 
       "]"}], ",", "signalHeNorm"}], "}"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"dataFolderDate", "<>", "\"\<_exFnRawCounts.png\>\""}], ",", 
    "rawCountsPlot", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"dataFolderDate", "<>", "\"\<_exFnMolyCounts.png\>\""}], ",", 
    "molyCountsPlot", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"dataFolderDate", "<>", "\"\<_exFnSignalCounts.png\>\""}], ",", 
    "signalCountsPlot", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"dataFolderDate", "<>", "\"\<_exFnCurrentNormalized.png\>\""}], 
    ",", "currentNormalizedPlot", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7264222845843697`*^9, 3.7264223184943953`*^9}, {
   3.726422804568404*^9, 3.726422933625038*^9}, {3.726423087803731*^9, 
   3.726423114497857*^9}, {3.72642346495583*^9, 3.7264234711870613`*^9}, {
   3.726423816348504*^9, 3.7264240135333986`*^9}, {3.7264241024297633`*^9, 
   3.726424210151909*^9}, {3.7264242447694163`*^9, 3.7264242676419477`*^9}, {
   3.7264243286073456`*^9, 3.7264244257112827`*^9}, {3.7264245443788605`*^9, 
   3.7264245479683*^9}, {3.726424606628131*^9, 3.726424646008872*^9}, {
   3.7264254479344077`*^9, 3.7264255306045437`*^9}, {3.7264255698852158`*^9, 
   3.72642581061368*^9}, {3.726425843173787*^9, 3.7264258564297895`*^9}, {
   3.7264262783513327`*^9, 3.7264264777908154`*^9}, {3.726426548378747*^9, 
   3.726426642351557*^9}, {3.726427224883117*^9, 3.726427297650528*^9}, {
   3.7264273303477297`*^9, 3.726427336691038*^9}, {3.7264952898851395`*^9, 
   3.726495295459552*^9}, {3.726495353901629*^9, 3.726495363459447*^9}, {
   3.726495661236657*^9, 3.7264956925641356`*^9}, {3.726495821398096*^9, 
   3.726495955326902*^9}, {3.726496009814295*^9, 3.726496056134444*^9}, {
   3.72649627414301*^9, 3.7264963413047104`*^9}, {3.726496395015603*^9, 
   3.726496573519453*^9}, {3.726498695882611*^9, 3.7264986960577297`*^9}, {
   3.7264990629158397`*^9, 3.726499063730392*^9}, {3.726499120963256*^9, 
   3.726499127019377*^9}, {3.7264992402602615`*^9, 3.7264992404994245`*^9}, {
   3.7264995283258696`*^9, 3.726499564814646*^9}, {3.7264996158773193`*^9, 
   3.726499793919215*^9}, {3.726499824761158*^9, 3.726499921454817*^9}, {
   3.7264999765682416`*^9, 3.726499983182732*^9}, 3.7265000524737825`*^9, {
   3.726500086967205*^9, 3.7265000905676503`*^9}, {3.7265001413371243`*^9, 
   3.726500157495097*^9}, {3.7265002530899134`*^9, 3.726500310624981*^9}, {
   3.7265019941692657`*^9, 3.7265019980709143`*^9}, {3.726502029703964*^9, 
   3.726502178647701*^9}, {3.726502238072632*^9, 3.7265024043843465`*^9}, {
   3.7265024350019264`*^9, 3.7265024375769787`*^9}, {3.726502784284212*^9, 
   3.726502825289755*^9}, {3.726502875964772*^9, 3.726502913522438*^9}, {
   3.726502986181625*^9, 3.726502994467459*^9}, {3.7265031296912603`*^9, 
   3.726503134275448*^9}, {3.726503181156532*^9, 3.7265032235156264`*^9}, {
   3.7265032907094355`*^9, 3.726503295259568*^9}, 3.7265034467744007`*^9, {
   3.7265034908306313`*^9, 3.7265035094463444`*^9}, {3.726504793938325*^9, 
   3.726504796746504*^9}, {3.7265048295877943`*^9, 3.7265049546355*^9}, {
   3.726505592736224*^9, 3.726505663719226*^9}, {3.726505725465004*^9, 
   3.7265057264317856`*^9}, {3.726505787351305*^9, 3.726505907272976*^9}, 
   3.7265062396656013`*^9, {3.7265069306195726`*^9, 3.7265069510185933`*^9}, {
   3.7265070865875545`*^9, 3.7265071266752234`*^9}, 3.726507168871224*^9, {
   3.7265123698194733`*^9, 3.7265123779763713`*^9}, 3.7265124581151333`*^9, {
   3.7265125588159513`*^9, 3.7265125707596827`*^9}, {3.726512626279723*^9, 
   3.72651270895142*^9}, {3.72651763022425*^9, 3.7265176910380044`*^9}, {
   3.7265754129881496`*^9, 3.7265754146646767`*^9}, 3.7265755835788774`*^9, {
   3.726575706791494*^9, 3.7265757594328113`*^9}, {3.728094183431943*^9, 
   3.7280942233718185`*^9}, {3.7280942737654405`*^9, 3.728094298391906*^9}, {
   3.7280946399762554`*^9, 3.728094646695466*^9}, {3.728094798907943*^9, 
   3.7280948025018864`*^9}, {3.728094884506783*^9, 
   3.7280948983044624`*^9}},ExpressionUUID->"9bbeffab-e8a9-4283-9238-\
39ca9142d2b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2064.7599999999998`", ",", "2112.08`", ",", "2067.81`", ",", 
   "2034.9900000000002`", ",", "2032.7`", ",", "2022.01`", ",", "2025.07`", 
   ",", "2025.07`", ",", "2051.78`", ",", "2086.13`", ",", "2060.94`", ",", 
   "2022.01`", ",", "2006.75`", ",", "2075.4500000000003`", ",", "2047.97`", 
   ",", "2038.0400000000002`", ",", "2025.8300000000002`", ",", 
   "2007.5100000000002`", ",", "1993.01`", ",", "1916.68`", ",", "1905.23`", 
   ",", "1882.3300000000002`", ",", "1902.9399999999998`", ",", 
   "1839.5800000000002`", ",", "1857.9`", ",", "1854.8500000000001`", ",", 
   "1799.1299999999999`", ",", "1737.3`", ",", "1705.24`", ",", 
   "1711.3500000000001`", ",", "1673.9399999999998`", ",", 
   "1646.4599999999998`", ",", "1607.5400000000002`", ",", "1569.37`", ",", 
   "1544.9399999999998`", ",", "1477.77`", ",", "1453.35`", ",", 
   "1412.8899999999999`", ",", "1377.7800000000002`", ",", "1331.98`", ",", 
   "1303.74`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7280946327257752`*^9, 3.7280946522114325`*^9}, 
   3.7280948032206774`*^9, 
   3.7280948997264185`*^9},ExpressionUUID->"3e50782a-4992-4419-9aed-\
30776da81bd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.366706057846919`", ",", "9.345763418052346`", ",", "9.599528003056374`", 
   ",", "9.838868987071187`", ",", "9.856348698775028`", ",", 
   "9.997477757281121`", ",", "9.966569056872109`", ",", "9.989284321035816`",
    ",", "9.887512306387624`", ",", "9.695464808041685`", ",", 
   "9.786311100759846`", ",", "9.974233559675767`", ",", 
   "10.082969976329887`", ",", "9.703919631887059`", ",", 
   "9.726704981029995`", ",", "9.62149908735844`", ",", "9.3038408948431`", 
   ",", "8.92149976836977`", ",", "8.081243947596851`", ",", 
   "6.066218669783166`", ",", "2.702560845672176`", ",", 
   "0.45422428585848384`", ",", "0.22544063396638886`", ",", 
   "0.19080442274867088`", ",", "0.1560902093761774`", ",", 
   "0.12346011806884655`", ",", "0.12228132486257248`", ",", 
   "0.12375525240315431`", ",", "0.11669911566700289`", ",", 
   "0.1308908171911064`", ",", "0.1505430302161368`", ",", 
   "0.1664176475590054`", ",", "0.1113502618908394`", ",", 
   "0.06053384479122196`", ",", "0.03236371639028053`", ",", 
   "0.022330944598956536`", ",", "0.012385179069047373`", ",", 
   "0.018401998740170858`", ",", "0.02249996370973595`", ",", 
   "0.019519812609798945`", ",", "0.01840857839753325`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7280946327257752`*^9, 3.7280946522114325`*^9}, 
   3.7280948032206774`*^9, 
   3.7280948997264185`*^9},ExpressionUUID->"69784559-5734-4128-a4bc-\
4d70274f17a1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontSize -> 24, 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 20, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYC4rNngIDHxYEBBBo8HKK+7rzVtdYZyvd38Kpu
1vfxg/G9HK4vLrDleu8E4TN4ORzXtJp0uh/G93EICVJf0GmAkH9YJbLO/aIj
VL+bwyWGe0ycRTC+p0O85mmB40KOcPVvAnfItW52gPK9He5cbyx2C3GA2w/W
/8oe7l6wem0Y39vhTKz3CfZcO6h+P4dn61SfNK+zhfLdHY7v2tHL9sEGbv5D
7skrmwxt4Ob/jsk9+q/IGu7eOxkM+Y1brOD+AwXP36+WUHk/B37urcsqzaF8
Bl+HD2IeAX8qLODmcWUo5VTsMofKezi8Lt4q+vu3Gdy/rEf7DcttEXw5sSzf
z3WmcP3/Ff9+Kz1gAnevZPF1oU+MML6bg/GRjXp5zsZw/SIXXG58aDGCh4+u
ovyXnGOGcPPci37yv2Q3hMtr1PXszPY0gOr3dGiZd3bVeVF9ePy4bfv898oM
Xbj6yogVpmeldeDya38BA2yeFjx88oWaD5xS1IS7Z9EW8x+HlqjD9V8Le6O/
W10Nyvd1mJEH1LBKBe4+AHM9tOU=
         "]]}, 
       TagBox[{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], FontSize -> 24, 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledSquare]\"", FontSize -> 20, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYC4rNngIDHxYEBBHY0OkR93Xmra60zhG/Q5OBV
3azv4wflWzQ6XF9cYMv13gnC52hxOK5pNel0P5T/o8UhJEh9QacBlP+g1uFh
lcg694uOEH5CjcMlhntMnEVQ/oFqh3jN0wLHhWDyVQ5vAnfItW52gPAdqhzu
XG8sdguB8h9UQvS/sofwBSoh6rVh/BqHM7HeJ9hz7SD8glKHZ+tUnzSvs4Xw
FxQ7HN+1o5ftgw3UvEKHh9yTVzYZQvkLChx+x+Qe/VdkDZXPc7iTwZDfuMUK
wm/IcQAFz9+vllD3ZTvwc29dVmkO5TdkOnwQ8wj4U2EB5Wc5cGUo5VTsMoea
l+nwunir6O/fZlB+ogPr0X7DclsoXyHJQU4sy/dznSk0PBIc/iv+/VZ6wARq
X4KDZPF1oU+MUP6BOAfjIxv18pyNofYlOIhccLnxocUI6p9EB11F+S85xwyh
6pMd3It+8r9kh/IfZDho1PXszPY0gPAZUh1a5p1ddV5UH8qPcHDb9vnvlRm6
UH6QQ2XECtOz0jpw/tpfwACbpwW138MhX6j5wClFTai8n8OiLeY/Di1Rh7o/
wOFa2Bv93epqcPkZeUANq1Sg+n0dAMUTwTo=
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$129191, {1}}]& ], 
       TagBox[{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], FontSize -> 24, 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledDiamond]\"", FontSize -> 20, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYC4rNngIDHxQHIZHB4f8kh6uvOW11rncH8hrDL
Dl7Vzfo+fhD+gfzLDtcXF9hyvXeCyM+67HBc02rS6X4I/8C8yw4hQeoLOg2g
/FOXHR5Wiaxzv+gI5jMcvOxwieEeE2cRlH/uskO85mmB40IQ/oE7lx3eBO6Q
a93sAJe/c72x2C0Ewm/YD9X/yh7i3n1Q9dpQ/oXLDmdivU+w59pB9O+67PBs
neqT5nW2EP31QPfu2tHL9sEGYp8x0H3ck1c2GUL4DqWXHH7H5B79V2QNke+4
6HAngyG/cYsVxLyJ5x1AwfP3qyWEf+WYAz/31mWV5lB++BaHD2IeAX8qLCD8
hB4HrgylnIpd5hD+hVqH18VbRX//NoPwDSodWI/2G5bbQvkJpQ5yYlm+n+tM
IfwFhQ7/Ff9+Kz1gAuErFDpIFl8X+sQI5RsUOBgf2aiX52wM1Z/vIHLB5caH
FiMIX6DQQVdR/kvOMUMov9jBvegn/0t2KN+gxEGjrmdntqcB1L4ch5Z5Z1ed
F9WH8B2SHNy2ff57ZYYuhH8gwqEyYoXpWWkdCJ8h1GHtL2CAzdOC8BuCHPKF
mg+cUtSE8oMdFm0x/3FoiTpUfYjDtbA3+rvV1aDmhzrMyANqWKUC5Qc7AAC8
PNK3
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$129191, {
          2}}]& ], {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {9.8683984375, 0}, 
     PlotRange -> {{10.3335, 40.1}, {0, 2192.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Nominal Electron\\nEnergy (eV)\"", TraditionalForm], 
       FormBox["\"Raw Count Rate (Hz)\"", TraditionalForm]}, 
     AxesOrigin -> {9.8683984375, 0}, BaseStyle -> {FontSize -> 24}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, LabelStyle -> 27, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{10.3335, 40.1}, {0, 2192.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Dark Counts\"", "\"Moly Counts\"", "\"Signal Counts\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 24], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 24], FontSize -> 20, 
                    Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 20}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.008499999999999994] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 24], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 24], FontSize -> 20, 
                    Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 20}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.008499999999999994] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 24], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 24], FontSize -> 20, 
                    Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 20}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.008499999999999994] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 27, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}]}], "}"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "20"}], "}"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "20"}], "}"}]}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "27"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7280946327257752`*^9, 3.7280946522114325`*^9}, 
   3.7280948032206774`*^9, 
   3.7280948998201733`*^9},ExpressionUUID->"9d6c8f5a-f32d-494c-bb2e-\
afc36169d58e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontSize -> 24, 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 20, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYC4rNngIDHxYEBBHY0OkR93Xmra60zhG/Q5OBV
3azv4wflWzQ6XF9cYMv13gnC52hxOK5pNel0P5T/o8UhJEh9QacBlP+g1uFh
lcg694uOEH5CjcMlhntMnEVQ/oFqh3jN0wLHhWDyVQ5vAnfItW52gPAdqhzu
XG8sdguB8h9UQvS/sofwBSoh6rVh/BqHM7HeJ9hz7SD8glKHZ+tUnzSvs4Xw
FxQ7HN+1o5ftgw3UvEKHh9yTVzYZQvkLChx+x+Qe/VdkDZXPc7iTwZDfuMUK
wm/IcQAFz9+vllD3ZTvwc29dVmkO5TdkOnwQ8wj4U2EB5Wc5cGUo5VTsMoea
l+nwunir6O/fZlB+ogPr0X7DclsoXyHJQU4sy/dznSk0PBIc/iv+/VZ6wARq
X4KDZPF1oU+MUP6BOAfjIxv18pyNofYlOIhccLnxocUI6p9EB11F+S85xwyh
6pMd3It+8r9kh/IfZDho1PXszPY0gPAZUh1a5p1ddV5UH8qPcHDb9vnvlRm6
UH6QQ2XECtOz0jpw/tpfwACbpwW138MhX6j5wClFTai8n8OiLeY/Di1Rh7o/
wOFa2Bv93epqcPkZeUANq1Sg+n0dAMUTwTo=
         "]]}, 
       TagBox[{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], FontSize -> 24, 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledSquare]\"", FontSize -> 20, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYC4rNngIDHxYEBBAwaHKK+7rzVtdYZwrdocPCq
btb38YPyFeodri8usOV67wThZzQ5HNe0mnS6H8q3aHYICVJf0GkA5S+ocnhY
JbLO/aIjhD+h0uESwz0mziIYv8IhXvO0wHEhKF+h3OFN4A651s0OEP6DMoc7
1xuL3UKg/AllEP2v7CF8hjKIem0of0GFw5lY7xPsuXYQ/oZCh2frVJ80r7OF
8A8UOBzftaOX7YMNVH+uw0PuySubDKH8BVkOv2Nyj/4rsobwHTId7mQw5Ddu
sYLwG1IdQMHz96slVH2yAz/31mWV5lC+Q5LDBzGPgD8VFlD3JztwZSjlVOwy
h/NfF28V/f3bDOqeMAfWo/2G5bZQvkO4g5xYlu/nOlOofcEO/xX/fis9YAJ1
b7CDZPF1oU+MUP6BYAfjIxv18pyNofIhDiIXXG58aDGC8sMddBXlv+QcM4Sa
H+XgXvST/yU7lH8gyUGjrmdntqcB1L5Yh5Z5Z1edF9WH8t0c3LZ9/ntlhi7U
PHOHyogVpmeldaB8U4e1v4ABNk8Lypc5kC/UfOCUoiaUr+CwaIv5j0NL1KF8
A4drYW/0d6urQfkf7GfkATWsUoHyJRwA8ru9Nw==
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$129278, {
          1}}]& ], {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {9.8683984375, 0}, 
     PlotRange -> {{10.3335, 40.1}, {-7., 671.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Nominal Electron\\nEnergy (eV)\"", TraditionalForm], 
       FormBox["\"Count Rate (Hz)\"", TraditionalForm]}, 
     AxesOrigin -> {9.8683984375, 0}, BaseStyle -> {FontSize -> 24}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, LabelStyle -> 27, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{10.3335, 40.1}, {-7., 671.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Moly Counts, Raw\"", "\"Moly Counts, Dark Subtracted (DS)\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 24], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 24], FontSize -> 20, 
                    Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 20}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.008499999999999994] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 24], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 24], FontSize -> 20, 
                    Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 20}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.008499999999999994] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 27, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}]}], "}"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "20"}], "}"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "20"}], "}"}]}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "27"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7280946327257752`*^9, 3.7280946522114325`*^9}, 
   3.7280948032206774`*^9, 
   3.728094899898303*^9},ExpressionUUID->"c1cbc23b-a93d-4f41-a3e4-\
ed5f7f718ed5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontSize -> 24, 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 20, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYC4rNngIDHxQHIZHB4f8kh6uvOW11rncH8hrDL
Dl7Vzfo+fhD+gfzLDtcXF9hyvXeCyM+67HBc02rS6X4I/8C8yw4hQeoLOg2g
/FOXHR5Wiaxzv+gI5jMcvOxwieEeE2cRlH/uskO85mmB40IQ/oE7lx3eBO6Q
a93sAJe/c72x2C0Ewm/YD9X/yh7i3n1Q9dpQ/oXLDmdivU+w59pB9O+67PBs
neqT5nW2EP31QPfu2tHL9sEGYp8x0H3ck1c2GUL4DqWXHH7H5B79V2QNke+4
6HAngyG/cYsVxLyJ5x1AwfP3qyWEf+WYAz/31mWV5lB++BaHD2IeAX8qLCD8
hB4HrgylnIpd5hD+hVqH18VbRX//NoPwDSodWI/2G5bbQvkJpQ5yYlm+n+tM
IfwFhQ7/Ff9+Kz1gAuErFDpIFl8X+sQI5RsUOBgf2aiX52wM1Z/vIHLB5caH
FiMIX6DQQVdR/kvOMUMov9jBvegn/0t2KN+gxEGjrmdntqcB1L4ch5Z5Z1ed
F9WH8B2SHNy2ff57ZYYuhH8gwqEyYoXpWWkdCJ8h1GHtL2CAzdOC8BuCHPKF
mg+cUtSE8oMdFm0x/3FoiTpUfYjDtbA3+rvV1aDmhzrMyANqWKUC5Qc7AAC8
PNK3
         "]]}, 
       TagBox[{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], FontSize -> 24, 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledSquare]\"", FontSize -> 20, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYC4rNngIDHxYEBBB5fcoj6uvNW11pnMP+A22UH
r+pmfR8/CL8h6bLD9cUFtlzvnSD83ssOxzWtJp3uh/APTLjsEBKkvqDTAMrf
e9nhYZXIOveLjhD+1ssOlxjuMXEWQfgOBy87xGueFjguBJU/f9nhTeAOudbN
DhDzD1x2uHO9sdgtBMJ32ATV/8oe4t5NUPXaEH7DocsOZ2K9T7Dn2kHkV192
eLZO9UnzOlsIvwTo3l07etk+2EDMUwO6j3vyyiZDCJ8h45LD75jco/+KrCHm
1V50uJPBkN+4xQoiX3reARQ8f79aQuS3HnPg5966rNIcwmeQ3eLwQcwj4E+F
BYS/o8uBK0Mpp2KXOYR/ocrhdfFW0d+/zSD8D6UOrEf7DcttoXyFIgc5sSzf
z3WmEP6CHIf/in+/lR4wgfAbsh0ki68LfWKE8h9kORgf2aiX52wM5Wc4iFxw
ufGhxQjCZ8hx0FWU/5JzzBCqP9/Bvegn/0t2KF+h0EGjrmdntqcBhJ+Q5tAy
7+yq86L6EP6BcAe3bZ//XpmhCzXP06EyYoXpWWkdqHkODmt/AQNsnhZU3sgh
X6j5wClFTSjfymHRFvMfh5aoQ/n2DtfC3ujvVleDy8/IA2pYpQLlWzgAAHlS
0aY=
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$129359, {
          1}}]& ], {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {9.8683984375, 0}, 
     PlotRange -> {{10.3335, 40.1}, {0, 20339.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Nominal Electron\\nEnergy (eV)\"", TraditionalForm], 
       FormBox["\"Count Rate (Hz)\"", TraditionalForm]}, 
     AxesOrigin -> {9.8683984375, 0}, BaseStyle -> {FontSize -> 24}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, LabelStyle -> 27, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{10.3335, 40.1}, {0, 20339.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Signal Counts, Raw\"", "\"Signal Counts, Dark Subtracted (DS)\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 24], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 24], FontSize -> 20, 
                    Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 20}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.008499999999999994] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 24], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 24], FontSize -> 20, 
                    Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 20}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.008499999999999994] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 27, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}]}], "}"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "20"}], "}"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "20"}], "}"}]}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "27"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7280946327257752`*^9, 3.7280946522114325`*^9}, 
   3.7280948032206774`*^9, 
   3.728094899960807*^9},ExpressionUUID->"16bc8660-f3ca-4bf4-ac3c-\
17a2f66a0420"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontSize -> 24, 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 20, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJwBpQJa/SFib1JlAwAAACkAAAABAAAAAgAAAM3MzMzMDERAxiDTJj+zD0Ba
9bnaiq1DQElpBgqONQ9ASnuDL0xOQ0Bozzp2owQLQNejcD0K70JA0JguQFLr
DEDHKTqSy49CQF9ZyoqX2hBAVFInoIkwQkAiwIZB3WwMQOF6FK5H0UFAxper
SmozC0DSAN4CCXJBQCWvu2NwnQlAXynLEMcSQUCiAVc/iKgHQOxRuB6Fs0BA
Wmwc2EnXBkDc14FzRlRAQG8o1b/O0QVA0gDeAgnqP0DJ3g00OJMBQOxRuB6F
Kz9AtGr5aRcyA0DMXUvIB20+QDx+mGzAJQJA5q4l5IOuPUAq60E/FyIBQMe6
uI0G8DxAeKekYkNY/T/hC5OpgjE8QNp5jjRnvfo/+1xtxf5yO0AckGlQJQ35
P9xoAG+BtDpAQlvisyTh8z/1udqK/fU5QOyaAgJP0vE/Dwu1pnk3OUAk9/4N
UTrxP/AWSFD8eDhARe4799nV7z8KaCJseLo3QB/j3aQ3mOw/63O1Ffv7NkA4
MXYcYvznPwXFjzF3PTZA3veUWbZt6D8eFmpN8341QEplRFlzeOQ//yH99nXA
NEA8y7TmDdfjPxlz1xLyATRAei3sKZX+4z8zxLEubkMzQDRbIZXxG+Q/FNBE
2PCEMkDLPOFfZhnnPy0hH/RsxjFAF98Uf/da6j9HcvkP6QcxQGvtD8NMwvI/
KH6MuWtJMEBcgrOxdGrtP4SezarPFS9Au18ETnzq1D9GtvP91JgtQDFiepNO
mMM/eVioNc0bLEAaqAm/tgfFP636XG3FnipAijuBItrbrL9vEoPAyiEpQJix
5CyPL7E/orQ3+MKkJ0Dh4fozAKjBP9ZW7C+7JyZAkI8bRRiNgT+YbhKDwKok
QJ0AUj63Hqo//twpTA==
         "]]}, 
       TagBox[{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], FontSize -> 24, 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledSquare]\"", FontSize -> 20, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJwBpQJa/SFib1JlAwAAACkAAAABAAAAAgAAAM3MzMzMDERALGV75cC7IkBa
9bnaiq1DQEJgGecHsSJASnuDL0xOQ0CeU5xV9TIjQNejcD0K70JA5DJiPICt
I0DHKTqSy49CQPtrLlZztiNAVFInoIkwQkAKBZRntf4jQOF6FK5H0UFAuy6x
I+LuI0DSAN4CCXJBQLuWenmD+iNAXynLEMcSQUD6dlUDaMYjQOxRuB6Fs0BA
rB2c9hNkI0Dc14FzRlRAQJh9XF6XkiNA0gDeAgnqP0A48rq9zvIjQOxRuB6F
Kz9ABcZtCnsqJEDMXUvIB20+QD/vaydoaCNA5q4l5IOuPUBvut6sEnQjQMe6
uI0G8DxAjmXdIDU+I0DhC5OpgjE8QLUTpQiRmyJA+1xtxf5yO0Do1lDRztch
QNxoAG+BtDpAU9qDzpgpIED1udqK/fU5QM1ptNPOQxhADwu1pnk3OUCU5Xw4
2J4FQPAWSFD8eDhAxukzvQIS3T8KaCJseLo3QGqeCRs928w/63O1Ffv7NkAm
oNGBR2zIPwXFjzF3PTZAeow/lMP6wz8eFmpN8341QGxLdxEVm78//yH99nXA
NEDAQDIz1E2/Pxlz1xLyATRAN5/HmWyuvz8zxLEubkMzQMoLQ0X+370/FNBE
2PCEMkC0XJfBB8HAPy0hH/RsxjFAWKO1d/5Ewz9HcvkP6QcxQJog32gsTcU/
KH6MuWtJMEB34Thlc4G8P4SezarPFS9AVd9bx0r+rj9GtvP91JgtQPpQ8h76
kaA/eVioNc0bLED2GPdS7N2WP636XG3FnipATwt0mGZdiT9vEoPAyiEpQHSM
FDv515I/orQ3+MKkJ0Agki0BOwqXP9ZW7C+7JyZAHO4hcwD9kz+YbhKDwKok
QNSnu8iy2ZI/n4ksBA==
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$129441, {1}}]& ], 
       TagBox[{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], FontSize -> 24, 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledDiamond]\"", FontSize -> 20, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJwBpQJa/SFib1JlAwAAACkAAAABAAAAAgAAAM3MzMzMDERA9TmNN+KdFUBa
9bnaiq1DQOCLL8lIxxVASnuDL0xOQ0CIPxvwmOMYQNejcD0K70JAYBmtWFfl
GEDHKTqSy49CQJd+kiFPkhZAVFInoIkwQkADqmQu/MYZQOF6FK5H0UFAk5EM
Ig9EGkDSAN4CCXJBQORVF8FOJhtAXynLEMcSQUAjbf/mi7gbQOxRuB6Fs0BA
KwUqAYNcG0Dc14FzRlRAQPhmzlxHPBxA0gDeAgnqP0AM9W5hARwfQOxRuB6F
Kz9AsNbeX+q7HkDMXUvIB20+QGCfixjwvR1A5q4l5IOuPUBJfxy6GVceQMe6
uI0G8DxAPqERaVkmH0DhC5OpgjE8QPSIJkTIhx5A+1xtxf5yO0DJSYdOVGwd
QNxoAG+BtDpA1h0PcOhaG0D1udqK/fU5QBLDMxM7zxNADwu1pnk3OUAE1Ppi
XwP6P/AWSFD8eDhAYvmhmNhM4b8KaCJseLo3QIR7G15oYeW/63O1Ffv7NkAu
yQE8UOHhvwXFjzF3PTZAwBSFdAVv478eFmpN8341QNx7FbcQheC//yH99nXA
NEBIBp3Aptrfvxlz1xLyATRAkzmzlscI4L8zxLEubkMzQLv5eMzxX+C/FNBE
2PCEMkCeZXtvJOnivy0hH/RsxjFAQXYn4beJ5b9HcvkP6QcxQFgJ9DWnGPC/
KH6MuWtJMEAtZgxFRtrpv4SezarPFS9A0OMY9bIK0b9GtvP91JgtQOWbexeg
576/eVioNc0bLED7xKo0+SvCv636XG3FnipALx9P5JmZsT9vEoPAyiEpQPYc
P7wh86i/orQ3+MKkJ0A6X6qncY29v9ZW7C+7JyZAqEwooehshj+YbhKDwKok
QLMs9NndsaC/AhUwqg==
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$129441, {
          2}}]& ], {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {9.8683984375, 0}, 
     PlotRange -> {{10.3335, 40.1}, {-1.006018839602424, 
      10.082969976329887`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Nominal Electron\\nEnergy (eV)\"", TraditionalForm], 
       FormBox[
       "\"Count Rate,\\nCurrent Normalized (Hz/nA)\"", TraditionalForm]}, 
     AxesOrigin -> {9.8683984375, 0}, BaseStyle -> {FontSize -> 24}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, LabelStyle -> 27, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{10.3335, 40.1}, {-1.006018839602424, 
      10.082969976329887`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Moly Counts, Dark Subtracted (DS),\\nCurrent Normalized (CN)\"", 
       "\"Signal Counts, DS, CN\"", 
       "\"Signal Counts, DS, CN, Moly Subtracted (MS)\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 24], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 24], FontSize -> 20, 
                    Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 20}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.008499999999999994] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 24], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 24], FontSize -> 20, 
                    Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 20}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.008499999999999994] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 24], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 24], FontSize -> 20, 
                    Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 20}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.008499999999999994] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 27, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}]}], "}"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "20"}], "}"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledSquare]\"", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\[FilledDiamond]\"", ",", "20"}], "}"}]}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "27"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7280946327257752`*^9, 3.7280946522114325`*^9}, 
   3.7280948032206774`*^9, 
   3.728094900054561*^9},ExpressionUUID->"6efbc216-0859-4e0b-ad5c-\
949f2f04871c"],

Cell[BoxData["1.6019201900071462`"], "Output",
 CellChangeTimes->{{3.7280946327257752`*^9, 3.7280946522114325`*^9}, 
   3.7280948032206774`*^9, 
   3.728094900070187*^9},ExpressionUUID->"b2a59439-77eb-40bc-a2a1-\
810c01397800"],

Cell[BoxData["1.300909473441811`"], "Output",
 CellChangeTimes->{{3.7280946327257752`*^9, 3.7280946522114325`*^9}, 
   3.7280948032206774`*^9, 
   3.728094900070187*^9},ExpressionUUID->"39ecb3f5-0dad-4da3-a593-\
056d1f16b2ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"40.1`", ",", "4.957966295290234`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39.3558`", ",", "4.995058342756044`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38.6117`", ",", "5.70849825628359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37.8675`", ",", "5.710060561963292`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37.1234`", ",", "5.176954115916885`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36.3792`", ",", "5.912221440388784`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35.635`", ",", "6.0242788787431705`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34.8909`", ",", "6.2269814666689305`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34.1467`", ",", "6.358001087206206`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33.4025`", ",", "6.275544488705371`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32.6584`", ",", "6.476023831584293`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31.9142`", ",", "7.1351825840077625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31.17`", ",", "7.049092894716866`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30.4259`", ",", "6.821546977613505`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29.6817`", ",", "6.958769796519613`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28.9376`", ",", "7.144449952940145`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28.1934`", ",", "7.002385222454235`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27.4492`", ",", "6.748431518106143`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26.7051`", ",", "6.274107618876676`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25.9609`", ",", "4.543462193370347`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25.2167`", ",", "1.4915810914344387`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24.4726`", ",", 
     RowBox[{"-", "0.49599139896949684`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23.7284`", ",", 
     RowBox[{"-", "0.6129730152895032`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22.9843`", ",", 
     RowBox[{"-", "0.5126184211530816`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22.2401`", ",", 
     RowBox[{"-", "0.5571581705581838`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21.4959`", ",", 
     RowBox[{"-", "0.47361772658477885`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20.7518`", ",", 
     RowBox[{"-", "0.45662423938698815`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20.0076`", ",", 
     RowBox[{"-", "0.4596988383443005`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.2634`", ",", 
     RowBox[{"-", "0.4694605305527065`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18.5193`", ",", 
     RowBox[{"-", "0.5421649143134292`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.7751`", ",", 
     RowBox[{"-", "0.6174874434814065`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.0309`", ",", 
     RowBox[{"-", "0.9229530638554349`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16.2868`", ",", 
     RowBox[{"-", "0.7411879223291788`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15.5426`", ",", 
     RowBox[{"-", "0.2442917599395961`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.7985`", ",", 
     RowBox[{"-", "0.11075396558176887`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.0543`", ",", 
     RowBox[{"-", "0.13024492063989715`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.3101`", ",", "0.06307341045372546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.566`", ",", 
     RowBox[{"-", "0.044706374552764744`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.8218`", ",", 
     RowBox[{"-", "0.10590781066086423`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.0776`", ",", "0.010045793006734362`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.3335`", ",", 
     RowBox[{"-", "0.02991469221875369`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7280946327257752`*^9, 3.7280946522114325`*^9}, 
   3.7280948032206774`*^9, 
   3.7280949000858135`*^9},ExpressionUUID->"8cff12eb-b72d-4d30-b098-\
461d2741364d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "20"}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "27"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListPlot", ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "20"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "27"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"960", ",", "600"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotLabel", "=", "\"\<Plot Label\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yAxisLabel", "=", "\"\<Y\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAxisLabel", "=", "\"\<X\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LabelStyle", "\[Rule]", "18"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "plotLabel"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xAxisLabel", ",", "yAxisLabel"}], "}"}]}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
     RowBox[{"files_", ",", "timestamp_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "index"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "files", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", " ", 
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "timestamp"}], "]"}], ",", 
           RowBox[{"index", "=", "i"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "index"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFileHeaderInfo", "[", "dataFileName_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawFile", ",", "data", ",", "association", ",", "k", ",", "rawImport", 
       ",", "removedNulls", ",", "joinedWithSpaces"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rawFile", "=", 
       RowBox[{"Import", "[", "dataFileName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"data", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"association", "=", 
       RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringPart", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"rawFile", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "\[Equal]", 
         "\"\<#\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"rawFile", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], ">", " ", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"rawImport", "=", 
             RowBox[{"Take", "[", 
              RowBox[{
               RowBox[{"rawFile", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"removedNulls", "=", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"rawImport", ",", "Null"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"joinedWithSpaces", "=", 
             RowBox[{"StringRiffle", "[", "removedNulls", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"association", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"association", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"rawFile", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
                "joinedWithSpaces"}]}], "]"}]}], ";"}], "\[IndentingNewLine]",
            ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"association", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"association", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"rawFile", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
                RowBox[{
                 RowBox[{"rawFile", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "association"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetFileDataset", "[", "dataFileName_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rawFile", ",", "headerStrippedData", ",", "columnHeaderLineNumber", 
        ",", "lastColumnToImport", ",", "j", ",", "k", ",", "ass", ",", 
        "tabularData", ",", "ds", ",", "rbAbsorptionRef", ",", 
        "rbAbsorptionPro"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rawFile", "=", 
        RowBox[{"Import", "[", "dataFileName", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringPart", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rawFile", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "\[Equal]", 
          "\"\<#\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"headerStrippedData", "=", 
        RowBox[{"Take", "[", 
         RowBox[{"rawFile", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", "All"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tabularData", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "2"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "headerStrippedData", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"headerStrippedData", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}], ">", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ass", "=", 
             RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", 
               RowBox[{"Length", "[", 
                RowBox[{"headerStrippedData", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", 
              RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ass", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"ass", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"headerStrippedData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
                   RowBox[{
                    RowBox[{"headerStrippedData", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"tabularData", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tabularData", ",", "ass"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ds", " ", "=", 
        RowBox[{"Dataset", "[", "tabularData", "]"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GaussianAnalyzer", "[", 
     RowBox[{"timeString_", ",", "dependentVariableString_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "fitInfo", ",", " ", "bothPlot", ",", " ", "derivativePlot", ",", 
        "entry", ",", "file", ",", "ps", ",", "header", ",", "data", ",", 
        "energy", ",", "energyDiff", ",", "depVar", ",", "depVarDiff", ",", 
        "energyOneRemoved", ",", "depVarDer", ",", "plotTitle", ",", 
        "plotData", ",", "plotData2", ",", "fit", ",", "model", ",", "pe", 
        ",", "errors", ",", "gaussModel", ",", "m", ",", "\[Sigma]", ",", "x",
         ",", "ampl", ",", "maxDerPos", ",", "energyOfPeak", ",", 
        "dataLabel1", ",", "dataLabel2", ",", "x1", ",", "y1", ",", "offset", 
        ",", " ", "new23", ",", "plot", ",", "derPlot", ",", "index"}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"index", "=", 
        RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
         RowBox[{"files", ",", "timeString"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"file", "=", 
        RowBox[{"files", "[", 
         RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"entry", "=", 
        RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"header", "=", 
        RowBox[{"GetFileHeaderInfo", "[", "file", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"GetFileDataset", "[", "file", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"energy", "=", 
        RowBox[{"Reverse", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{"data", "[", 
           RowBox[{"All", ",", "\"\<SecondaryElectronEnergy\>\""}], "]"}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"depVar", "=", 
        RowBox[{"Reverse", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{"data", "[", 
           RowBox[{"All", ",", "dependentVariableString"}], "]"}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"depVarDiff", "=", 
        RowBox[{"Differences", "[", "depVar", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"energyDiff", "=", 
        RowBox[{"Differences", "[", "energy", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"energyOneRemoved", "=", 
        RowBox[{"Take", "[", 
         RowBox[{"energy", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"depVarDer", "=", 
        RowBox[{"depVarDiff", "/", "energyDiff"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plot", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"energy", ",", "depVar"}], "}"}], "]"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{
           "dependentVariableString", "<>", "\"\< vs. Energy: \>\"", "<>", 
            "timeString"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<'Slow' Electron Energy (eV)\>\"", ",", 
             "dependentVariableString"}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"derPlot", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"energyOneRemoved", ",", "depVarDer"}], "}"}], "]"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{
           "dependentVariableString", "<>", 
            "\"\< Derivative\\nvs. Energy: \>\"", "<>", "timeString"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<'Slow' Electron Energy (eV)\>\"", ",", 
             "\"\<Derivative\>\""}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"plotTitle", "=", "\"\<Gaussian Analysis\>\""}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"plotData", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"energy", ",", "depVar"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plotData2", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"energyOneRemoved", ",", "depVarDer"}], "}"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"yAxisTitle", "=", "\"\<d(Counts)/d(Energy)\>\""}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xAxisTitle", "=", "\"\<Electron Energy (eV)\>\""}], ";"}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dataLabel1", "=", "\"\<Data\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dataLabel2", "=", "\"\<Derivative\>\""}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ps", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
          RowBox[{"PlotLabel", "\[Rule]", "plotTitle"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\""}], "}"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"plotData", "=", "plotData2"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gaussModel", "[", "x_", "]"}], "=", 
        RowBox[{"ampl", " ", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"m", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Find", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "peak", " ", "of", " ", "the", " ", "derivative", " ", "data"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"maxDerPos", "=", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"depVarDer", ",", 
           RowBox[{"Max", "[", "depVarDer", "]"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"energyOfPeak", "=", 
        RowBox[{
         RowBox[{"energyOneRemoved", "[", 
          RowBox[{"[", "maxDerPos", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"fit", "=", 
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{"plotData", ",", 
          RowBox[{"gaussModel", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ampl", ",", 
            RowBox[{"{", 
             RowBox[{"m", ",", "energyOfPeak"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Sigma]", ",", ".9"}], "}"}]}], "}"}], ",", "x"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"model", "=", 
        RowBox[{"Normal", "[", "fit", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pe", "=", 
        RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"Parameter", " ", "Estimates"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"errors", "=", 
        RowBox[{"fit", "[", "\"\<ParameterErrors\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"new23", "=", 
        RowBox[{
         RowBox[{"m", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"2", 
               RowBox[{"Log", "[", "10", "]"}]}], "]"}], "\[Sigma]"}], ")"}], 
           "/", "2"}]}], "/.", "pe"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"offset", "=", 
        RowBox[{"23", "-", "new23"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"x1", "=", 
        RowBox[{"energyOfPeak", "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", "\[Sigma]"}], "/.", "pe"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y1", "=", 
        RowBox[{
         RowBox[{".25", "*", 
          RowBox[{"(", "ampl", ")"}]}], "/.", "pe"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitInfo", "=", 
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<\[Mu]=``\[PlusMinus] ``\\n\[Sigma]=``\[PlusMinus]``\>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"m", "/.", "pe"}], ",", "3"}], "]"}], ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"errors", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"\[Sigma]", "/.", "pe"}], ",", "3"}], "]"}], ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"errors", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "1"}], "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"Show", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"gaussModel", "[", "x", "]"}], "/.", "pe"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"energyOfPeak", "-", "5"}], ",", 
                 RowBox[{"energyOfPeak", "+", "5"}]}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"PlotLabel", "\[Rule]", 
                RowBox[{
                "\"\<Gaussian Fit To Derivative\\nof \>\"", "<>", 
                 "dependentVariableString", "<>", "\"\< Analysis: \>\"", "<>",
                  " ", "timeString"}]}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"FrameLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<'Slow' Electron Energy (eV)\>\"", ",", 
                  "\"\<Derivative\>\""}], "}"}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{"fitInfo", ",", 
                 RowBox[{"{", 
                  RowBox[{"x1", ",", "y1"}], "}"}]}], "]"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", "15"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"ListPlot", "[", 
              RowBox[{"plotData", ",", 
               RowBox[{"PlotLabel", "\[Rule]", "\"\<PLOT2\>\""}]}], "]"}]}], 
            "}"}], "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"bothPlot", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Legended", "[", 
            RowBox[{"plotData", ",", "dataLabel2"}], "]"}], ",", 
           RowBox[{"Legended", "[", 
            RowBox[{"plotData2", ",", "dataLabel1"}], "]"}]}], "}"}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"derivativePlot", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Legended", "[", 
           RowBox[{"plotData2", ",", "dataLabel2"}], "]"}], ",", "ps"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"entry", ",", "header"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"entry", ",", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{
            RowBox[{"dependentVariableString", "<>", "\"\<plot\>\""}], 
            "\[Rule]", "plot"}], ",", 
           RowBox[{"\"\<N2Offset\>\"", "\[Rule]", " ", 
            RowBox[{"data", "[", 
             RowBox[{"1", ",", "\"\<N2Offset\>\""}], "]"}]}], ",", 
           RowBox[{"\"\<filBias\>\"", "\[Rule]", " ", 
            RowBox[{"data", "[", 
             RowBox[{"1", ",", "\"\<bias\>\""}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"dependentVariableString", "<>", "\"\<onsetEnergy\>\""}],
              "\[Rule]", " ", "m"}], "/.", "pe"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"dependentVariableString", "<>", "\"\<onsetWidth\>\""}], 
             "\[Rule]", "  ", "\[Sigma]"}], "/.", "pe"}], ",", 
           RowBox[{
            RowBox[{
            "dependentVariableString", "<>", "\"\<lowEnergySignal\>\""}], 
            "\[Rule]", " ", 
            RowBox[{"depVar", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
            "dependentVariableString", "<>", "\"\<highEnergySignal\>\""}], 
            "\[Rule]", " ", 
            RowBox[{"depVar", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}]}], "|>"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "entry"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExcitationFunctionProcessor", "[", "timeString_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "file", ",", "ps", ",", "header", ",", "data", ",", "energy", ",", 
        "energyDiff", ",", "current", ",", "currentDiff", ",", 
        "energyOneRemoved", ",", "currentDer", ",", "plotTitle", ",", 
        "plotData", ",", "plotData2", ",", "fit", ",", "model", ",", "pe", 
        ",", "errors", ",", "gaussModel", ",", "m", ",", "\[Sigma]", ",", "x",
         ",", "ampl", ",", "maxDerPos", ",", "energyOfPeak", ",", "x1", ",", 
        "y1", ",", "return"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"return", "=", 
        RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"return", ",", 
         RowBox[{"GaussianAnalyzer", "[", 
          RowBox[{"timeString", ",", "\"\<CountRate\>\""}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"return", ",", 
         RowBox[{"GaussianAnalyzer", "[", 
          RowBox[{"timeString", ",", "\"\<Current\>\""}], "]"}]}], "]"}], ";",
        "\[IndentingNewLine]", "return"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
     RowBox[{"files_", ",", "timestamp_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "index"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "files", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", " ", 
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "timestamp"}], "]"}], ",", 
           RowBox[{"index", "=", "i"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "index"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFileHeaderInfo", "[", "dataFileName_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawFile", ",", "data", ",", "association", ",", "k", ",", "rawImport", 
       ",", "removedNulls", ",", "joinedWithSpaces"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rawFile", "=", 
       RowBox[{"Import", "[", "dataFileName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"data", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"association", "=", 
       RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringPart", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"rawFile", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "\[Equal]", 
         "\"\<#\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"rawFile", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], ">", " ", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"rawImport", "=", 
             RowBox[{"Take", "[", 
              RowBox[{
               RowBox[{"rawFile", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"removedNulls", "=", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"rawImport", ",", "Null"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"joinedWithSpaces", "=", 
             RowBox[{"StringRiffle", "[", "removedNulls", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"association", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"association", ",", 
               RowBox[{
                RowBox[{"StringReplace", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"rawFile", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<#\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
                    RowBox[{"\"\<:\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
                 "]"}], "\[Rule]", "joinedWithSpaces"}]}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"association", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"association", ",", 
               RowBox[{
                RowBox[{"StringReplace", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"rawFile", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<#\>\"", "\[Rule]", "\"\<\>\""}], ",", 
                    RowBox[{"\"\<:\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
                 "]"}], "\[Rule]", 
                RowBox[{
                 RowBox[{"rawFile", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "association"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.717280139099309*^9, {3.717280177301053*^9, 3.717280231925067*^9}, {
   3.71728027071045*^9, 3.7172805220954523`*^9}, {3.7174136321751633`*^9, 
   3.7174136732200975`*^9}, {3.7174141089356203`*^9, 
   3.7174142504809475`*^9}, {3.7174142945869637`*^9, 3.717414300304855*^9}, {
   3.717414377897382*^9, 3.717414381929099*^9}, {3.717414458672841*^9, 
   3.71741452569803*^9}, {3.7174161448989477`*^9, 3.717416145082414*^9}, {
   3.7174165113549795`*^9, 3.7174165284507694`*^9}, {3.717416749844353*^9, 
   3.717416915461172*^9}, {3.7174169462780437`*^9, 3.717416950709662*^9}, {
   3.7174171644958906`*^9, 3.7174171650316396`*^9}, {3.7174172341837735`*^9, 
   3.7174172347202272`*^9}, {3.717417299016941*^9, 3.717417301384698*^9}, {
   3.717417379544546*^9, 3.7174173797367363`*^9}, {3.717418043676257*^9, 
   3.717418057395262*^9}, {3.7174193060107822`*^9, 3.7174193065374966`*^9}, {
   3.717419375331186*^9, 3.7174193786340256`*^9}, {3.717420160949223*^9, 
   3.7174202311900945`*^9}, {3.723990062509927*^9, 3.7239901504952908`*^9}, {
   3.7239903009693184`*^9, 3.723990364465006*^9}, {3.7239927801415453`*^9, 
   3.72399281647367*^9}, {3.72399285462222*^9, 3.723992879114107*^9}, {
   3.7239929753577504`*^9, 3.7239930347075205`*^9}, {3.7239932355211864`*^9, 
   3.723993297755757*^9}, {3.723993347038601*^9, 3.7239933812204013`*^9}, {
   3.723993431852173*^9, 3.7239934360874434`*^9}, {3.7239934800082192`*^9, 
   3.7239934878302546`*^9}, {3.7239936498890524`*^9, 
   3.7239936575441794`*^9}, {3.7239937496322126`*^9, 3.723993791152238*^9}, {
   3.7239939747941475`*^9, 3.723993978419061*^9}, {3.7239943579535975`*^9, 
   3.723994358394092*^9}, {3.725768581178485*^9, 3.725768582839253*^9}, {
   3.7264117169672337`*^9, 3.7264117175746455`*^9}, {3.7264120422361026`*^9, 
   3.726412045314192*^9}, {3.7264124040718*^9, 3.7264124298623133`*^9}, {
   3.7264124653964434`*^9, 3.7264124655085187`*^9}, {3.7264125009736004`*^9, 
   3.7264125021003666`*^9}, {3.7264127459909763`*^9, 
   3.7264128336645093`*^9}, {3.72641543342122*^9, 3.7264154337814627`*^9}, 
   3.726421553144696*^9, {3.726421716371535*^9, 3.726421717959613*^9}, {
   3.726421749594093*^9, 3.7264217506648197`*^9}, {3.7264218669047503`*^9, 
   3.7264220140086393`*^9}, {3.726422576184376*^9, 3.7264225765936537`*^9}, {
   3.7264232819075346`*^9, 3.7264233256992702`*^9}, {3.7264237159253125`*^9, 
   3.726423717788578*^9}, {3.7264237582690663`*^9, 3.7264237830138683`*^9}, {
   3.726496095800366*^9, 3.726496111928544*^9}, {3.726508066188443*^9, 
   3.726508081987918*^9}, {3.726509273368083*^9, 3.7265094024241905`*^9}, {
   3.7265094358573728`*^9, 3.72650943638476*^9}, {3.7265096019785123`*^9, 
   3.7265096032735662`*^9}, {3.7265096405947237`*^9, 3.726509641881365*^9}, 
   3.726510474253946*^9, {3.7265105586133785`*^9, 3.726510562437806*^9}, {
   3.7265174681774607`*^9, 3.726517468878118*^9}, {3.7265175373747034`*^9, 
   3.7265175946067*^9}, {3.7265178788814893`*^9, 3.726517896811944*^9}, {
   3.727978136892959*^9, 3.7279781497342796`*^9}, {3.727978200830364*^9, 
   3.7279782314103937`*^9}, {3.7279783068587537`*^9, 3.727978314154724*^9}, {
   3.727978354811418*^9, 3.72797839988712*^9}, {3.727978516056179*^9, 
   3.727978524837105*^9}, {3.727978646221018*^9, 3.72797865172373*^9}, {
   3.727978690428849*^9, 3.727978705661127*^9}, {3.727978988541018*^9, 
   3.7279789922605286`*^9}, {3.7279790713328867`*^9, 
   3.7279790810454407`*^9}, {3.7314262987028275`*^9, 3.731426311659683*^9}, {
   3.731426379991727*^9, 3.73142638103452*^9}, {3.731426462719184*^9, 
   3.731426579130333*^9}, 3.7314266261334066`*^9, {3.731426661661705*^9, 
   3.7314266642886286`*^9}, {3.7314267491184683`*^9, 3.731426818877502*^9}, {
   3.731426921130088*^9, 3.7314272467992024`*^9}, {3.7314272999906735`*^9, 
   3.7314273496111207`*^9}, {3.7314274149194107`*^9, 3.731427452432972*^9}, {
   3.7314279324697437`*^9, 3.7314279356589622`*^9}, {3.731428000530754*^9, 
   3.7314280029142914`*^9}, {3.731428167347057*^9, 3.7314281686258464`*^9}, {
   3.7314284436138344`*^9, 
   3.731428502047882*^9}},ExpressionUUID->"e8222eea-19e9-479f-b1f1-\
e46d7b2cb93b"]
}, Open  ]]
},
WindowSize->{1600, 857},
WindowMargins->{{1272, Automatic}, {Automatic, -8}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 5360, 129, 387, "Input",ExpressionUUID->"106a6441-77cc-41bd-a35b-932010261170"],
Cell[5943, 153, 1622, 23, 30, "Output",ExpressionUUID->"617edbab-cebf-49f0-ba4d-078804310bae"],
Cell[7568, 178, 5003, 102, 226, "Output",ExpressionUUID->"ee53e20f-46b5-4f29-b113-35ddf82f8b47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12608, 285, 237, 6, 60, "Section",ExpressionUUID->"06d67a55-b3ec-4b03-a150-d1e01663bb33"],
Cell[CellGroupData[{
Cell[12870, 295, 2991, 54, 153, "Input",ExpressionUUID->"f43009aa-911c-440e-855f-8755be91a3de"],
Cell[15864, 351, 91133, 1783, 366, "Output",ExpressionUUID->"76314eea-66d5-444f-a633-bc2aecaa9a68"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107046, 2140, 200, 3, 60, "Section",ExpressionUUID->"30e6d843-e4bc-419a-92b4-dcc4890258b3"],
Cell[CellGroupData[{
Cell[107271, 2147, 1544, 32, 81, "Input",ExpressionUUID->"7ff87e15-3225-4ce8-baa4-b166d790ddda"],
Cell[CellGroupData[{
Cell[108840, 2183, 255, 4, 21, "Print",ExpressionUUID->"612383ce-e300-4619-a4f6-a8ccffb8a2d2"],
Cell[109098, 2189, 294, 5, 21, "Print",ExpressionUUID->"16e7062a-5d99-42ab-abb0-6ce4dfbeea3c"],
Cell[109395, 2196, 291, 5, 21, "Print",ExpressionUUID->"fd3711ac-93bf-402e-9398-2583c78941a3"],
Cell[109689, 2203, 275, 5, 21, "Print",ExpressionUUID->"059488fb-27fe-40a5-be85-1d23b4547b53"],
Cell[109967, 2210, 299, 5, 21, "Print",ExpressionUUID->"d0b3c2db-cd69-4443-a406-189cc86128b5"],
Cell[110269, 2217, 326, 5, 21, "Print",ExpressionUUID->"69aa7057-a7b6-4fdc-a503-0b0675d58931"],
Cell[110598, 2224, 302, 5, 21, "Print",ExpressionUUID->"ac2dbae1-a84a-4f1b-bb39-66fc818442ec"],
Cell[110903, 2231, 238, 4, 21, "Print",ExpressionUUID->"17b5a7ea-63a3-458a-a91a-de4bc7264af3"],
Cell[111144, 2237, 280, 5, 21, "Print",ExpressionUUID->"b56613fb-6582-4a4c-9ae2-ea5736457982"],
Cell[111427, 2244, 283, 5, 21, "Print",ExpressionUUID->"2fd0d202-e4ed-4f7d-b168-e9ecabdc8469"],
Cell[111713, 2251, 282, 5, 21, "Print",ExpressionUUID->"a5dc66c6-5264-48f4-9025-dc39f81b5366"],
Cell[111998, 2258, 283, 5, 21, "Print",ExpressionUUID->"0d2285c6-aa13-4804-8965-a3ace38318c5"],
Cell[112284, 2265, 282, 5, 21, "Print",ExpressionUUID->"36a774b5-b248-47d8-aa8f-4d6eee41128a"],
Cell[112569, 2272, 285, 5, 21, "Print",ExpressionUUID->"2edcfe00-a401-4de6-9bef-2a0c6f4eefd5"]
}, Open  ]],
Cell[112869, 2280, 391, 9, 20, "Message",ExpressionUUID->"4b0d9e38-0f3f-4666-969b-1fbf2bf1cbd0"],
Cell[113263, 2291, 594, 12, 20, "Message",ExpressionUUID->"e44a236c-59a1-454d-9dc3-2515925989a3"],
Cell[CellGroupData[{
Cell[113882, 2307, 349, 7, 21, "Print",ExpressionUUID->"44744bfb-17bc-439d-903a-11f60f4f2441"],
Cell[114234, 2316, 399, 6, 21, "Print",ExpressionUUID->"5884b6b2-936b-47c7-b11b-b4074fb29d60"],
Cell[114636, 2324, 303, 5, 21, "Print",ExpressionUUID->"13e333e6-707b-4c6b-9789-72323703b5ca"],
Cell[114942, 2331, 374, 6, 21, "Print",ExpressionUUID->"68a30afb-25ee-4eb3-995c-a5c7fcc30f3f"],
Cell[115319, 2339, 324, 5, 21, "Print",ExpressionUUID->"7fdaa5dc-b96f-4b04-8f62-80bf6012355a"],
Cell[115646, 2346, 327, 5, 21, "Print",ExpressionUUID->"bf8dd4a3-1fb5-43bb-a063-5def59aa9fe7"],
Cell[115976, 2353, 324, 5, 21, "Print",ExpressionUUID->"cfcf75c0-eb0b-4577-962a-c4281bcf2f0e"],
Cell[116303, 2360, 325, 5, 21, "Print",ExpressionUUID->"0c097fab-7937-4dbb-ba03-ffd3006355c0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116689, 2372, 226, 5, 60, "Section",ExpressionUUID->"a8b8c20c-6d29-4300-b6a6-0df3b707e269"],
Cell[CellGroupData[{
Cell[116940, 2381, 17997, 458, 1233, "Input",ExpressionUUID->"9bbeffab-e8a9-4283-9238-39ca9142d2b6"],
Cell[134940, 2841, 1183, 20, 49, "Output",ExpressionUUID->"3e50782a-4992-4419-9aed-30776da81bd1"],
Cell[136126, 2863, 1454, 25, 49, "Output",ExpressionUUID->"69784559-5734-4128-a4bc-4d70274f17a1"],
Cell[137583, 2890, 28540, 573, 558, "Output",ExpressionUUID->"9d6c8f5a-f32d-494c-bb2e-afc36169d58e"],
Cell[166126, 3465, 20650, 421, 558, "Output",ExpressionUUID->"c1cbc23b-a93d-4f41-a3e4-ed5f7f718ed5"],
Cell[186779, 3888, 20708, 423, 558, "Output",ExpressionUUID->"16bc8660-f3ca-4bf4-ac3c-17a2f66a0420"],
Cell[207490, 4313, 29662, 594, 558, "Output",ExpressionUUID->"6efbc216-0859-4e0b-ad5c-949f2f04871c"],
Cell[237155, 4909, 227, 4, 30, "Output",ExpressionUUID->"b2a59439-77eb-40bc-a2a1-810c01397800"],
Cell[237385, 4915, 226, 4, 30, "Output",ExpressionUUID->"39ecb3f5-0dad-4da3-a593-056d1f16b2ab"],
Cell[237614, 4921, 4045, 106, 103, "Output",ExpressionUUID->"8cff12eb-b72d-4d30-b098-461d2741364d"]
}, Open  ]],
Cell[241674, 5030, 33746, 759, 2849, "Input",ExpressionUUID->"e8222eea-19e9-479f-b1f1-e46d7b2cb93b",
 InitializationCell->True]
}, Open  ]]
}
]
*)

