(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1174641,      22995]
NotebookOptionsPosition[   1166954,      22879]
NotebookOutlinePosition[   1167303,      22894]
CellTagsIndexPosition[   1167260,      22891]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"raspberryPi", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Z:\>\"", ",", "\"\<RbData\>\"", ",", "\"\<2017-12-20\>\""}],
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dropBoxfolder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<C:\>\"", ",", "\"\<Users\>\"", ",", "\"\<kahrendsen2\>\"", ",", 
      "\"\<Dropbox\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dropBoxfolderLaptop", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\</\>\"", ",", "\"\<home\>\"", ",", "\"\<karl\>\"", ",", 
      "\"\<Dropbox\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataFolder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<00School\>\"", ",", "\"\<research\>\"", ",", "\"\<DataRuns\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"folder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"dropBoxfolder", ",", "dataFolder"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "folder", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FileNames", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.714923340617999*^9, 3.714923409091219*^9}, {
   3.7149234410815325`*^9, 3.714923515164487*^9}, {3.7149235538857613`*^9, 
   3.7149235906850386`*^9}, {3.7149236648570905`*^9, 3.714923682295718*^9}, {
   3.7149242031385703`*^9, 3.7149243244831505`*^9}, {3.7149254927118435`*^9, 
   3.7149255481996174`*^9}, {3.7149256224971676`*^9, 3.71492562344081*^9}, {
   3.714925935922892*^9, 3.7149259845309715`*^9}, {3.7149264121099586`*^9, 
   3.714926413109638*^9}, {3.7149266461270847`*^9, 3.7149266480393734`*^9}, {
   3.7149300252161994`*^9, 3.714930038496237*^9}, {3.7149303846117835`*^9, 
   3.7149303846978426`*^9}, {3.714935110489539*^9, 3.7149351134165306`*^9}, {
   3.714935186441227*^9, 3.714935191272521*^9}, 3.714935876715088*^9, 
   3.7149943160695724`*^9, {3.714994350071789*^9, 3.7149943501499186`*^9}, {
   3.7149945442342997`*^9, 3.714994577017685*^9}, {3.714999779194906*^9, 
   3.7149998922803974`*^9}, {3.7149999380958853`*^9, 
   3.7149999875522413`*^9}, {3.7150000379148965`*^9, 
   3.7150000519314365`*^9}, {3.7150040857950153`*^9, 
   3.7150040898597813`*^9}, {3.715004428964706*^9, 3.7150044337409554`*^9}, {
   3.7150044743405857`*^9, 3.715004591399249*^9}, {3.7150047677042217`*^9, 
   3.7150047682545967`*^9}, {3.7150142060381875`*^9, 3.715014246677844*^9}, {
   3.715082636460879*^9, 3.7150826374271936`*^9}, {3.7159969142439656`*^9, 
   3.7159969344741354`*^9}, {3.7159972733630776`*^9, 3.715997286730089*^9}, {
   3.717773319569236*^9, 3.717773441892082*^9}, {3.7177734739690943`*^9, 
   3.717773476797385*^9}, {3.7177781187348285`*^9, 3.717778186663056*^9}, {
   3.7177782291589766`*^9, 3.7177782354712725`*^9}, {3.7182244395450597`*^9, 
   3.718224499936946*^9}, {3.7183568422335863`*^9, 3.718356872080847*^9}, {
   3.718359701869505*^9, 3.7183597102228236`*^9}, {3.718360001222587*^9, 
   3.718360044518225*^9}, {3.718381484990987*^9, 3.718381501071179*^9}, {
   3.722776233158925*^9, 3.7227762470845146`*^9}, {3.722781133382804*^9, 
   3.7227811516651697`*^9}, {3.723996173043811*^9, 3.723996178453082*^9}, {
   3.725156876624435*^9, 3.725156898815741*^9}, {3.725156965587986*^9, 
   3.72515696645461*^9}, {3.725622921845503*^9, 3.725622922924735*^9}, {
   3.725760876329088*^9, 3.725760877139533*^9}, {3.725796377506467*^9, 
   3.7257963785781937`*^9}},ExpressionUUID->"1e2ff1f4-ed4c-4b54-8d56-\
ca8e4299b261"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"15-06-09_USBCounterError\"\>", 
   ",", "\<\"15-07-06mockPolarizationData\"\>", ",", "\<\"16-01-14\"\>", 
   ",", "\<\"16-01-21_Data\"\>", ",", "\<\"16-05-25_PolarizationData\"\>", 
   ",", "\<\"16-07-06_PolarizationData\"\>", 
   ",", "\<\"16-08-04_PolarizationData\"\>", 
   ",", "\<\"16-08-07_HeliumTargetPictures\"\>", 
   ",", "\<\"16-08-09_PolarizationData\"\>", 
   ",", "\<\"16-10-17_polarimeter\"\>", ",", "\<\"16-10-27_DataReport\"\>", 
   ",", "\<\"16-11-03_faradayRotation\"\>", 
   ",", "\<\"16-11-07_faradayRotation\"\>", 
   ",", "\<\"16-11-18_faradayRotation\"\>", 
   ",", "\<\"16-12-09_faradayRotation\"\>", ",", "\<\"17-01-31\"\>", 
   ",", "\<\"17-02-17_plusMinus\"\>", 
   ",", "\<\"17-03-06_PlusMinusWavemeter\"\>", 
   ",", "\<\"17-03-10_non-RbFaradayRotation\"\>", 
   ",", "\<\"17-03-15_AimingFor5e12\"\>", 
   ",", "\<\"17-03-15_wavemeterNoRb\"\>", ",", "\<\"17-03-28\"\>", 
   ",", "\<\"17-03-29_pumpLaserFindingCircular\"\>", 
   ",", "\<\"17-03-30_WavemeterReliability\"\>", 
   ",", "\<\"17-04-04_polarization\"\>", ",", "\<\"17-04-06_polarization\"\>",
    ",", "\<\"17-04-07_wmReliability\"\>", ",", "\<\"17-04-18\"\>", 
   ",", "\<\"17-04-18_polarization\"\>", ",", "\<\"17-04-22\"\>", 
   ",", "\<\"17-04-25_ProbePolarizationDriftOpenChamber\"\>", 
   ",", "\<\"17-04-30_laserReport\"\>", ",", "\<\"17-05-17_DirtyGunRun\"\>", 
   ",", "\<\"17-05-18_ProbeDrift\"\>", ",", "\<\"17-05-19_BetterLaser\"\>", 
   ",", "\<\"17-05-24_SimplifiedPolarization\"\>", 
   ",", "\<\"17-05-25_LaserProfiling\"\>", ",", "\<\"17-06-02\"\>", 
   ",", "\<\"17-06-06_IntensityOfProbeStudy\"\>", ",", "\<\"17-06-11\"\>", 
   ",", "\<\"17-06-13\"\>", ",", "\<\"17-06-16\"\>", ",", "\<\"17-06-17\"\>", 
   ",", "\<\"17-06-25\"\>", ",", "\<\"17-07-01_nRbVsBufferGasAnalysis\"\>", 
   ",", "\<\"17-07-01_PumpLaserAnalysis\"\>", 
   ",", "\<\"17-07-03_lowerNRb_BGPStudy\"\>", 
   ",", "\<\"17-07-03_ProbeDrift\"\>", ",", "\<\"17-07-03_pumpBroadening\"\>",
    ",", "\<\"17-07-06_lotsOfProbeMeasurements\"\>", 
   ",", "\<\"17-07-06_MagneticField\"\>", ",", "\<\"17-07-06_probePower\"\>", 
   ",", "\<\"17-07-12_polVsPumpPower\"\>", 
   ",", "\<\"17-08-01_rgaInitialScans\"\>", 
   ",", "\<\"17-08-03_redoingSystemDiagnostic\"\>", 
   ",", "\<\"17-08-06_probeDrift\"\>", 
   ",", "\<\"17-08-18_furtherPolarizationStudy\"\>", 
   ",", "\<\"17-08-19_furtherPolarizationStudy2\"\>", 
   ",", "\<\"17-08-22_furtherPolarizationStudyFoundLeak\"\>", 
   ",", "\<\"17-08-29_BvsProbePower_probeDetuneVsMagnetRot\"\>", 
   ",", "\<\"17-09-05_Polarizations_100mTBGP\"\>", ",", "\<\"17-09-20\"\>", 
   ",", "\<\"17-10-03_ElectronGun\"\>", ",", "\<\"17-10-16_ElectronGun\"\>", 
   ",", "\<\"17-10-24_UnpolarizedPolarization\"\>", 
   ",", "\<\"17-10-26_24And30eVRuns\"\>", 
   ",", "\<\"17-10-28_24and30eVRedux\"\>", 
   ",", "\<\"17-11-04_MoreUnpolarizedRuns\"\>", 
   ",", "\<\"17-11-06_UnpolarizedRuns2\"\>", 
   ",", "\<\"17-11-15_BalancedPhotoDetector\"\>", 
   ",", "\<\"17-11-18_SystemDiagnosis\"\>", 
   ",", "\<\"17-12-18_SystemDiagnosis\"\>", 
   ",", "\<\"17-12-20_PolarizingElectrons\"\>", 
   ",", "\<\"18-01-03_PolarizingElectrons\"\>", 
   ",", "\<\"18-01-04_PolarizingElectrons\"\>", 
   ",", "\<\"18-01-10_ChamberWarming\"\>", 
   ",", "\<\"18-01-11_SystemDiagnostics\"\>", 
   ",", "\<\"18-01-12_recreatingPolFigure\"\>", 
   ",", "\<\"18-01-13_recreatingPolFigureIncreasedT\"\>", 
   ",", "\<\"18-01-16_morePolarization\"\>", 
   ",", "\<\"18-01-20_electronPolarization\"\>", 
   ",", "\<\"18-01-25_excitationFunctions\"\>", 
   ",", "\<\"18-01-28_bufferGasPressureVsCounts\"\>", 
   ",", "\<\"18-01-28_exFnCurrentNormalized.png\"\>", 
   ",", "\<\"18-01-28_exFnMolyCounts.png\"\>", 
   ",", "\<\"18-01-28_exFnRawCounts.png\"\>", 
   ",", "\<\"18-01-28_exFnSignalCounts.png\"\>", 
   ",", "\<\"18-01-28_hayesReproduction\"\>", 
   ",", "\<\"18-02-12_polarizedElectrons\"\>", ",", "\<\"18-02-13\"\>", 
   ",", "\<\"dataDump\"\>", ",", "\<\"pumpQWP\"\>", ",", "\<\"test.png\"\>", 
   ",", "\<\"wavemeterOffsets\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7182245002716303`*^9, {3.7183568243705373`*^9, 3.7183568723850603`*^9}, {
   3.7183596921939683`*^9, 3.718359710783152*^9}, {3.7183600363604193`*^9, 
   3.7183600448136597`*^9}, 3.7183811168276396`*^9, {3.7183814961776505`*^9, 
   3.71838150137871*^9}, 3.7185365576127443`*^9, 3.7186249855526805`*^9, 
   3.7191613009923787`*^9, 3.7191709960185146`*^9, 3.719235697570806*^9, {
   3.722781126878914*^9, 3.7227811520270643`*^9}, 3.7239961789377975`*^9, 
   3.724084188078662*^9, 3.7241262036289196`*^9, 3.725156904083089*^9, 
   3.725156972879569*^9, 3.725360908697785*^9, 3.725367562396248*^9, 
   3.7253741909342823`*^9, {3.7256229090469513`*^9, 3.725622923396555*^9}, 
   3.725651197144409*^9, 3.7257112084615755`*^9, 3.725760877514382*^9, {
   3.72579637499426*^9, 3.725796379121563*^9}, 3.725813796613236*^9, 
   3.7258210439860964`*^9, 3.725974221046256*^9, 3.7261641604325686`*^9, 
   3.7263166465757923`*^9, 3.7263425066656475`*^9, {3.7264037375834417`*^9, 
   3.7264037391895323`*^9}, 3.726575901442692*^9, 3.72659884691573*^9, 
   3.726618596927493*^9, 3.7266267362265735`*^9, {3.7266721964456367`*^9, 
   3.7266722008209157`*^9}, 3.726832065120589*^9, 3.727714726774609*^9, 
   3.727976922677473*^9, 3.727980477907603*^9, 3.7280423622720957`*^9, 
   3.7280678347386913`*^9, 3.728088752166668*^9, 3.7280957456036305`*^9, 
   3.7281262751258926`*^9, 3.7281263324893312`*^9, 3.728127563410584*^9, 
   3.7281346650857763`*^9, 3.728135237519617*^9, 
   3.7284789070060234`*^9},ExpressionUUID->"e84fb1be-7abd-40d9-b973-\
2d4bbb179050"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"folder", ",", "\"\<18-02-13\>\"", ",", "\"\<data\>\""}], "}"}], 
    "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polFileNames", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"StringExpression", "[", 
     RowBox[{
     "\"\<POL\>\"", ",", "__", ",", "\"\<_\>\"", ",", "__", ",", 
      "DigitCharacter", ",", "\"\<.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"excitationFileNames", "=", 
  RowBox[{"FileNames", "[", 
   RowBox[{"StringExpression", "[", 
    RowBox[{
    "\"\<EX\>\"", ",", "__", ",", "\"\<_\>\"", ",", "__", ",", 
     "DigitCharacter", ",", "\"\<.dat\>\""}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.715997051186823*^9, 3.715997071362425*^9}, {
   3.7159971122269754`*^9, 3.715997174834648*^9}, {3.7159973419783387`*^9, 
   3.715997401962781*^9}, {3.715998454947711*^9, 3.715998467161947*^9}, 
   3.7159987635787935`*^9, {3.715999010402203*^9, 3.7159990673856225`*^9}, {
   3.715999183050605*^9, 3.7159991868501663`*^9}, {3.7159993053960905`*^9, 
   3.7159993055712085`*^9}, {3.71600086687239*^9, 3.7160008670004773`*^9}, {
   3.716002939298865*^9, 3.7160029399383*^9}, {3.7177732838501806`*^9, 
   3.717773284053334*^9}, {3.7177734883855925`*^9, 3.717773534562234*^9}, {
   3.717773565645196*^9, 3.717773656572415*^9}, {3.717777783624771*^9, 
   3.7177778957180552`*^9}, {3.717778197176211*^9, 3.717778250191291*^9}, {
   3.7177783653756776`*^9, 3.7177784057760477`*^9}, {3.717778448033537*^9, 
   3.7177785168002024`*^9}, {3.7177785480002384`*^9, 
   3.7177786912241025`*^9}, {3.7177787294411116`*^9, 3.717778748009747*^9}, {
   3.717778800281515*^9, 3.7177788004086018`*^9}, {3.717778904502442*^9, 
   3.717778906001462*^9}, {3.7177789429636154`*^9, 3.717778943641135*^9}, {
   3.7177792380124097`*^9, 3.717779238722911*^9}, {3.7180337493614235`*^9, 
   3.718033770434352*^9}, {3.7180338105468073`*^9, 3.718033813257489*^9}, {
   3.718224688658126*^9, 3.718224696625489*^9}, {3.71822490024232*^9, 
   3.7182249989226894`*^9}, {3.718225048570269*^9, 3.718225091874405*^9}, {
   3.7183571427382803`*^9, 3.718357311441506*^9}, {3.718357347009649*^9, 
   3.718357351850658*^9}, {3.7183578195702944`*^9, 3.718357860195168*^9}, {
   3.718357920324218*^9, 3.718357967363239*^9}, {3.7183581814440804`*^9, 
   3.7183582639397583`*^9}, {3.7183587530922318`*^9, 
   3.7183587634124207`*^9}, {3.718358866564946*^9, 3.7183588766685343`*^9}, {
   3.718359138262288*^9, 3.718359140709233*^9}, {3.718359237589331*^9, 
   3.718359341333583*^9}, {3.7183594193733797`*^9, 3.7183594511491985`*^9}, {
   3.718359512166092*^9, 3.7183596202634225`*^9}, {3.718359660942733*^9, 
   3.7183596703348265`*^9}, {3.7183605008640304`*^9, 
   3.7183605256163654`*^9}, {3.7183605964950185`*^9, 
   3.7183606851912823`*^9}, {3.718360716431503*^9, 3.718360725079917*^9}, {
   3.7183608161601133`*^9, 3.7183608252081547`*^9}, {3.7183611243291483`*^9, 
   3.718361272665377*^9}, {3.718361306065169*^9, 3.718361397898409*^9}, {
   3.718361429970042*^9, 3.718361459753131*^9}, {3.7183618101064496`*^9, 
   3.718361814377358*^9}, {3.718362727772114*^9, 3.718362742787241*^9}, {
   3.7183632559818945`*^9, 3.718363256780793*^9}, {3.718363350948876*^9, 
   3.718363398108738*^9}, {3.7183637044864473`*^9, 3.7183637160294676`*^9}, {
   3.718364856513418*^9, 3.718364857072452*^9}, 3.718364912633376*^9, {
   3.7183651158571925`*^9, 3.718365117872814*^9}, {3.7183651704809422`*^9, 
   3.7183651882651415`*^9}, {3.718365240169391*^9, 3.7183652933211513`*^9}, {
   3.7183658449297247`*^9, 3.7183659101447906`*^9}, {3.7183714119046335`*^9, 
   3.7183714150546684`*^9}, {3.7183718680842576`*^9, 
   3.7183718686040015`*^9}, {3.7183719538284216`*^9, 3.7183720133085017`*^9}, 
   3.718536708468169*^9, {3.7185367873078737`*^9, 3.7185367907850227`*^9}, {
   3.718536848307209*^9, 3.7185368887850327`*^9}, {3.7185369357854404`*^9, 
   3.7185370757860527`*^9}, {3.719173061024761*^9, 3.7191730706958942`*^9}, {
   3.7192374345847445`*^9, 3.7192375113609424`*^9}, {3.7192376152973127`*^9, 
   3.7192376160648217`*^9}, {3.719237695882218*^9, 3.7192377008748665`*^9}, {
   3.7192377588256702`*^9, 3.719237819778061*^9}, {3.7192379041940765`*^9, 
   3.719237991241373*^9}, {3.719238159481947*^9, 3.719238271257752*^9}, {
   3.7192383118352976`*^9, 3.719238362066061*^9}, {3.719238449475089*^9, 
   3.7192384531865654`*^9}, {3.719238553803615*^9, 3.7192385577870083`*^9}, {
   3.7192386604920425`*^9, 3.7192387380751963`*^9}, {3.7227814854789753`*^9, 
   3.722781528537335*^9}, {3.7241263039901896`*^9, 3.724126333076976*^9}, {
   3.7241264812948*^9, 3.7241264880634036`*^9}, {3.7251569771853647`*^9, 
   3.7251569778616943`*^9}, {3.7251572641475763`*^9, 3.725157264636837*^9}, {
   3.725157440074272*^9, 3.725157440206785*^9}, {3.7253609196800203`*^9, 
   3.725360951378677*^9}, {3.725651202890244*^9, 3.72565124620273*^9}, {
   3.7258232682535524`*^9, 3.7258232898307433`*^9}, {3.725823322173271*^9, 
   3.7258233669981117`*^9}, {3.726342521668945*^9, 3.72634254265981*^9}, {
   3.7279769409144735`*^9, 3.727976941850141*^9}, 
   3.7281395508472433`*^9},ExpressionUUID->"e91a80f3-fca7-4ecb-a414-\
423876b73221"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"EX2018-02-13_013554.dat\"\>", 
   ",", "\<\"EX2018-02-13_014854.dat\"\>", 
   ",", "\<\"EX2018-02-13_023109.dat\"\>", 
   ",", "\<\"EX2018-02-13_023357.dat\"\>", 
   ",", "\<\"EX2018-02-13_050758.dat\"\>", 
   ",", "\<\"EX2018-02-13_170321.dat\"\>", 
   ",", "\<\"EX2018-02-13_173556.dat\"\>", 
   ",", "\<\"EX2018-02-13_174047.dat\"\>", 
   ",", "\<\"EX2018-02-13_182224.dat\"\>", 
   ",", "\<\"EX2018-02-13_230939.dat\"\>", 
   ",", "\<\"EX2018-02-13_233300.dat\"\>", 
   ",", "\<\"EX2018-02-14_042016.dat\"\>", 
   ",", "\<\"EX2018-02-14_044342.dat\"\>", 
   ",", "\<\"EX2018-02-14_093056.dat\"\>", 
   ",", "\<\"EX2018-02-14_113518.dat\"\>", 
   ",", "\<\"EX2018-02-14_120100.dat\"\>", 
   ",", "\<\"EX2018-02-14_131606.dat\"\>", 
   ",", "\<\"EX2018-02-14_141849.dat\"\>", 
   ",", "\<\"EX2018-02-14_162159.dat\"\>", 
   ",", "\<\"EX2018-02-14_192323.dat\"\>", 
   ",", "\<\"EX2018-02-14_203423.dat\"\>", 
   ",", "\<\"EX2018-02-14_233539.dat\"\>", 
   ",", "\<\"EX2018-02-15_002525.dat\"\>", 
   ",", "\<\"EX2018-02-15_003357.dat\"\>", 
   ",", "\<\"EX2018-02-15_003745.dat\"\>", 
   ",", "\<\"EX2018-02-15_004024.dat\"\>", 
   ",", "\<\"EX2018-02-15_021316.dat\"\>", 
   ",", "\<\"EX2018-02-15_070136.dat\"\>", 
   ",", "\<\"EX2018-02-15_100305.dat\"\>", 
   ",", "\<\"EX2018-02-15_103605.dat\"\>", 
   ",", "\<\"EX2018-02-15_133955.dat\"\>", 
   ",", "\<\"EX2018-02-15_134120.dat\"\>", 
   ",", "\<\"EX2018-02-15_135231.dat\"\>", 
   ",", "\<\"EX2018-02-15_135300.dat\"\>", 
   ",", "\<\"EX2018-02-15_140351.dat\"\>", 
   ",", "\<\"EX2018-02-15_143552.dat\"\>", 
   ",", "\<\"EX2018-02-15_151349.dat\"\>", 
   ",", "\<\"EX2018-02-15_151914.dat\"\>", 
   ",", "\<\"EX2018-02-15_163116.dat\"\>", 
   ",", "\<\"EX2018-02-15_170742.dat\"\>", 
   ",", "\<\"EX2018-02-15_174409.dat\"\>", 
   ",", "\<\"EX2018-02-15_182033.dat\"\>", 
   ",", "\<\"EX2018-02-15_184246.dat\"\>", 
   ",", "\<\"EX2018-02-15_195744.dat\"\>", 
   ",", "\<\"EX2018-02-15_203408.dat\"\>", 
   ",", "\<\"EX2018-02-15_211035.dat\"\>", 
   ",", "\<\"EX2018-02-15_214659.dat\"\>", 
   ",", "\<\"EX2018-02-15_220910.dat\"\>", 
   ",", "\<\"EX2018-02-15_232420.dat\"\>", 
   ",", "\<\"EX2018-02-16_000049.dat\"\>", 
   ",", "\<\"EX2018-02-16_003715.dat\"\>", 
   ",", "\<\"EX2018-02-16_011339.dat\"\>", 
   ",", "\<\"EX2018-02-16_013558.dat\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7241264926895504`*^9, 3.7241387292359266`*^9, 3.725156979506914*^9, 
   3.725157265018544*^9, 3.725157440581091*^9, {3.7253609281550007`*^9, 
   3.7253609516299553`*^9}, 3.725367565081479*^9, 3.7253741941195383`*^9, 
   3.725622926222207*^9, {3.725651218428837*^9, 3.7256512483224716`*^9}, 
   3.725711211295155*^9, 3.725760881098627*^9, 3.7257963808535967`*^9, 
   3.7258137968089924`*^9, 3.7258210484534626`*^9, 3.725823370552835*^9, 
   3.7259742241413565`*^9, 3.7261641649114347`*^9, 3.726316649497834*^9, 
   3.7263425121029716`*^9, 3.726342894976429*^9, 3.726344769249363*^9, 
   3.726403740672539*^9, 3.726575902895196*^9, 3.726598848457108*^9, 
   3.726618598143319*^9, 3.7266267373213186`*^9, 3.726672202508522*^9, 
   3.7268320663550425`*^9, 3.7279769426827345`*^9, 3.7279804822595387`*^9, 
   3.7280423792419624`*^9, 3.7280678374116573`*^9, 3.7280887532323933`*^9, 
   3.728095746775576*^9, 3.7281262772510324`*^9, 3.728126333817544*^9, 
   3.728127564941934*^9, 3.72812836730155*^9, 3.7281346669004087`*^9, 
   3.7281352390670958`*^9, 3.7281391260119653`*^9, 3.7281395525342946`*^9, 
   3.7284789089436383`*^9},ExpressionUUID->"2e32edb5-cfc4-4331-af19-\
8a3c08f18c21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"runFiles", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<exfn\>\"", "\[Rule]", "\"\<163116\>\""}], ",", 
       RowBox[{"\"\<polFile\>\"", "\[Rule]", "\"\<163357\>\""}], ",", 
       RowBox[{"\"\<molyFile\>\"", "\[Rule]", " ", "\"\<143832\>\""}], ",", 
       RowBox[{"\"\<darkFile\>\"", "\[Rule]", "\"\<140631\>\""}], ",", 
       RowBox[{
       "\"\<stringId\>\"", "\[Rule]", "\"\<t=115_Ei=100_BGP=500\>\""}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<exfn\>\"", "\[Rule]", "\"\<195744\>\""}], ",", 
       RowBox[{"\"\<polFile\>\"", "\[Rule]", "\"\<200025\>\""}], ",", 
       RowBox[{"\"\<molyFile\>\"", "\[Rule]", " ", "\"\<143832\>\""}], ",", 
       RowBox[{"\"\<darkFile\>\"", "\[Rule]", "\"\<140631\>\""}], ",", 
       RowBox[{
       "\"\<stringId\>\"", "\[Rule]", "\"\<t=120_Ei=100_BGP=500\>\""}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<exfn\>\"", "\[Rule]", "\"\<232420\>\""}], ",", 
       RowBox[{"\"\<polFile\>\"", "\[Rule]", "\"\<232701\>\""}], ",", 
       RowBox[{"\"\<molyFile\>\"", "\[Rule]", " ", "\"\<143832\>\""}], ",", 
       RowBox[{"\"\<darkFile\>\"", "\[Rule]", "\"\<140631\>\""}], ",", 
       RowBox[{
       "\"\<stringId\>\"", "\[Rule]", "\"\<t=125_Ei=100_BGP=500\>\""}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<exfn\>\"", "\[Rule]", "\"\<162159\>\""}], ",", 
       RowBox[{"\"\<polFile\>\"", "\[Rule]", "\"\<162440\>\""}], ",", 
       RowBox[{"\"\<molyFile\>\"", "\[Rule]", " ", "\"\<142130\>\""}], ",", 
       RowBox[{"\"\<darkFile\>\"", "\[Rule]", "\"\<120341\>\""}], ",", 
       RowBox[{
       "\"\<stringId\>\"", "\[Rule]", "\"\<t=115_Ei=100_BGP=275\>\""}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<exfn\>\"", "\[Rule]", "\"\<203423\>\""}], ",", 
       RowBox[{"\"\<polFile\>\"", "\[Rule]", "\"\<203704\>\""}], ",", 
       RowBox[{"\"\<molyFile\>\"", "\[Rule]", " ", "\"\<142130\>\""}], ",", 
       RowBox[{"\"\<darkFile\>\"", "\[Rule]", "\"\<120341\>\""}], ",", 
       RowBox[{
       "\"\<stringId\>\"", "\[Rule]", "\"\<t=120_Ei=100_BGP=275\>\""}]}], 
      "|>"}]}], "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"run", "=", 
   RowBox[{"runFiles", "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"stringId", "=", 
  RowBox[{"run", "[", "\"\<stringId\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runs", "=", "3"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "number", " ", "of", " ", "Electron", " ", "Polarization", " ",
     "Runs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"aouts", "=", 
   RowBox[{"{", 
    RowBox[{"240", ",", "480", ",", "792"}], "}"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "A", " ", "list", " ", "of", " ", "the", " ", "AOUTs", " ", "or", " ", 
    "energies", " ", "at", " ", "which", " ", "we", " ", "collected", " ", 
    "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"pumpLights", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<noPump\>\"", ",", "\"\<piPump\>\"", ",", "\"\<s+Pump\>\"", ",", 
     "\"\<s-Pump\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energies", "=", "aouts"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aoutToEnergy", "=", 
   RowBox[{"GetAoutToEnergyModelFromExcitationFunctionTimeStamp", "[", 
    RowBox[{"excitationFileNames", ",", 
     RowBox[{"run", "[", "\"\<exfn\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "aouts", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{"energies", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"aoutToEnergy", "[", 
      RowBox[{"aouts", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"firstSignalFileIndex", "=", 
   RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
    RowBox[{"polFileNames", ",", 
     RowBox[{"run", "[", "\"\<polFile\>\"", "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"fileNames", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allFiles", "=", 
    RowBox[{"<|", "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"category1", "=", "energies"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"category2", "=", "pumpLights"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Signal Files\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"signalFiles", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{"OrganizeFilesByCategories", "[", 
      RowBox[{
      "polFileNames", ",", "firstSignalFileIndex", ",", "category1", ",", 
       "category2", ",", "runs"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"firstMolyFileIndex", "=", 
   RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
    RowBox[{"polFileNames", ",", 
     RowBox[{"run", "[", "\"\<molyFile\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runs", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Moly Files\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"molyFiles", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{"OrganizeFilesByCategories", "[", 
      RowBox[{
      "polFileNames", ",", "firstMolyFileIndex", ",", "category1", ",", 
       "category2", ",", "runs"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"firstDarkFileIndex", "=", 
   RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
    RowBox[{"polFileNames", ",", 
     RowBox[{"run", "[", "\"\<darkFile\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runs", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Dark Files\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"darkFiles", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{"OrganizeFilesByCategories", "[", 
      RowBox[{
      "polFileNames", ",", "firstDarkFileIndex", ",", "category1", ",", 
       "category2", ",", "runs"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"darkCounts", "=", 
    RowBox[{"N", "[", 
     RowBox[{"GetAverageCountRateFromFileNames", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{"darkFiles", "[", 
         RowBox[{"All", ",", "\"\<fileNames\>\""}], "]"}], "]"}], "]"}], 
      "]"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allStokes", "=", 
    RowBox[{"<|", "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"m", "=", "1"}], ",", 
    RowBox[{"m", "\[LessEqual]", 
     RowBox[{"Length", "[", "energies", "]"}]}], ",", 
    RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"energyIndex", "=", "m"}], ";", "\[IndentingNewLine]", 
     RowBox[{"stokes", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "pumpLights", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pumpType", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"molyCounts", "=", 
         RowBox[{"GetCurrentNormalizedMolyCountRateFromFileNames", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{"molyFiles", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"#cat1", "\[Equal]", 
                  RowBox[{"energies", "[", 
                   RowBox[{"[", "energyIndex", "]"}], "]"}]}], "&"}], "]"}], 
               "]"}], "[", 
              RowBox[{"All", ",", "\"\<fileNames\>\""}], "]"}], "]"}], "]"}], 
           ",", "darkCounts"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"signalFileNames", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"signalFiles", "[", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"#cat1", "\[Equal]", 
                 RowBox[{"energies", "[", 
                  RowBox[{"[", "energyIndex", "]"}], "]"}]}], "&"}], "]"}], 
              "]"}], "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#cat2", "\[Equal]", 
                RowBox[{"pumpLights", "[", 
                 RowBox[{"[", "pumpType", "]"}], "]"}]}], "&"}], "]"}], "]"}],
             "[", 
            RowBox[{"All", ",", "\"\<fileNames\>\""}], "]"}], "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"stokes", ",", 
          RowBox[{
           RowBox[{"pumpLights", "[", 
            RowBox[{"[", "pumpType", "]"}], "]"}], "->", 
           RowBox[{"CalculateAverageStokesFromFilesAndCountRates", "[", 
            RowBox[{
            "signalFileNames", ",", "molyCounts", ",", "darkCounts", ",", 
             RowBox[{"20.4", "*", 
              RowBox[{"\[Pi]", "/", "180"}]}], ",", 
             RowBox[{"68.7", "*", 
              RowBox[{"\[Pi]", "/", "180"}]}], ",", "1.65"}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"allStokes", ",", 
       RowBox[{
        RowBox[{"energies", "[", 
         RowBox[{"[", "m", "]"}], "]"}], "->", "stokes"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.715997051186823*^9, 3.715997071362425*^9}, {
   3.7159971122269754`*^9, 3.715997174834648*^9}, {3.7159973419783387`*^9, 
   3.715997401962781*^9}, {3.715998454947711*^9, 3.715998467161947*^9}, 
   3.7159987635787935`*^9, {3.715999010402203*^9, 3.7159990673856225`*^9}, {
   3.715999183050605*^9, 3.7159991868501663`*^9}, {3.7159993053960905`*^9, 
   3.7159993055712085`*^9}, {3.71600086687239*^9, 3.7160008670004773`*^9}, {
   3.716002939298865*^9, 3.7160029399383*^9}, {3.7177732838501806`*^9, 
   3.717773284053334*^9}, {3.7177734883855925`*^9, 3.717773534562234*^9}, {
   3.717773565645196*^9, 3.717773656572415*^9}, {3.717777783624771*^9, 
   3.7177778957180552`*^9}, {3.717778197176211*^9, 3.717778250191291*^9}, {
   3.7177783653756776`*^9, 3.7177784057760477`*^9}, {3.717778448033537*^9, 
   3.7177785168002024`*^9}, {3.7177785480002384`*^9, 
   3.7177786912241025`*^9}, {3.7177787294411116`*^9, 3.717778748009747*^9}, {
   3.717778800281515*^9, 3.7177788004086018`*^9}, {3.717778904502442*^9, 
   3.717778906001462*^9}, {3.7177789429636154`*^9, 3.717778943641135*^9}, {
   3.7177792380124097`*^9, 3.717779238722911*^9}, {3.7180337493614235`*^9, 
   3.718033770434352*^9}, {3.7180338105468073`*^9, 3.718033813257489*^9}, {
   3.718224688658126*^9, 3.718224696625489*^9}, {3.71822490024232*^9, 
   3.7182249989226894`*^9}, {3.718225048570269*^9, 3.718225091874405*^9}, {
   3.7183571427382803`*^9, 3.718357311441506*^9}, {3.718357347009649*^9, 
   3.718357351850658*^9}, {3.7183578195702944`*^9, 3.718357860195168*^9}, {
   3.718357920324218*^9, 3.718357967363239*^9}, {3.7183581814440804`*^9, 
   3.7183582639397583`*^9}, {3.7183587530922318`*^9, 
   3.7183587634124207`*^9}, {3.718358866564946*^9, 3.7183588766685343`*^9}, {
   3.718359138262288*^9, 3.718359140709233*^9}, {3.718359237589331*^9, 
   3.718359341333583*^9}, {3.7183594193733797`*^9, 3.7183594511491985`*^9}, {
   3.718359512166092*^9, 3.7183596202634225`*^9}, {3.718359660942733*^9, 
   3.7183596703348265`*^9}, {3.7183605008640304`*^9, 
   3.7183605256163654`*^9}, {3.7183605964950185`*^9, 
   3.7183606851912823`*^9}, {3.718360716431503*^9, 3.718360725079917*^9}, {
   3.7183608161601133`*^9, 3.7183608252081547`*^9}, {3.7183611243291483`*^9, 
   3.718361272665377*^9}, {3.718361306065169*^9, 3.718361397898409*^9}, {
   3.718361429970042*^9, 3.718361459753131*^9}, {3.7183618101064496`*^9, 
   3.718361814377358*^9}, {3.718362727772114*^9, 3.718362742787241*^9}, {
   3.7183632559818945`*^9, 3.718363256780793*^9}, {3.718363350948876*^9, 
   3.718363398108738*^9}, {3.7183637044864473`*^9, 3.7183637160294676`*^9}, {
   3.718364856513418*^9, 3.718364857072452*^9}, 3.718364912633376*^9, {
   3.7183651158571925`*^9, 3.718365117872814*^9}, {3.7183651704809422`*^9, 
   3.7183651882651415`*^9}, {3.718365240169391*^9, 3.7183652933211513`*^9}, {
   3.7183658449297247`*^9, 3.7183659101447906`*^9}, {3.7183714119046335`*^9, 
   3.7183714150546684`*^9}, {3.7183718680842576`*^9, 
   3.7183718686040015`*^9}, {3.7183719538284216`*^9, 3.7183720133085017`*^9}, 
   3.718536708468169*^9, {3.7185367873078737`*^9, 3.7185367907850227`*^9}, {
   3.718536848307209*^9, 3.7185368887850327`*^9}, {3.7185369357854404`*^9, 
   3.7185370757860527`*^9}, {3.719173061024761*^9, 3.7191730706958942`*^9}, {
   3.7192374345847445`*^9, 3.7192375113609424`*^9}, {3.7192376152973127`*^9, 
   3.7192376160648217`*^9}, {3.719237695882218*^9, 3.7192377008748665`*^9}, {
   3.7192377588256702`*^9, 3.719237819778061*^9}, {3.7192379041940765`*^9, 
   3.719237991241373*^9}, {3.719238159481947*^9, 3.719238271257752*^9}, {
   3.7192383118352976`*^9, 3.719238362066061*^9}, {3.719238449475089*^9, 
   3.7192384531865654`*^9}, {3.719238553803615*^9, 3.7192385577870083`*^9}, {
   3.7192386604920425`*^9, 3.7192387380751963`*^9}, {3.7227814854789753`*^9, 
   3.722781528537335*^9}, {3.7241263039901896`*^9, 3.724126333076976*^9}, {
   3.7241264812948*^9, 3.724126501621627*^9}, {3.72412660162315*^9, 
   3.7241266064792337`*^9}, {3.72412664072705*^9, 3.7241266432467637`*^9}, {
   3.724126698864598*^9, 3.7241266996401253`*^9}, {3.724126763215371*^9, 
   3.724126785479518*^9}, {3.724126891528656*^9, 3.7241269457525415`*^9}, {
   3.7241270378982224`*^9, 3.724127039130061*^9}, {3.724127140842249*^9, 
   3.724127174395074*^9}, 3.7241272079298844`*^9, {3.72412736490821*^9, 
   3.72412736537853*^9}, {3.724138641944003*^9, 3.7241386586594086`*^9}, {
   3.7241387064966955`*^9, 3.7241387125993447`*^9}, {3.724138753848645*^9, 
   3.7241387541675825`*^9}, {3.725368837403303*^9, 3.725368945974389*^9}, {
   3.7253690049894867`*^9, 3.725369037105242*^9}, {3.72536947751926*^9, 
   3.7253695051705627`*^9}, 3.7253736928006077`*^9, {3.7253738971647987`*^9, 
   3.725373905614094*^9}, {3.7253739884065657`*^9, 3.725374109339774*^9}, {
   3.7253741510486193`*^9, 3.725374160662602*^9}, {3.7253742361949368`*^9, 
   3.725374244936141*^9}, {3.725374327985167*^9, 3.7253743532165413`*^9}, 
   3.7253745755782824`*^9, {3.725374630729743*^9, 3.7253746539209623`*^9}, {
   3.725374695913333*^9, 3.7253747356862183`*^9}, {3.725375005896514*^9, 
   3.7253750080590363`*^9}, {3.725375134968399*^9, 3.725375229418421*^9}, {
   3.725375269844977*^9, 3.72537530748666*^9}, {3.725375413856099*^9, 
   3.7253754162067137`*^9}, {3.725375470245846*^9, 3.7253754864568567`*^9}, {
   3.7253757763818903`*^9, 3.725375784925555*^9}, {3.725375822465994*^9, 
   3.725375832849001*^9}, {3.725375888412306*^9, 3.725375891151123*^9}, {
   3.725375937551497*^9, 3.725375943601087*^9}, {3.725375991843367*^9, 
   3.725376065291897*^9}, {3.7253761506692266`*^9, 3.725376185963855*^9}, {
   3.7253762752447033`*^9, 3.725376286177369*^9}, {3.725376346528514*^9, 
   3.725376380576597*^9}, {3.725376418701398*^9, 3.725376422136725*^9}, {
   3.7253764528782263`*^9, 3.72537645704782*^9}, {3.725376492550324*^9, 
   3.725376505486912*^9}, {3.7253765488688183`*^9, 3.725376559481078*^9}, {
   3.725376603586545*^9, 3.725376624799663*^9}, {3.725376824880515*^9, 
   3.725376826687457*^9}, {3.725623060453293*^9, 3.7256231171333685`*^9}, {
   3.7256231864231653`*^9, 3.7256232603743935`*^9}, {3.7256233029273577`*^9, 
   3.7256233198488035`*^9}, {3.725623357001822*^9, 3.725623371111022*^9}, {
   3.7256234894822235`*^9, 3.725623491663676*^9}, {3.7256246428206863`*^9, 
   3.7256246662686996`*^9}, {3.725624754558575*^9, 3.725624797893392*^9}, {
   3.7256248754056168`*^9, 3.725624883157742*^9}, {3.7256249736547213`*^9, 
   3.7256249744784117`*^9}, {3.725625379312705*^9, 3.7256254332252135`*^9}, {
   3.7256254975784535`*^9, 3.7256255038403134`*^9}, {3.7256262554516*^9, 
   3.725626423365492*^9}, {3.7256264605437727`*^9, 3.725626461149763*^9}, {
   3.7256267190466003`*^9, 3.7256267258612275`*^9}, {3.7256267578149247`*^9, 
   3.725626796086913*^9}, {3.725626843647208*^9, 3.7256268640460596`*^9}, {
   3.725626894823959*^9, 3.72562689662218*^9}, {3.725626986751381*^9, 
   3.7256270207024345`*^9}, {3.725627223497139*^9, 3.725627224937117*^9}, 
   3.72562726015303*^9, 3.725627290985178*^9, {3.7256275916800575`*^9, 
   3.7256276037423253`*^9}, {3.725627742305291*^9, 3.7256277956158295`*^9}, {
   3.725627885690987*^9, 3.725627906832321*^9}, 3.7256279431931367`*^9, {
   3.7256279926969852`*^9, 3.7256279967937436`*^9}, {3.725628126442361*^9, 
   3.725628149689725*^9}, {3.725628297035735*^9, 3.725628306219203*^9}, {
   3.7256288493842564`*^9, 3.725628874439848*^9}, {3.725628927144665*^9, 
   3.7256289679687285`*^9}, {3.725651308755704*^9, 3.725651312315613*^9}, {
   3.7256513675175905`*^9, 3.7256514777253895`*^9}, {3.725651615143255*^9, 
   3.725651618413931*^9}, {3.7256517197359886`*^9, 3.7256517218942223`*^9}, {
   3.725651759696042*^9, 3.725651766110162*^9}, {3.7256518033922267`*^9, 
   3.7256518041830635`*^9}, 3.7256518816237097`*^9, {3.7256519856166744`*^9, 
   3.7256520155347433`*^9}, {3.7256521376732273`*^9, 
   3.7256521411511216`*^9}, {3.7256521873200226`*^9, 
   3.7256522562644105`*^9}, {3.7256523103965597`*^9, 
   3.7256523288964624`*^9}, {3.7256527203960705`*^9, 3.725652824196554*^9}, {
   3.725652859885788*^9, 3.7256529154785376`*^9}, {3.7256530424377484`*^9, 
   3.725653054902212*^9}, {3.725653208264492*^9, 3.7256532819895535`*^9}, 
   3.725711301455151*^9, {3.725711349374552*^9, 3.7257113600304904`*^9}, {
   3.725711405398507*^9, 3.72571146725438*^9}, {3.7257115271121225`*^9, 
   3.725711668111583*^9}, {3.7257117256890645`*^9, 3.725711729639923*^9}, {
   3.725711763449745*^9, 3.7257117958640924`*^9}, {3.725711829536448*^9, 
   3.72571185496841*^9}, {3.7257120403941393`*^9, 3.725712056465989*^9}, {
   3.725712134476113*^9, 3.7257121367541513`*^9}, 3.72571220393316*^9, {
   3.7257123515289087`*^9, 3.7257123610673037`*^9}, {3.725712677094893*^9, 
   3.7257126777089844`*^9}, {3.7257129685838647`*^9, 
   3.7257130197576647`*^9}, {3.7257130882473707`*^9, 3.725713125695038*^9}, {
   3.7257133651284466`*^9, 3.725713365903248*^9}, 3.7257134323608503`*^9, {
   3.7257135484832983`*^9, 3.725713548712206*^9}, {3.725713579298173*^9, 
   3.725713580072978*^9}, {3.725713696618859*^9, 3.7257136968252597`*^9}, {
   3.7257137945461073`*^9, 3.72571382591382*^9}, {3.7257139929703817`*^9, 
   3.725714049322435*^9}, {3.7257141766387234`*^9, 3.7257141861787057`*^9}, {
   3.725714224395254*^9, 3.7257142777233543`*^9}, {3.725714448292616*^9, 
   3.725714473331873*^9}, {3.725714514943372*^9, 3.725714518028329*^9}, {
   3.725714557076906*^9, 3.7257147761423616`*^9}, {3.7257148062698193`*^9, 
   3.7257148086134105`*^9}, 3.725718202984907*^9, {3.7257183976833844`*^9, 
   3.725718413120137*^9}, {3.725718466584917*^9, 3.7257185086719885`*^9}, {
   3.7257185419209604`*^9, 3.7257185427762556`*^9}, {3.7257196255809126`*^9, 
   3.7257196743895893`*^9}, {3.7257198252234545`*^9, 3.725719829774441*^9}, {
   3.7257216530157413`*^9, 3.725721667214556*^9}, {3.725726855575472*^9, 
   3.725726862718186*^9}, {3.725727141646844*^9, 3.725727148959179*^9}, {
   3.7257271897351656`*^9, 3.7257272793512473`*^9}, {3.725727318727545*^9, 
   3.725727464518617*^9}, {3.725727518668945*^9, 3.725727552894095*^9}, {
   3.725727602454693*^9, 3.725727602647127*^9}, {3.7257276790944295`*^9, 
   3.725727723205781*^9}, {3.7257278489913154`*^9, 3.725727911061685*^9}, {
   3.7257279461991453`*^9, 3.7257279749656315`*^9}, {3.72572833634161*^9, 
   3.725728365357067*^9}, {3.725728485756722*^9, 3.7257285345083632`*^9}, {
   3.7257287512294784`*^9, 3.7257287665958047`*^9}, {3.725728831676484*^9, 
   3.725728863707982*^9}, {3.725728998539687*^9, 3.725729200675493*^9}, {
   3.7257292947313285`*^9, 3.7257293105079794`*^9}, 3.725729379411476*^9, {
   3.725729461457452*^9, 3.725729465739255*^9}, {3.725729561669675*^9, 
   3.725729570755036*^9}, {3.725730654227478*^9, 3.725730654907282*^9}, {
   3.7257307253228626`*^9, 3.725730727826064*^9}, {3.7257317438965096`*^9, 
   3.7257317484233127`*^9}, {3.725732403115483*^9, 3.725732403330573*^9}, {
   3.725734286297471*^9, 3.725734292850921*^9}, {3.725734385676959*^9, 
   3.7257344030677624`*^9}, {3.7257347777654696`*^9, 
   3.7257347812144265`*^9}, {3.7257348331441727`*^9, 3.725734866829995*^9}, {
   3.7257349028630433`*^9, 3.7257349386387253`*^9}, {3.7257350304716225`*^9, 
   3.7257350340469246`*^9}, {3.725761538768242*^9, 3.725761756401375*^9}, {
   3.7257618422599983`*^9, 3.725761936620585*^9}, {3.725761996536306*^9, 
   3.725762001230238*^9}, {3.725762058208157*^9, 3.725762083579879*^9}, {
   3.725762154132779*^9, 3.725762301087221*^9}, {3.7257623525725193`*^9, 
   3.72576250199783*^9}, 3.725762612507316*^9, {3.725767541741908*^9, 
   3.725767555464981*^9}, {3.725767593049582*^9, 3.725767595171733*^9}, {
   3.725767630392771*^9, 3.725767631983444*^9}, 3.725821857812648*^9, {
   3.7258232971741037`*^9, 3.7258232986958895`*^9}, 3.7258234465006323`*^9, {
   3.7258235834496484`*^9, 3.7258236424043283`*^9}, {3.7258245041611757`*^9, 
   3.725824570345827*^9}, {3.725974312562398*^9, 3.7259743982986155`*^9}, {
   3.725974596252033*^9, 3.725974636316238*^9}, {3.7259746866554203`*^9, 
   3.7259747631967225`*^9}, {3.725983801642852*^9, 3.725983827858364*^9}, {
   3.725984266980613*^9, 3.7259842757888002`*^9}, {3.7259843792377405`*^9, 
   3.7259843853812923`*^9}, {3.7259848159739113`*^9, 3.725984867229804*^9}, {
   3.7259921939047084`*^9, 3.725992199359412*^9}, {3.7259924458815155`*^9, 
   3.7259924530483823`*^9}, {3.7259926810992365`*^9, 
   3.7259927100098677`*^9}, {3.725992744067995*^9, 3.725992789681968*^9}, {
   3.7259928235549693`*^9, 3.7259928558348885`*^9}, 3.725992976268667*^9, {
   3.7259930729963484`*^9, 3.725993105683544*^9}, {3.725993217421418*^9, 
   3.725993218052847*^9}, {3.7259933163666053`*^9, 3.7259933201251583`*^9}, {
   3.725993383230008*^9, 3.7259933834211373`*^9}, {3.7259935469011464`*^9, 
   3.725993600613619*^9}, {3.725993721766886*^9, 3.7259937222782335`*^9}, {
   3.725993761735026*^9, 3.7259937620712547`*^9}, {3.725994793124375*^9, 
   3.7259947932344503`*^9}, {3.7259948287475643`*^9, 3.725994860667239*^9}, {
   3.725995022685255*^9, 3.725995022947433*^9}, {3.725995923912219*^9, 
   3.7259959273365445`*^9}, {3.7261641896342845`*^9, 3.726164189921582*^9}, {
   3.7263168060398808`*^9, 3.7263168089738555`*^9}, {3.7263429652613745`*^9, 
   3.7263429655727377`*^9}, {3.72634300363752*^9, 3.726343058821433*^9}, {
   3.726343140960497*^9, 3.726343199696004*^9}, {3.7263432322308846`*^9, 
   3.726343290487573*^9}, {3.726343379169114*^9, 3.726343393535329*^9}, {
   3.7263441882371016`*^9, 3.7263442313713303`*^9}, {3.726344842822591*^9, 
   3.7263448604216523`*^9}, {3.7263450075991545`*^9, 
   3.7263453451902065`*^9}, {3.7263458465130124`*^9, 3.726345927001114*^9}, {
   3.7263461450592804`*^9, 3.72634614785818*^9}, {3.7264039187504597`*^9, 
   3.726403955142171*^9}, {3.726404024258103*^9, 3.7264040375201077`*^9}, 
   3.726404073038228*^9, {3.7264041819922104`*^9, 3.7264041824405155`*^9}, {
   3.7264042235684423`*^9, 3.7264042264884253`*^9}, {3.7264044094176407`*^9, 
   3.726404467594144*^9}, {3.7264045111217003`*^9, 3.7264045204820566`*^9}, {
   3.7264045518903847`*^9, 3.7264045986111097`*^9}, {3.7264106684194994`*^9, 
   3.7264107438837423`*^9}, {3.726575961954728*^9, 3.726575963456374*^9}, {
   3.726576079763389*^9, 3.726576140363369*^9}, {3.726576174851865*^9, 
   3.7265762591146317`*^9}, {3.726576731212392*^9, 3.7265767730052805`*^9}, {
   3.726576816397111*^9, 3.726576843789156*^9}, {3.726591440431503*^9, 
   3.7265915147122326`*^9}, {3.7265915779818616`*^9, 
   3.7265916069946404`*^9}, {3.72659165269116*^9, 3.7265917237537575`*^9}, {
   3.7265917642261677`*^9, 3.726591777081213*^9}, {3.7265918872076654`*^9, 
   3.726591918403818*^9}, {3.726598634037345*^9, 3.726598636344291*^9}, {
   3.7265986724082427`*^9, 3.7265986935681868`*^9}, {3.726598724381687*^9, 
   3.7265987404492216`*^9}, {3.72659877266115*^9, 3.726598808432596*^9}, {
   3.7266026576297417`*^9, 3.726602670096282*^9}, {3.726602716660967*^9, 
   3.726602765968793*^9}, {3.726602985714035*^9, 3.7266030358261523`*^9}, {
   3.7266145640032187`*^9, 3.726614644115815*^9}, 3.7266150086090345`*^9, {
   3.7266150757067547`*^9, 3.7266150787576437`*^9}, {3.7266151423289475`*^9, 
   3.726615150678152*^9}, {3.726615268136282*^9, 3.726615304261652*^9}, {
   3.7266156026228004`*^9, 3.7266156075906672`*^9}, {3.726617209238487*^9, 
   3.7266172732850585`*^9}, 3.726617346942017*^9, {3.7266174182923346`*^9, 
   3.7266174257018185`*^9}, {3.726617502355667*^9, 3.7266175752949414`*^9}, {
   3.7266176138478117`*^9, 3.72661764489583*^9}, {3.726617679248617*^9, 
   3.726617687583423*^9}, {3.726617730496232*^9, 3.726617754920527*^9}, {
   3.726617788091875*^9, 3.7266178366493635`*^9}, {3.7266179084281797`*^9, 
   3.72661790857778*^9}, {3.726617992741026*^9, 3.726617993393984*^9}, {
   3.7266181630926156`*^9, 3.726618234867257*^9}, {3.72661829421206*^9, 
   3.726618298314736*^9}, {3.7266183721416297`*^9, 3.726618421725565*^9}, {
   3.726618466262026*^9, 3.7266184696033926`*^9}, {3.726618611462363*^9, 
   3.726618615661219*^9}, {3.7266196112635756`*^9, 3.726619650664836*^9}, {
   3.72661971195957*^9, 3.7266197138788733`*^9}, 3.7266198939636087`*^9, 
   3.7266200524183807`*^9, {3.726620200931423*^9, 3.7266202252758365`*^9}, {
   3.7266205262286944`*^9, 3.726620575204921*^9}, {3.726620718366214*^9, 
   3.7266207323504496`*^9}, {3.726620901375808*^9, 3.726620917495019*^9}, {
   3.7266213942082663`*^9, 3.726621528279396*^9}, {3.726622578095032*^9, 
   3.726622595140188*^9}, {3.726624070754924*^9, 3.7266240836185946`*^9}, {
   3.726624634494421*^9, 3.7266246414538565`*^9}, 3.726624857494836*^9, {
   3.7266249755748296`*^9, 3.7266249860543456`*^9}, {3.7266251828319635`*^9, 
   3.7266252041035085`*^9}, 3.7266256729305477`*^9, 3.72662951573836*^9, 
   3.726629772754734*^9, {3.726629857665052*^9, 3.726629858049272*^9}, 
   3.7266302290514355`*^9, {3.726630664148883*^9, 3.7266306892782536`*^9}, 
   3.726631370800335*^9, 3.7266315171927414`*^9, {3.726672297082797*^9, 
   3.7266722974734297`*^9}, 3.726672405370949*^9, {3.726672462163785*^9, 
   3.7266724780438833`*^9}, {3.727980509838149*^9, 3.7279806179491835`*^9}, {
   3.7279806959663243`*^9, 3.727980742886283*^9}, {3.727980815401677*^9, 
   3.7279808180074525`*^9}, {3.727980996408391*^9, 3.7279809976482277`*^9}, {
   3.7279815748811927`*^9, 3.727981588919755*^9}, {3.727981714484282*^9, 
   3.727981723896694*^9}, {3.7280424428398995`*^9, 3.7280425610810404`*^9}, {
   3.7280428079311423`*^9, 3.728042810728183*^9}, {3.7280429382826424`*^9, 
   3.728042940392165*^9}, {3.7280434820099983`*^9, 3.728043514347433*^9}, {
   3.7280435889715295`*^9, 3.728043628444337*^9}, {3.728043887025771*^9, 
   3.728043907458915*^9}, {3.7280439722507415`*^9, 3.7280440265908813`*^9}, {
   3.728044459877381*^9, 3.7280444631928816`*^9}, {3.728044788782992*^9, 
   3.7280447969234715`*^9}, {3.7280448508310432`*^9, 3.728044882479805*^9}, {
   3.728044915021735*^9, 3.7280449210556707`*^9}, {3.7280450315499063`*^9, 
   3.728045063783352*^9}, 3.728045340990761*^9, 3.7280454623945665`*^9, {
   3.7280456544739513`*^9, 3.7280457411647544`*^9}, {3.7280460258152065`*^9, 
   3.7280460333081455`*^9}, {3.7280502729902773`*^9, 
   3.7280502774436984`*^9}, {3.7280505302247806`*^9, 3.72805054950716*^9}, 
   3.728050660826277*^9, {3.7280507381121244`*^9, 3.728050769020215*^9}, {
   3.7280508101945343`*^9, 3.728050835961691*^9}, 3.7280515070390396`*^9, {
   3.728052244839007*^9, 3.728052279825462*^9}, {3.728052516683296*^9, 
   3.7280525327311277`*^9}, {3.7280529570852575`*^9, 
   3.7280529903992095`*^9}, {3.7280530775263233`*^9, 
   3.7280530819955416`*^9}, {3.728053191675218*^9, 3.728053254288139*^9}, {
   3.728053345998083*^9, 3.7280533846657524`*^9}, {3.728067856732696*^9, 
   3.728067857092939*^9}, {3.7280693153475904`*^9, 3.7280693281137495`*^9}, {
   3.7280694111158867`*^9, 3.7280694126579266`*^9}, {3.7280881355301456`*^9, 
   3.728088138656255*^9}, {3.728088169136824*^9, 3.728088173048464*^9}, {
   3.728089360315158*^9, 3.7280893751701818`*^9}, {3.7280894422914762`*^9, 
   3.728089471039875*^9}, {3.728095424011295*^9, 3.7280954427468863`*^9}, {
   3.7280954826779156`*^9, 3.7280954858031397`*^9}, {3.7281256623504295`*^9, 
   3.7281256629285793`*^9}, {3.7281257017123723`*^9, 3.72812570379064*^9}, {
   3.7281262513100033`*^9, 3.728126264672079*^9}, {3.728126388217328*^9, 
   3.7281263952021847`*^9}, {3.728129864282553*^9, 3.728129915739049*^9}, {
   3.72813019042628*^9, 3.7281302039739747`*^9}, {3.728131780028529*^9, 
   3.7281318415181203`*^9}, {3.7281346856759586`*^9, 3.728134701360662*^9}, {
   3.7281379388968163`*^9, 3.7281379395405626`*^9}, {3.728139055920052*^9, 
   3.7281390738262463`*^9}, {3.72813944809818*^9, 3.728139470958703*^9}, {
   3.728139557892326*^9, 3.728139558398435*^9}, {3.728479333974032*^9, 
   3.7284793564284916`*^9}, {3.7284793996498117`*^9, 3.728479727952346*^9}, {
   3.728479793448206*^9, 3.7284798448332043`*^9}, {3.728479878303944*^9, 
   3.7284798784289303`*^9}, {3.7284803393060007`*^9, 
   3.7284804581106606`*^9}, {3.72848049136283*^9, 3.7284805246775403`*^9}, {
   3.728480566508397*^9, 3.7284805814625263`*^9}, {3.72848063818501*^9, 
   3.7284807412849464`*^9}, {3.728480791772307*^9, 3.7284807919129515`*^9}, {
   3.7284808435878963`*^9, 3.7284808436972876`*^9}, {3.72848118231487*^9, 
   3.7284811900653276`*^9}, {3.72848128130061*^9, 
   3.72848128153502*^9}},ExpressionUUID->"dc64756a-c29c-4c99-8e69-\
43cd92e012cb"],

Cell[BoxData["\<\"t=120_Ei=100_BGP=275\"\>"], "Output",
 CellChangeTimes->{
  3.728053254850651*^9, {3.728053351749943*^9, 3.728053385087633*^9}, 
   3.728067840591809*^9, {3.7280693240330286`*^9, 3.7280693329997387`*^9}, 
   3.7280694144331245`*^9, 3.728088173551803*^9, 3.728088581547122*^9, 
   3.728088756326499*^9, 3.728089381871703*^9, 3.728091363506635*^9, 
   3.728095494663077*^9, 3.728095749728878*^9, {3.7281262554515605`*^9, 
   3.728126280970027*^9}, 3.728126339364785*^9, 3.7281263966866355`*^9, 
   3.728129918192329*^9, 3.7281302210687227`*^9, 3.7281318466157227`*^9, 
   3.728134702862363*^9, 3.7281352427275734`*^9, 3.7281379403434963`*^9, 
   3.728139076624051*^9, 3.728139134110298*^9, 3.7281394751271114`*^9, 
   3.7281395597354126`*^9, 3.728478911287528*^9, {3.728479664182522*^9, 
   3.728479673542514*^9}, 3.7284797346559105`*^9, 3.7284798482865143`*^9, 
   3.728479878803953*^9, 3.728480743081913*^9, 3.72848079228796*^9, 
   3.7284808452911115`*^9, 3.72848119159667*^9, 
   3.728481283628895*^9},ExpressionUUID->"5a448c11-541b-4c82-96bc-\
1175a3b31ac5"],

Cell[BoxData["475"], "Output",
 CellChangeTimes->{
  3.728053254850651*^9, {3.728053351749943*^9, 3.728053385087633*^9}, 
   3.728067840591809*^9, {3.7280693240330286`*^9, 3.7280693329997387`*^9}, 
   3.7280694144331245`*^9, 3.728088173551803*^9, 3.728088581547122*^9, 
   3.728088756326499*^9, 3.728089381871703*^9, 3.728091363506635*^9, 
   3.728095494663077*^9, 3.728095749728878*^9, {3.7281262554515605`*^9, 
   3.728126280970027*^9}, 3.728126339364785*^9, 3.7281263966866355`*^9, 
   3.728129918192329*^9, 3.7281302210687227`*^9, 3.7281318466157227`*^9, 
   3.728134702862363*^9, 3.7281352427275734`*^9, 3.7281379403434963`*^9, 
   3.728139076624051*^9, 3.728139134110298*^9, 3.7281394751271114`*^9, 
   3.7281395597354126`*^9, 3.728478911287528*^9, {3.728479664182522*^9, 
   3.728479673542514*^9}, 3.7284797346559105`*^9, 3.7284798482865143`*^9, 
   3.728479878803953*^9, 3.728480743081913*^9, 3.72848079228796*^9, 
   3.7284808452911115`*^9, 3.72848119159667*^9, 
   3.7284812836757517`*^9},ExpressionUUID->"97d4e6c9-713a-4016-9d52-\
f9bf355b8520"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Signal Files\"\>"], "Print",
 CellChangeTimes->{
  3.728053254850651*^9, {3.728053351749943*^9, 3.728053385087633*^9}, 
   3.728067840595806*^9, {3.728069324037532*^9, 3.72806933300324*^9}, 
   3.728069414438128*^9, 3.7280881735568056`*^9, 3.7280885815511265`*^9, 
   3.728088756329503*^9, 3.728089381874705*^9, 3.728091363555668*^9, 
   3.728095494709955*^9, 3.728095750244532*^9, {3.7281262557641306`*^9, 
   3.728126280970027*^9}, 3.728126339364785*^9, 3.7281263966866355`*^9, 
   3.728129918192329*^9, 3.7281302210687227`*^9, 3.7281318466313486`*^9, 
   3.728134702862363*^9, 3.7281352427275734`*^9, 3.7281379403434963`*^9, 
   3.728139076624051*^9, 3.728139134110298*^9, 3.7281394751427374`*^9, 
   3.728139559751037*^9, 3.728478911287528*^9, {3.728479664182522*^9, 
   3.7284796735737658`*^9}, 3.728479734702787*^9, 3.728479848333392*^9, 
   3.728479878866457*^9, 3.728480743128785*^9, 3.728480792334837*^9, 
   3.728480845337989*^9, 3.728481191659173*^9, 
   3.728481283691377*^9},ExpressionUUID->"d0ab8a73-41c3-4be2-a737-\
f011d4b723b6"],

Cell[BoxData["\<\"Moly Files\"\>"], "Print",
 CellChangeTimes->{
  3.728053254850651*^9, {3.728053351749943*^9, 3.728053385087633*^9}, 
   3.728067840595806*^9, {3.728069324037532*^9, 3.72806933300324*^9}, 
   3.728069414438128*^9, 3.7280881735568056`*^9, 3.7280885815511265`*^9, 
   3.728088756329503*^9, 3.728089381874705*^9, 3.728091363555668*^9, 
   3.728095494709955*^9, 3.728095750244532*^9, {3.7281262557641306`*^9, 
   3.728126280970027*^9}, 3.728126339364785*^9, 3.7281263966866355`*^9, 
   3.728129918192329*^9, 3.7281302210687227`*^9, 3.7281318466313486`*^9, 
   3.728134702862363*^9, 3.7281352427275734`*^9, 3.7281379403434963`*^9, 
   3.728139076624051*^9, 3.728139134110298*^9, 3.7281394751427374`*^9, 
   3.728139559751037*^9, 3.728478911287528*^9, {3.728479664182522*^9, 
   3.7284796735737658`*^9}, 3.728479734702787*^9, 3.728479848333392*^9, 
   3.728479878866457*^9, 3.728480743128785*^9, 3.728480792334837*^9, 
   3.728480845337989*^9, 3.728481191659173*^9, 
   3.728481283691377*^9},ExpressionUUID->"164d1575-7ed9-49aa-bf92-\
4f8d12e21b68"],

Cell[BoxData["\<\"Dark Files\"\>"], "Print",
 CellChangeTimes->{
  3.728053254850651*^9, {3.728053351749943*^9, 3.728053385087633*^9}, 
   3.728067840595806*^9, {3.728069324037532*^9, 3.72806933300324*^9}, 
   3.728069414438128*^9, 3.7280881735568056`*^9, 3.7280885815511265`*^9, 
   3.728088756329503*^9, 3.728089381874705*^9, 3.728091363555668*^9, 
   3.728095494709955*^9, 3.728095750244532*^9, {3.7281262557641306`*^9, 
   3.728126280970027*^9}, 3.728126339364785*^9, 3.7281263966866355`*^9, 
   3.728129918192329*^9, 3.7281302210687227`*^9, 3.7281318466313486`*^9, 
   3.728134702862363*^9, 3.7281352427275734`*^9, 3.7281379403434963`*^9, 
   3.728139076624051*^9, 3.728139134110298*^9, 3.7281394751427374`*^9, 
   3.728139559751037*^9, 3.728478911287528*^9, {3.728479664182522*^9, 
   3.7284796735737658`*^9}, 3.728479734702787*^9, 3.728479848333392*^9, 
   3.728479878866457*^9, 3.728480743128785*^9, 3.728480792334837*^9, 
   3.728480845337989*^9, 3.728481191659173*^9, 
   3.728481283691377*^9},ExpressionUUID->"6d4763ee-2d49-40dc-a53e-\
ff7dae9c9819"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot Stokes Parameters with Pump Lights in Different Colors for each energy\
\>", "Section",
 CellChangeTimes->{{3.726629645454885*^9, 
  3.7266296888872924`*^9}},ExpressionUUID->"61c9b55e-9fb3-4aee-9358-\
3501c790fb73"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"energyPlots", "=", 
    RowBox[{"<|", "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energy", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pumpLight", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"m", "=", "1"}], ",", 
    RowBox[{"m", "\[LessEqual]", 
     RowBox[{"Length", "[", "energies", "]"}]}], ",", 
    RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plots", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"energyIndex", "=", "m"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", 
         RowBox[{"allStokes", "[", 
          RowBox[{"[", "energy", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"plotData", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"s", "=", 
         RowBox[{
          RowBox[{"allStokes", "[", 
           RowBox[{"[", "m", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "2"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", 
            RowBox[{"s", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"plotData", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"k", "-", "1", "-", 
                  RowBox[{".5", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "category2", "]"}], "-", "i"}], 
                    ")"}], "/", 
                    RowBox[{"Length", "[", "category2", "]"}]}], ")"}]}]}], 
                 ",", 
                 RowBox[{
                  RowBox[{"s", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"ErrorBar", "[", 
                RowBox[{
                 RowBox[{"s", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"height", "=", ".1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"plots", ",", 
          RowBox[{"ErrorListPlot", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{"plotData", ",", 
              RowBox[{
               RowBox[{"Keys", "[", "stokes", "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"960", ",", "600"}], "}"}]}], ",", 
            RowBox[{"AxesOrigin", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "height"}]}], "}"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "6"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "height"}], ",", "height"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"colorBlindPallete", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "False"}], ",", 
            RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "1", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "2", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "3", ",", "\"\<|\!\(\*SubscriptBox[\(P\), \(3\)]\)|\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "4", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\):C2\>\""}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "5", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\):S2\>\""}],
                   "}"}]}], "}"}], ",", "Automatic"}], "}"}]}]}], "]"}]}], 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"energyPlots", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"energies", "[", 
         RowBox[{"[", "m", "]"}], "]"}], "\[Rule]", 
        RowBox[{"Show", "[", 
         RowBox[{"plots", ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Stokes Parameters at \>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"energies", "[", 
              RowBox[{"[", "energyIndex", "]"}], "]"}], "]"}], "<>", 
            "\"\< eV \!\(\*SuperscriptBox[\(e\), \(-\)]\) energy\>\""}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "energyPlots", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<pumpLights_Energy=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"Keys", "[", "energyPlots", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
        "stringId", "<>", "\"\<.png\>\""}], ",", 
       RowBox[{"energyPlots", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "energyPlots"}], "Input",
 CellChangeTimes->{{3.7266296329707594`*^9, 3.7266296331847506`*^9}, {
   3.7266296919221334`*^9, 3.726629696327508*^9}, {3.726629780313285*^9, 
   3.7266297838093357`*^9}, {3.7266298725155315`*^9, 3.72662987762558*^9}, {
   3.7266299609304886`*^9, 3.726629974267811*^9}, {3.7266302935078344`*^9, 
   3.7266303823804893`*^9}, {3.7266304747488966`*^9, 3.726630491157727*^9}, {
   3.72663053666968*^9, 3.726630538134426*^9}, {3.726630758781905*^9, 
   3.7266307717578135`*^9}, 3.7266310444002976`*^9, {3.726631361242054*^9, 
   3.7266314576473083`*^9}, 3.7266315242265177`*^9, {3.726631560850387*^9, 
   3.7266315678251233`*^9}, {3.7266316100507946`*^9, 3.7266316535063033`*^9}, 
   3.726848116090891*^9, {3.727981136145689*^9, 3.7279811390406427`*^9}, 
   3.7279813676399035`*^9, {3.728050925576401*^9, 3.7280509694229484`*^9}, {
   3.7280542257794647`*^9, 3.7280542317798223`*^9}, {3.728054350158177*^9, 
   3.7280543623743887`*^9}, {3.72805461006026*^9, 3.728054623430371*^9}, {
   3.72805518178876*^9, 3.728055187775119*^9}, {3.7280552521087966`*^9, 
   3.728055259753272*^9}, {3.7280552932860746`*^9, 3.728055298646185*^9}, {
   3.728055333916593*^9, 3.7280553419203973`*^9}, 3.7280885714192877`*^9, {
   3.7280886176344748`*^9, 3.7280886995061846`*^9}, {3.72808883194701*^9, 
   3.7280888542982335`*^9}, {3.7280890281550107`*^9, 3.728089115717098*^9}, {
   3.728089205331572*^9, 3.7280892118189497`*^9}, {3.7280895178034325`*^9, 
   3.7280895519296217`*^9}, {3.728091216224549*^9, 3.728091353567929*^9}, {
   3.728091383609201*^9, 
   3.7280913865221653`*^9}},ExpressionUUID->"53786458-042d-44e4-a061-\
d19075d58a87"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"32.658373170731714`", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[46, 51], 0.9019607843137255], 
               NCache[
                Rational[53, 85], 0.6235294117647059], 0]], {
              
              PointBox[{{0.625, 0.05022069785113975}, {
               1.625, -0.014684800615711044`}, {2.625, 
               0.008413610541789998}, {3.625, -0.0010234903287647892`}, {
               4.625, 0.0016067844837028653`}}], {{
                
                LineBox[{{0.625, 0.05143673803706983}, {0.625, 
                 0.04900465766520967}}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.625, 0.05143673803706983}], 
                  Offset[{-1.5, 0}, {0.625, 0.05143673803706983}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.625, 0.04900465766520967}], 
                  Offset[{-1.5, 0}, {0.625, 0.04900465766520967}]}]}, {
                
                LineBox[{{1.625, -0.010761463710551757`}, {
                 1.625, -0.01860813752087033}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.625, -0.010761463710551757`}], 
                  Offset[{-1.5, 0}, {1.625, -0.010761463710551757`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.625, -0.01860813752087033}], 
                  Offset[{-1.5, 0}, {1.625, -0.01860813752087033}]}]}, {
                
                LineBox[{{2.625, 0.010630086299882942`}, {2.625, 
                 0.006197134783697055}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.625, 0.010630086299882942`}], 
                  Offset[{-1.5, 0}, {2.625, 0.010630086299882942`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.625, 0.006197134783697055}], 
                  Offset[{-1.5, 0}, {2.625, 0.006197134783697055}]}]}, {
                
                LineBox[{{3.625, 0.0010084328260546174`}, {
                 3.625, -0.003055413483584196}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.625, 0.0010084328260546174`}], 
                  Offset[{-1.5, 0}, {3.625, 0.0010084328260546174`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.625, -0.003055413483584196}], 
                  Offset[{-1.5, 0}, {3.625, -0.003055413483584196}]}]}, {
                
                LineBox[{{4.625, 0.007864514054801772}, {
                 4.625, -0.004650945087396042}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.625, 0.007864514054801772}], 
                  Offset[{-1.5, 0}, {4.625, 0.007864514054801772}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.625, -0.004650945087396042}], 
                  Offset[{-1.5, 0}, {4.625, -0.004650945087396042}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394205, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[86, 255], 0.33725490196078434`], 
               NCache[
                Rational[12, 17], 0.7058823529411765], 
               NCache[
                Rational[233, 255], 0.9137254901960784]]], {
              
              PointBox[{{0.75, 0.05095837115175703}, {
               1.75, -0.00460961454136929}, {2.75, 0.016141914182831802`}, {
               3.75, -0.013949207921103199`}, {
               4.75, -0.017341567217041772`}}], {{
                
                LineBox[{{0.75, 0.05215062950320548}, {0.75, 
                 0.049766112800308585`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.75, 0.05215062950320548}], 
                  Offset[{-1.5, 0}, {0.75, 0.05215062950320548}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.75, 0.049766112800308585`}], 
                  Offset[{-1.5, 0}, {0.75, 0.049766112800308585`}]}]}, {
                
                LineBox[{{1.75, 0.0008967875062773955}, {
                 1.75, -0.010116016589015977`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.75, 0.0008967875062773955}], 
                  Offset[{-1.5, 0}, {1.75, 0.0008967875062773955}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.75, -0.010116016589015977`}], 
                  Offset[{-1.5, 0}, {1.75, -0.010116016589015977`}]}]}, {
                
                LineBox[{{2.75, 0.01900868985497971}, {2.75, 
                 0.013275138510683893`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.75, 0.01900868985497971}], 
                  Offset[{-1.5, 0}, {2.75, 0.01900868985497971}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.75, 0.013275138510683893`}], 
                  Offset[{-1.5, 0}, {2.75, 0.013275138510683893`}]}]}, {
                
                LineBox[{{3.75, -0.009752167817836886}, {
                 3.75, -0.01814624802436951}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.75, -0.009752167817836886}], 
                  Offset[{-1.5, 0}, {3.75, -0.009752167817836886}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.75, -0.01814624802436951}], 
                  Offset[{-1.5, 0}, {3.75, -0.01814624802436951}]}]}, {
                
                LineBox[{{4.75, -0.015320696390443655`}, {
                 4.75, -0.01936243804363989}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.75, -0.015320696390443655`}], 
                  Offset[{-1.5, 0}, {4.75, -0.015320696390443655`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.75, -0.01936243804363989}], 
                  Offset[{-1.5, 0}, {4.75, -0.01936243804363989}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394259, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[0, 
               NCache[
                Rational[158, 255], 0.6196078431372549], 
               NCache[
                Rational[23, 51], 0.45098039215686275`]]], {
              
              PointBox[{{0.875, 0.05727807449073128}, {
               1.875, -0.010543734339199256`}, {2.875, 0.02093807915741716}, {
               3.875, -0.01843167134919193}, {
               4.875, -0.02263387508719726}}], {{
                
                LineBox[{{0.875, 0.06185334589484405}, {0.875, 
                 0.05270280308661851}}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.875, 0.06185334589484405}], 
                  Offset[{-1.5, 0}, {0.875, 0.06185334589484405}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.875, 0.05270280308661851}], 
                  Offset[{-1.5, 0}, {0.875, 0.05270280308661851}]}]}, {
                
                LineBox[{{1.875, -0.008940912671460693}, {
                 1.875, -0.01214655600693782}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.875, -0.008940912671460693}], 
                  Offset[{-1.5, 0}, {1.875, -0.008940912671460693}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.875, -0.01214655600693782}], 
                  Offset[{-1.5, 0}, {1.875, -0.01214655600693782}]}]}, {
                
                LineBox[{{2.875, 0.021806763084468325`}, {2.875, 
                 0.020069395230365997`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.875, 0.021806763084468325`}], 
                  Offset[{-1.5, 0}, {2.875, 0.021806763084468325`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.875, 0.020069395230365997`}], 
                  Offset[{-1.5, 0}, {2.875, 0.020069395230365997`}]}]}, {
                
                LineBox[{{3.875, -0.016221193852938846`}, {
                 3.875, -0.02064214884544501}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.875, -0.016221193852938846`}], 
                  Offset[{-1.5, 0}, {3.875, -0.016221193852938846`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.875, -0.02064214884544501}], 
                  Offset[{-1.5, 0}, {3.875, -0.02064214884544501}]}]}, {
                
                LineBox[{{4.875, -0.02184394502083678}, {
                 4.875, -0.023423805153557742`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.875, -0.02184394502083678}], 
                  Offset[{-1.5, 0}, {4.875, -0.02184394502083678}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.875, -0.023423805153557742`}], 
                  Offset[{-1.5, 0}, {4.875, -0.023423805153557742`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394313, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[16, 17], 0.9411764705882353], 
               NCache[
                Rational[76, 85], 0.8941176470588236], 
               NCache[
                Rational[22, 85], 0.25882352941176473`]]], {
              
              PointBox[{{1., 0.050421099015046406`}, {
               2., -0.012069471619613035`}, {3., 0.007479341220920549}, {4., 
               0.00402675420350972}, {5., 0.009635157651099025}}], {{
                
                LineBox[{{1., 0.05294047375291937}, {1., 
                 0.047901724277173444`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1., 0.05294047375291937}], 
                  Offset[{-1.5, 0}, {1., 0.05294047375291937}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1., 0.047901724277173444`}], 
                  Offset[{-1.5, 0}, {1., 0.047901724277173444`}]}]}, {
                
                LineBox[{{2., -0.009740115630986377}, {
                 2., -0.014398827608239692`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2., -0.009740115630986377}], 
                  Offset[{-1.5, 0}, {2., -0.009740115630986377}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2., -0.014398827608239692`}], 
                  Offset[{-1.5, 0}, {2., -0.014398827608239692`}]}]}, {
                
                LineBox[{{3., 0.009912723920256137}, {3., 
                 0.00504595852158496}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3., 0.009912723920256137}], 
                  Offset[{-1.5, 0}, {3., 0.009912723920256137}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3., 0.00504595852158496}], 
                  Offset[{-1.5, 0}, {3., 0.00504595852158496}]}]}, {
                
                LineBox[{{4., 0.005351650727277907}, {4., 
                 0.0027018576797415332`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4., 0.005351650727277907}], 
                  Offset[{-1.5, 0}, {4., 0.005351650727277907}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4., 0.0027018576797415332`}], 
                  Offset[{-1.5, 0}, {4., 0.0027018576797415332`}]}]}, {
                
                LineBox[{{5., 0.012793067221020846`}, {5., 
                 0.006477248081177205}}], 
                LineBox[{
                  Offset[{1.5, 0}, {5., 0.012793067221020846`}], 
                  Offset[{-1.5, 0}, {5., 0.012793067221020846`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {5., 0.006477248081177205}], 
                  Offset[{-1.5, 0}, {5., 0.006477248081177205}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394367, {}}]& ], {}}}, {}, {}, {}, {}}}, {
       ImageSize -> Large, PlotLabel -> 
        FormBox["\"Stokes Parameters at 32.6584 eV \
\\!\\(\\*SuperscriptBox[\\(e\\), \\(-\\)]\\) energy\"", TraditionalForm], 
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0., -0.1}, PlotRange -> {{0, 6}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0., -0.1}, BaseStyle -> {FontSize -> 18, 
          PointSize[Large]}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {{}, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 6}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {{{1, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 
             TraditionalForm]}, {2, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"", 
             TraditionalForm]}, {3, 
            FormBox[
            "\"|\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\)|\"", 
             TraditionalForm]}, {4, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\):C2\"", 
             TraditionalForm]}, {5, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\):S2\"", 
             TraditionalForm]}}, Automatic}}],FormBox[
       TagBox[
        GridBox[{{
           FormBox[
            
            TemplateBox[{"\"noPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6013071895424836, 0.41568627450980394`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[46/51, 53/85, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"piPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718955`, 0.47058823529411764`, 
                    0.6091503267973856], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[86/255, 12/17, 233/255]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s+Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4130718954248366, 0.3006535947712418], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 158/255, 23/51]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s-Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6274509803921569, 0.596078431372549, 
                    0.17254901960784313`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[16/17, 76/85, 22/85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"25.216741463414635`", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[46, 51], 0.9019607843137255], 
               NCache[
                Rational[53, 85], 0.6235294117647059], 0]], {
              
              PointBox[{{0.625, -0.006353355349713041}, {1.625, 
               0.037194094591217496`}, {2.625, 0.047814395945485526`}, {
               3.625, -0.04711916146356048}, {
               4.625, -0.04765565649053444}}], {{
                
                LineBox[{{0.625, -0.0028224650030375604`}, {
                 0.625, -0.009884245696388523}}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.625, -0.0028224650030375604`}], 
                  Offset[{-1.5, 0}, {0.625, -0.0028224650030375604`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.625, -0.009884245696388523}], 
                  Offset[{-1.5, 0}, {0.625, -0.009884245696388523}]}]}, {
                LineBox[{{1.625, 0.044138350312983424`}, {1.625, 
                 0.030249838869451567`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.625, 0.044138350312983424`}], 
                  Offset[{-1.5, 0}, {1.625, 0.044138350312983424`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.625, 0.030249838869451567`}], 
                  Offset[{-1.5, 0}, {1.625, 0.030249838869451567`}]}]}, {
                
                LineBox[{{2.625, 0.04815260320829258}, {2.625, 
                 0.04747618868267847}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.625, 0.04815260320829258}], 
                  Offset[{-1.5, 0}, {2.625, 0.04815260320829258}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.625, 0.04747618868267847}], 
                  Offset[{-1.5, 0}, {2.625, 0.04747618868267847}]}]}, {
                
                LineBox[{{3.625, -0.04409971307039405}, {
                 3.625, -0.05013860985672691}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.625, -0.04409971307039405}], 
                  Offset[{-1.5, 0}, {3.625, -0.04409971307039405}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.625, -0.05013860985672691}], 
                  Offset[{-1.5, 0}, {3.625, -0.05013860985672691}]}]}, {
                
                LineBox[{{4.625, -0.04563513904113784}, {
                 4.625, -0.04967617393993103}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.625, -0.04563513904113784}], 
                  Offset[{-1.5, 0}, {4.625, -0.04563513904113784}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.625, -0.04967617393993103}], 
                  Offset[{-1.5, 0}, {4.625, -0.04967617393993103}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394421, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[86, 255], 0.33725490196078434`], 
               NCache[
                Rational[12, 17], 0.7058823529411765], 
               NCache[
                Rational[233, 255], 0.9137254901960784]]], {
              
              PointBox[{{0.75, 0.0029797286430545845`}, {1.75, 
               0.022232934380320053`}, {2.75, 0.03069498139884921}, {
               3.75, -0.02323691422524482}, {4.75, -0.03317893344553113}}], {{
                
                LineBox[{{0.75, 0.006011607912651751}, {
                 0.75, -0.000052150626542581645`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.75, 0.006011607912651751}], 
                  Offset[{-1.5, 0}, {0.75, 0.006011607912651751}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.75, -0.000052150626542581645`}], 
                  Offset[{-1.5, 0}, {0.75, -0.000052150626542581645`}]}]}, {
                
                LineBox[{{1.75, 0.03406739126222353}, {1.75, 
                 0.010398477498416577`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.75, 0.03406739126222353}], 
                  Offset[{-1.5, 0}, {1.75, 0.03406739126222353}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.75, 0.010398477498416577`}], 
                  Offset[{-1.5, 0}, {1.75, 0.010398477498416577`}]}]}, {
                
                LineBox[{{2.75, 0.03475617966460626}, {2.75, 
                 0.026633783133092167`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.75, 0.03475617966460626}], 
                  Offset[{-1.5, 0}, {2.75, 0.03475617966460626}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.75, 0.026633783133092167`}], 
                  Offset[{-1.5, 0}, {2.75, 0.026633783133092167`}]}]}, {
                LineBox[{{3.75, -0.014947444717598143`}, {
                 3.75, -0.031526383732891496`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.75, -0.014947444717598143`}], 
                  Offset[{-1.5, 0}, {3.75, -0.014947444717598143`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.75, -0.031526383732891496`}], 
                  Offset[{-1.5, 0}, {3.75, -0.031526383732891496`}]}]}, {
                
                LineBox[{{4.75, -0.02869679997782883}, {
                 4.75, -0.037661066913233426`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.75, -0.02869679997782883}], 
                  Offset[{-1.5, 0}, {4.75, -0.02869679997782883}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.75, -0.037661066913233426`}], 
                  Offset[{-1.5, 0}, {4.75, -0.037661066913233426`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394475, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[0, 
               NCache[
                Rational[158, 255], 0.6196078431372549], 
               NCache[
                Rational[23, 51], 0.45098039215686275`]]], {
              
              PointBox[{{0.875, 0.010932314247324527`}, {1.875, 
               0.0012959551452696103`}, {2.875, 0.020505451288213964`}, {
               3.875, -0.025357463142786082`}, {
               4.875, -0.011861391549777592`}}], {{
                
                LineBox[{{0.875, 0.019538115488723973`}, {0.875, 
                 0.002326513005925082}}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.875, 0.019538115488723973`}], 
                  Offset[{-1.5, 0}, {0.875, 0.019538115488723973`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.875, 0.002326513005925082}], 
                  Offset[{-1.5, 0}, {0.875, 0.002326513005925082}]}]}, {
                
                LineBox[{{1.875, 0.010485646759387783`}, {
                 1.875, -0.007893736468848563}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.875, 0.010485646759387783`}], 
                  Offset[{-1.5, 0}, {1.875, 0.010485646759387783`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.875, -0.007893736468848563}], 
                  Offset[{-1.5, 0}, {1.875, -0.007893736468848563}]}]}, {
                
                LineBox[{{2.875, 0.02530626262549699}, {2.875, 
                 0.015704639950930938`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.875, 0.02530626262549699}], 
                  Offset[{-1.5, 0}, {2.875, 0.02530626262549699}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.875, 0.015704639950930938`}], 
                  Offset[{-1.5, 0}, {2.875, 0.015704639950930938`}]}]}, {
                
                LineBox[{{3.875, -0.017483208139953275`}, {
                 3.875, -0.033231718145618885`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.875, -0.017483208139953275`}], 
                  Offset[{-1.5, 0}, {3.875, -0.017483208139953275`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.875, -0.033231718145618885`}], 
                  Offset[{-1.5, 0}, {3.875, -0.033231718145618885`}]}]}, {
                
                LineBox[{{4.875, -0.011016497093403237`}, {
                 4.875, -0.012706286006151948`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.875, -0.011016497093403237`}], 
                  Offset[{-1.5, 0}, {4.875, -0.011016497093403237`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.875, -0.012706286006151948`}], 
                  Offset[{-1.5, 0}, {4.875, -0.012706286006151948`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394529, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[16, 17], 0.9411764705882353], 
               NCache[
                Rational[76, 85], 0.8941176470588236], 
               NCache[
                Rational[22, 85], 0.25882352941176473`]]], {
              
              PointBox[{{1., -0.003823887213276847}, {2., 
               0.013470862369564685`}, {3., 0.02466138651459528}, {
               4., -0.021087887232710767`}, {5., -0.02630440958762852}}], {{
                
                LineBox[{{1., -0.00006888432377530817}, {
                 1., -0.007578890102778386}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1., -0.00006888432377530817}], 
                  Offset[{-1.5, 0}, {1., -0.00006888432377530817}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1., -0.007578890102778386}], 
                  Offset[{-1.5, 0}, {1., -0.007578890102778386}]}]}, {
                
                LineBox[{{2., 0.017493905433164415`}, {2., 
                 0.009447819305964954}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2., 0.017493905433164415`}], 
                  Offset[{-1.5, 0}, {2., 0.017493905433164415`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2., 0.009447819305964954}], 
                  Offset[{-1.5, 0}, {2., 0.009447819305964954}]}]}, {
                
                LineBox[{{3., 0.027749674428986695`}, {3., 
                 0.021573098600203865`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3., 0.027749674428986695`}], 
                  Offset[{-1.5, 0}, {3., 0.027749674428986695`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3., 0.021573098600203865`}], 
                  Offset[{-1.5, 0}, {3., 0.021573098600203865`}]}]}, {
                LineBox[{{4., -0.016500351819026326`}, {
                 4., -0.025675422646395208`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4., -0.016500351819026326`}], 
                  Offset[{-1.5, 0}, {4., -0.016500351819026326`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4., -0.025675422646395208`}], 
                  Offset[{-1.5, 0}, {4., -0.025675422646395208`}]}]}, {
                
                LineBox[{{5., -0.022459919340221922`}, {
                 5., -0.030148899835035117`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {5., -0.022459919340221922`}], 
                  Offset[{-1.5, 0}, {5., -0.022459919340221922`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {5., -0.030148899835035117`}], 
                  Offset[{-1.5, 0}, {5., -0.030148899835035117`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394583, {}}]& ], {}}}, {}, {}, {}, {}}}, {
       ImageSize -> Large, PlotLabel -> 
        FormBox["\"Stokes Parameters at 25.2167 eV \
\\!\\(\\*SuperscriptBox[\\(e\\), \\(-\\)]\\) energy\"", TraditionalForm], 
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0., -0.1}, PlotRange -> {{0, 6}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0., -0.1}, BaseStyle -> {FontSize -> 18, 
          PointSize[Large]}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {{}, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 6}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {{{1, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 
             TraditionalForm]}, {2, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"", 
             TraditionalForm]}, {3, 
            FormBox[
            "\"|\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\)|\"", 
             TraditionalForm]}, {4, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\):C2\"", 
             TraditionalForm]}, {5, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\):S2\"", 
             TraditionalForm]}}, Automatic}}],FormBox[
       TagBox[
        GridBox[{{
           FormBox[
            
            TemplateBox[{"\"noPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6013071895424836, 0.41568627450980394`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[46/51, 53/85, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"piPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718955`, 0.47058823529411764`, 
                    0.6091503267973856], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[86/255, 12/17, 233/255]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s+Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4130718954248366, 0.3006535947712418], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 158/255, 23/51]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s-Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6274509803921569, 0.596078431372549, 
                    0.17254901960784313`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[16/17, 76/85, 22/85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"15.542620243902434`", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[46, 51], 0.9019607843137255], 
               NCache[
                Rational[53, 85], 0.6235294117647059], 0]], {
              
              PointBox[{{0.625, -0.07934342950259894}, {1.625, 
               0.02764070013932145}, {2.625, 0.04768898748645962}, {
               3.625, -0.01138887700819715}, {
               4.625, -0.05633166231261449}}], {{
                
                LineBox[{{0.625, -0.07092569961457908}, {
                 0.625, -0.0877611593906188}}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.625, -0.07092569961457908}], 
                  Offset[{-1.5, 0}, {0.625, -0.07092569961457908}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.625, -0.0877611593906188}], 
                  Offset[{-1.5, 0}, {0.625, -0.0877611593906188}]}]}, {
                
                LineBox[{{1.625, 0.062326404978208044`}, {
                 1.625, -0.007045004699565146}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.625, 0.062326404978208044`}], 
                  Offset[{-1.5, 0}, {1.625, 0.062326404978208044`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.625, -0.007045004699565146}], 
                  Offset[{-1.5, 0}, {1.625, -0.007045004699565146}]}]}, {
                
                LineBox[{{2.625, 0.05857576744037053}, {2.625, 
                 0.0368022075325487}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.625, 0.05857576744037053}], 
                  Offset[{-1.5, 0}, {2.625, 0.05857576744037053}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.625, 0.0368022075325487}], 
                  Offset[{-1.5, 0}, {2.625, 0.0368022075325487}]}]}, {
                
                LineBox[{{3.625, 0.004138363327008102}, {
                 3.625, -0.0269161173434024}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.625, 0.004138363327008102}], 
                  Offset[{-1.5, 0}, {3.625, 0.004138363327008102}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.625, -0.0269161173434024}], 
                  Offset[{-1.5, 0}, {3.625, -0.0269161173434024}]}]}, {
                
                LineBox[{{4.625, -0.03954073278038521}, {
                 4.625, -0.07312259184484377}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.625, -0.03954073278038521}], 
                  Offset[{-1.5, 0}, {4.625, -0.03954073278038521}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.625, -0.07312259184484377}], 
                  Offset[{-1.5, 0}, {4.625, -0.07312259184484377}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394637, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[86, 255], 0.33725490196078434`], 
               NCache[
                Rational[12, 17], 0.7058823529411765], 
               NCache[
                Rational[233, 255], 0.9137254901960784]]], {
              
              PointBox[{{0.75, -0.043276549618553546`}, {
               1.75, -0.033514055310638426`}, {2.75, 0.0323321874238282}, {
               3.75, 0.000846410699566222}, {
               4.75, -0.042881364365238255`}}], {{
                
                LineBox[{{0.75, -0.01341742762401981}, {
                 0.75, -0.07313567161308729}}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.75, -0.01341742762401981}], 
                  Offset[{-1.5, 0}, {0.75, -0.01341742762401981}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.75, -0.07313567161308729}], 
                  Offset[{-1.5, 0}, {0.75, -0.07313567161308729}]}]}, {
                LineBox[{{1.75, -0.019501555100526154`}, {
                 1.75, -0.0475265555207507}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.75, -0.019501555100526154`}], 
                  Offset[{-1.5, 0}, {1.75, -0.019501555100526154`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.75, -0.0475265555207507}], 
                  Offset[{-1.5, 0}, {1.75, -0.0475265555207507}]}]}, {
                
                LineBox[{{2.75, 0.04070946868469666}, {2.75, 
                 0.023954906162959737`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.75, 0.04070946868469666}], 
                  Offset[{-1.5, 0}, {2.75, 0.04070946868469666}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.75, 0.023954906162959737`}], 
                  Offset[{-1.5, 0}, {2.75, 0.023954906162959737`}]}]}, {
                
                LineBox[{{3.75, 0.009082071229384238}, {
                 3.75, -0.007389249830251794}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.75, 0.009082071229384238}], 
                  Offset[{-1.5, 0}, {3.75, 0.009082071229384238}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.75, -0.007389249830251794}], 
                  Offset[{-1.5, 0}, {3.75, -0.007389249830251794}]}]}, {
                
                LineBox[{{4.75, -0.031906015361128894`}, {
                 4.75, -0.053856713369347615`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.75, -0.031906015361128894`}], 
                  Offset[{-1.5, 0}, {4.75, -0.031906015361128894`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.75, -0.053856713369347615`}], 
                  Offset[{-1.5, 0}, {4.75, -0.053856713369347615`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394691, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[0, 
               NCache[
                Rational[158, 255], 0.6196078431372549], 
               NCache[
                Rational[23, 51], 0.45098039215686275`]]], {
              
              PointBox[{{0.875, -0.057483135648121214`}, {1.875, 
               0.051165717831223284`}, {2.875, 0.029094516980838602`}, {
               3.875, -0.018169575795476848`}, {
               4.875, -0.03377347139061663}}], {{
                
                LineBox[{{0.875, -0.05055254761579646}, {
                 0.875, -0.06441372368044597}}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.875, -0.05055254761579646}], 
                  Offset[{-1.5, 0}, {0.875, -0.05055254761579646}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {0.875, -0.06441372368044597}], 
                  Offset[{-1.5, 0}, {0.875, -0.06441372368044597}]}]}, {
                
                LineBox[{{1.875, 0.06875432212308763}, {1.875, 
                 0.03357711353935893}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.875, 0.06875432212308763}], 
                  Offset[{-1.5, 0}, {1.875, 0.06875432212308763}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1.875, 0.03357711353935893}], 
                  Offset[{-1.5, 0}, {1.875, 0.03357711353935893}]}]}, {
                
                LineBox[{{2.875, 0.030724976967181634`}, {2.875, 
                 0.02746405699449557}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.875, 0.030724976967181634`}], 
                  Offset[{-1.5, 0}, {2.875, 0.030724976967181634`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2.875, 0.02746405699449557}], 
                  Offset[{-1.5, 0}, {2.875, 0.02746405699449557}]}]}, {
                
                LineBox[{{3.875, -0.01165732354918615}, {
                 3.875, -0.024681828041767544`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.875, -0.01165732354918615}], 
                  Offset[{-1.5, 0}, {3.875, -0.01165732354918615}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3.875, -0.024681828041767544`}], 
                  Offset[{-1.5, 0}, {3.875, -0.024681828041767544`}]}]}, {
                
                LineBox[{{4.875, -0.030285687652703383`}, {
                 4.875, -0.037261255128529874`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.875, -0.030285687652703383`}], 
                  Offset[{-1.5, 0}, {4.875, -0.030285687652703383`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4.875, -0.037261255128529874`}], 
                  Offset[{-1.5, 0}, {4.875, -0.037261255128529874`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394745, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[16, 17], 0.9411764705882353], 
               NCache[
                Rational[76, 85], 0.8941176470588236], 
               NCache[
                Rational[22, 85], 0.25882352941176473`]]], {
              
              PointBox[{{1., -0.01733198779509837}, {2., 
               0.00455703260614631}, {3., 0.024135534092005324`}, {
               4., -0.009663904324338692}, {5., 0.030911689761787042`}}], {{
                
                LineBox[{{1., 0.003492871068477621}, {
                 1., -0.03815684665867436}}], 
                LineBox[{
                  Offset[{1.5, 0}, {1., 0.003492871068477621}], 
                  Offset[{-1.5, 0}, {1., 0.003492871068477621}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {1., -0.03815684665867436}], 
                  Offset[{-1.5, 0}, {1., -0.03815684665867436}]}]}, {
                LineBox[{{2., 0.009985010725436328}, {
                 2., -0.0008709455131437069}}], 
                LineBox[{
                  Offset[{1.5, 0}, {2., 0.009985010725436328}], 
                  Offset[{-1.5, 0}, {2., 0.009985010725436328}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {2., -0.0008709455131437069}], 
                  Offset[{-1.5, 0}, {2., -0.0008709455131437069}]}]}, {
                
                LineBox[{{3., 0.035402173735716705`}, {3., 
                 0.012868894448293944`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {3., 0.035402173735716705`}], 
                  Offset[{-1.5, 0}, {3., 0.035402173735716705`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {3., 0.012868894448293944`}], 
                  Offset[{-1.5, 0}, {3., 0.012868894448293944`}]}]}, {
                
                LineBox[{{4., -0.0037625618889117456`}, {
                 4., -0.015565246759765639`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {4., -0.0037625618889117456`}], 
                  Offset[{-1.5, 0}, {4., -0.0037625618889117456`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {4., -0.015565246759765639`}], 
                  Offset[{-1.5, 0}, {4., -0.015565246759765639`}]}]}, {
                
                LineBox[{{5., 0.04627207069550395}, {5., 
                 0.015551308828070133`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {5., 0.04627207069550395}], 
                  Offset[{-1.5, 0}, {5., 0.04627207069550395}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {5., 0.015551308828070133`}], 
                  Offset[{-1.5, 0}, {5., 0.015551308828070133`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$394799, {}}]& ], {}}}, {}, {}, {}, {}}}, {
       ImageSize -> Large, PlotLabel -> 
        FormBox["\"Stokes Parameters at 15.5426 eV \
\\!\\(\\*SuperscriptBox[\\(e\\), \\(-\\)]\\) energy\"", TraditionalForm], 
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0., -0.1}, PlotRange -> {{0, 6}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0., -0.1}, BaseStyle -> {FontSize -> 18, 
          PointSize[Large]}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {{}, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 6}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {{{1, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"", 
             TraditionalForm]}, {2, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"", 
             TraditionalForm]}, {3, 
            FormBox[
            "\"|\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\)|\"", 
             TraditionalForm]}, {4, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\):C2\"", 
             TraditionalForm]}, {5, 
            FormBox[
            "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\):S2\"", 
             TraditionalForm]}}, Automatic}}],FormBox[
       TagBox[
        GridBox[{{
           FormBox[
            
            TemplateBox[{"\"noPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6013071895424836, 0.41568627450980394`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[46/51, 53/85, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"piPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718955`, 0.47058823529411764`, 
                    0.6091503267973856], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[86/255, 12/17, 233/255]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s+Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4130718954248366, 0.3006535947712418], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 158/255, 23/51]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s-Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6274509803921569, 0.596078431372549, 
                    0.17254901960784313`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[16/17, 76/85, 22/85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.728055260848595*^9, 3.7280553455628233`*^9, 3.7280678601159782`*^9, 
   3.7280693455596485`*^9, 3.7280694247851105`*^9, 3.7280881864535093`*^9, {
   3.7280885728972855`*^9, 3.728088597571936*^9}, {3.7280886439383364`*^9, 
   3.7280887135477505`*^9}, 3.7280887693553753`*^9, {3.728088833174845*^9, 
   3.7280888554350076`*^9}, {3.7280890196042423`*^9, 3.728089031981593*^9}, {
   3.7280890656022797`*^9, 3.728089116642723*^9}, 3.7280892127936087`*^9, 
   3.728089394482214*^9, {3.7280913745801067`*^9, 3.728091389279026*^9}, {
   3.7280955173833203`*^9, 3.7280955330249743`*^9}, 3.7280957211146727`*^9, 
   3.728095761385818*^9, 3.728126413781511*^9, 3.7281299356466026`*^9, 
   3.728130237882221*^9, 3.7281318594215937`*^9, 3.7281347212002897`*^9, 
   3.7281379509631*^9, 3.7281391473092036`*^9, 3.7281394864796157`*^9, 
   3.728139570414668*^9, 3.728478929382353*^9, 3.7284797512819757`*^9, 
   3.7284798605059905`*^9, 3.728479890632782*^9, 3.728480058658004*^9, 
   3.728480758676585*^9, 3.7284808056168756`*^9, 3.7284808555885963`*^9, 
   3.7284812066600647`*^9, 
   3.7284813050363955`*^9},ExpressionUUID->"3b219859-2ccf-4ec4-af83-\
31c1fe6afbc6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.728088668633156*^9, 3.7280886712409325`*^9}, 
   3.7280890398609104`*^9},ExpressionUUID->"5970d484-4bb3-4658-bce0-\
e107cbaff34a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot Individual Stokes Parameters as a Function of Electron Energy\
\>", "Section",
 CellChangeTimes->{{3.7266286472025595`*^9, 
  3.7266286701066465`*^9}},ExpressionUUID->"febb384b-7618-4a55-8fc6-\
f1ae3cb81387"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotLabels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\!\(\*SubscriptBox[\(P\), \(0\)]\)\>\"", ",", 
     "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)\>\"", ",", 
     "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
     "\"\<|\!\(\*SubscriptBox[\(P\), \(3\)]\)|\>\"", ",", 
     "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\):\!\(\*SubscriptBox[\(C\), \(2\)]\
\)\>\"", ",", 
     "\"\<\!\(\*SubscriptBox[\(P\), \(3\)]\):\!\(\*SubscriptBox[\(S\), \(2\)]\
\)\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"textLabels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<P0\>\"", ",", "\"\<P1\>\"", ",", "\"\<P2\>\"", ",", "\"\<P3mag\>\"", 
     ",", "\"\<P3c2\>\"", ",", "\"\<P3s2\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energy", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pumpLight", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"valueOrError", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotData", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plots", "=", 
    RowBox[{"<|", "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"stokesIndex", "=", "1"}], ",", 
    RowBox[{"stokesIndex", "\[LessEqual]", " ", 
     RowBox[{"Length", "[", "plotLabels", "]"}]}], ",", 
    RowBox[{"stokesIndex", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotPoints", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"energy", "=", "1"}], ",", 
       RowBox[{"energy", "\[LessEqual]", 
        RowBox[{"Length", "[", "allStokes", "]"}]}], ",", 
       RowBox[{"energy", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"plotPoint", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Keys", "[", "allStokes", "]"}], "[", 
              RowBox[{"[", "energy", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"allStokes", "[", 
                 RowBox[{"[", "energy", "]"}], "]"}], "[", 
                RowBox[{"[", "pumpLight", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"stokesNames", "[", 
               RowBox[{"[", "stokesIndex", "]"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"ErrorBar", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"allStokes", "[", 
                RowBox[{"[", "energy", "]"}], "]"}], "[", 
               RowBox[{"[", "pumpLight", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"stokesErrNames", "[", 
              RowBox[{"[", "stokesIndex", "]"}], "]"}], "]"}], "]"}]}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"plotPoints", ",", "plotPoint"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"plotData", ",", 
       RowBox[{
        RowBox[{"plotLabels", "[", 
         RowBox[{"[", "stokesIndex", "]"}], "]"}], "\[Rule]", 
        "plotPoints"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"plots", ",", 
       RowBox[{
        RowBox[{"plotLabels", "[", 
         RowBox[{"[", "stokesIndex", "]"}], "]"}], "\[Rule]", 
        "\[IndentingNewLine]", 
        RowBox[{"ErrorListPlot", "[", 
         RowBox[{"plotPoints", ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
          RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "  ", 
           RowBox[{
            RowBox[{"plotLabels", "[", 
             RowBox[{"[", "stokesIndex", "]"}], "]"}], "<>", " ", 
            "\"\< Values vs. Electron Energy\>\""}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Electron Energy (eV)\>\"", ",", "None"}], "}"}]}]}], 
         "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "plots", "\[IndentingNewLine]", "plotData", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "plots", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<pumpLights_stokesParameter=\>\"", "<>", 
        RowBox[{"textLabels", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<_\>\"", "<>", "stringId", 
        "<>", "\"\<.png\>\""}], ",", 
       RowBox[{"plots", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<stokesPlots.png\>\"", ",", "plots", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQHZCw6suPw68d58w/A6abppku/QmkZSR5ToHos3dF
b4Do656yr0D0POeWvyA6Lu0amJZL/sfxC0jLF5bxgeh/vuslQXTWtwcqIHqd
pYIRiH7yowxMHxOwNAPRS65Z24Do/a1fXEC0BLOZF1i8QT4CRO958iweRFtV
v8wE0TphP3NA9K4HUvVgc+JnrgDReauq1oDoBazum0B0QPjnbSC6xWLiHhA9
i7HtJIjexzH3DIi21/txAUTvzJxxEUQrhQVdB9G/b54E0+sb170C0R4BQv/B
7uqV4v0NpAX+/BAC0ed+vtoRdwRobufGPSD60Rz95qPHXjt2bPneCaIXFRyY
CKJ/fDgHpnfMTpgOop30CuaD6EkSfhbHgfSFGUFgGgCPRe+8
  "],ExpressionUUID->"59631229-721d-4469-8c80-8113885ed85d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(0\\)]\\)\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
        AbsoluteThickness[1.6], 
        StyleBox[{
          PointBox[{{32.45836602787457, 10339.611078288699`}, {
           25.016736585365855`, 643.1474605103409}, {15.34261831010452, 
           35.854412740440715`}}], {{
            LineBox[{{32.45836602787457, 10362.19747694739}, {
             32.45836602787457, 10317.024679630007`}}], 
            LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, 10362.19747694739}], 
              Offset[{-1.5, 0}, {32.45836602787457, 10362.19747694739}]}], 
            LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, 10317.024679630007`}], 
              Offset[{-1.5, 0}, {32.45836602787457, 
               10317.024679630007`}]}]}, {
            LineBox[{{25.016736585365855`, 664.4368710037882}, {
             25.016736585365855`, 621.8580500168937}}], 
            LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, 664.4368710037882}], 
              Offset[{-1.5, 0}, {25.016736585365855`, 664.4368710037882}]}], 
            LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, 621.8580500168937}], 
              Offset[{-1.5, 0}, {25.016736585365855`, 
               621.8580500168937}]}]}, {
            LineBox[{{15.34261831010452, 37.67394329149689}, {
             15.34261831010452, 34.03488218938454}}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, 37.67394329149689}], 
              Offset[{-1.5, 0}, {15.34261831010452, 37.67394329149689}]}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, 34.03488218938454}], 
              Offset[{-1.5, 0}, {15.34261831010452, 34.03488218938454}]}]}}},
         FontSize->18]}, {}}, {}, {}, {}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{15.075184752014364`, 0},
     BaseStyle->{FontSize -> 18, 
       PointSize[Large]},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {
        FormBox["\"Electron Energy (eV)\"", TraditionalForm], None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(0\\)]\\) Values vs. Electron \
Energy\"", TraditionalForm],
     PlotRange->{{15.34261831010452, 32.45836602787457}, {
       0, 10339.611078288699`}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
        AbsoluteThickness[1.6], 
        StyleBox[{
          PointBox[{{32.45836602787457, 0.05107669177186602}, {
           25.016736585365855`, 0.01509013300317145}, {
           15.34261831010452, -0.056556387420091135`}}], {{
            LineBox[{{32.45836602787457, 0.052238408189433184`}, {
             32.45836602787457, 0.04991497535429886}}], 
            LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, 0.052238408189433184`}], 
              Offset[{-1.5, 0}, {32.45836602787457, 0.052238408189433184`}]}],
             LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, 0.04991497535429886}], 
              Offset[{-1.5, 0}, {32.45836602787457, 
               0.04991497535429886}]}]}, {
            LineBox[{{25.016736585365855`, 0.023293799894065836`}, {
             25.016736585365855`, 0.0068864661122770635`}}], 
            LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, 0.023293799894065836`}], 
              Offset[{-1.5, 0}, {25.016736585365855`, 
               0.023293799894065836`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, 0.0068864661122770635`}], 
              Offset[{-1.5, 0}, {25.016736585365855`, 
               0.0068864661122770635`}]}]}, {
            LineBox[{{15.34261831010452, 0.01317888691255572}, {
             15.34261831010452, -0.12629166175273798`}}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, 0.01317888691255572}], 
              Offset[{-1.5, 0}, {15.34261831010452, 0.01317888691255572}]}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, -0.12629166175273798`}], 
              Offset[{-1.5, 0}, {
               15.34261831010452, -0.12629166175273798`}]}]}}},
         FontSize->18]}, {}}, {}, {}, {}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{15.075184752014364`, 0},
     BaseStyle->{FontSize -> 18, 
       PointSize[Large]},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {
        FormBox["\"Electron Energy (eV)\"", TraditionalForm], None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\) Values vs. Electron \
Energy\"", TraditionalForm],
     PlotRange->{{15.34261831010452, 
      32.45836602787457}, {-0.056556387420091135`, 0.05107669177186602}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
        AbsoluteThickness[1.6], 
        StyleBox[{
          PointBox[{{32.45836602787457, -0.009760280491864422}, {
           25.016736585365855`, 0.04997406838779233}, {15.34261831010452, 
           0.07547333068962013}}], {{
            LineBox[{{32.45836602787457, -0.008499126684139078}, {
             32.45836602787457, -0.011021434299589766`}}], 
            LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, -0.008499126684139078}], 
              Offset[{-1.5, 0}, {32.45836602787457, -0.008499126684139078}]}],
             LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, -0.011021434299589766`}], 
              Offset[{-1.5, 0}, {
               32.45836602787457, -0.011021434299589766`}]}]}, {
            LineBox[{{25.016736585365855`, 0.05193497910689834}, {
             25.016736585365855`, 0.04801315766868632}}], 
            LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, 0.05193497910689834}], 
              Offset[{-1.5, 0}, {25.016736585365855`, 0.05193497910689834}]}],
             LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, 0.04801315766868632}], 
              Offset[{-1.5, 0}, {25.016736585365855`, 
               0.04801315766868632}]}]}, {
            LineBox[{{15.34261831010452, 0.12838421917397302`}, {
             15.34261831010452, 0.02256244220526725}}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, 0.12838421917397302`}], 
              Offset[{-1.5, 0}, {15.34261831010452, 0.12838421917397302`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, 0.02256244220526725}], 
              Offset[{-1.5, 0}, {15.34261831010452, 0.02256244220526725}]}]}}},
         FontSize->18]}, {}}, {}, {}, {}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{15.075184752014364`, 0},
     BaseStyle->{FontSize -> 18, 
       PointSize[Large]},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {
        FormBox["\"Electron Energy (eV)\"", TraditionalForm], None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\) Values vs. Electron \
Energy\"", TraditionalForm],
     PlotRange->{{15.34261831010452, 
      32.45836602787457}, {-0.009760280491864422, 0.07547333068962013}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"|\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\)|\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
        AbsoluteThickness[1.6], 
        StyleBox[{
          PointBox[{{32.45836602787457, 0.011366264327991668`}, {
           25.016736585365855`, 0.06038879076930814}, {15.34261831010452, 
           0.059711615548903106`}}], {{
            LineBox[{{32.45836602787457, 0.011611772586969143`}, {
             32.45836602787457, 0.011120756069014193`}}], 
            LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, 0.011611772586969143`}], 
              Offset[{-1.5, 0}, {32.45836602787457, 0.011611772586969143`}]}],
             LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, 0.011120756069014193`}], 
              Offset[{-1.5, 0}, {32.45836602787457, 
               0.011120756069014193`}]}]}, {
            LineBox[{{25.016736585365855`, 0.06506484034652354}, {
             25.016736585365855`, 0.05571274119209274}}], 
            LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, 0.06506484034652354}], 
              Offset[{-1.5, 0}, {25.016736585365855`, 0.06506484034652354}]}],
             LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, 0.05571274119209274}], 
              Offset[{-1.5, 0}, {25.016736585365855`, 
               0.05571274119209274}]}]}, {
            LineBox[{{15.34261831010452, 0.07486344271772687}, {
             15.34261831010452, 0.04455978838007935}}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, 0.07486344271772687}], 
              Offset[{-1.5, 0}, {15.34261831010452, 0.07486344271772687}]}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, 0.04455978838007935}], 
              Offset[{-1.5, 0}, {15.34261831010452, 0.04455978838007935}]}]}}},
         FontSize->18]}, {}}, {}, {}, {}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{15.075184752014364`, 0},
     BaseStyle->{FontSize -> 18, 
       PointSize[Large]},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {
        FormBox["\"Electron Energy (eV)\"", TraditionalForm], None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox[
      "\"|\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\)| Values vs. Electron \
Energy\"", TraditionalForm],
     PlotRange->{{15.34261831010452, 32.45836602787457}, {
       0, 0.06038879076930814}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(3\\)]\\):\\!\\(\\*SubscriptBox[\\(C\\), \\(2\\)]\\)\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
        AbsoluteThickness[1.6], 
        StyleBox[{
          PointBox[{{32.45836602787457, -0.008874416114761472}, {
           25.016736585365855`, -0.042826074880519614`}, {
           15.34261831010452, -0.054519474585726736`}}], {{
            LineBox[{{32.45836602787457, -0.008532707952357181}, {
             32.45836602787457, -0.009216124277165763}}], 
            LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, -0.008532707952357181}], 
              Offset[{-1.5, 0}, {32.45836602787457, -0.008532707952357181}]}],
             LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, -0.009216124277165763}], 
              Offset[{-1.5, 0}, {
               32.45836602787457, -0.009216124277165763}]}]}, {
            LineBox[{{25.016736585365855`, -0.0392626024395341}, {
             25.016736585365855`, -0.04638954732150513}}], 
            LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, -0.0392626024395341}], 
              Offset[{-1.5, 0}, {25.016736585365855`, -0.0392626024395341}]}],
             LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, -0.04638954732150513}], 
              Offset[{-1.5, 0}, {
               25.016736585365855`, -0.04638954732150513}]}]}, {
            LineBox[{{15.34261831010452, -0.03380175027612572}, {
             15.34261831010452, -0.07523719889532776}}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, -0.03380175027612572}], 
              Offset[{-1.5, 0}, {15.34261831010452, -0.03380175027612572}]}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, -0.07523719889532776}], 
              Offset[{-1.5, 0}, {
               15.34261831010452, -0.07523719889532776}]}]}}},
         FontSize->18]}, {}}, {}, {}, {}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{15.075184752014364`, 0},
     BaseStyle->{FontSize -> 18, 
       PointSize[Large]},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {
        FormBox["\"Electron Energy (eV)\"", TraditionalForm], None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(3\\)]\\):\\!\\(\\*SubscriptBox[\\(C\\), \\(2\\)]\\) Values vs. Electron \
Energy\"", TraditionalForm],
     PlotRange->{{15.34261831010452, 
       32.45836602787457}, {-0.054519474585726736`, 0}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(3\\)]\\):\\!\\(\\*SubscriptBox[\\(S\\), \\(2\\)]\\)\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
        AbsoluteThickness[1.6], 
        StyleBox[{
          PointBox[{{32.45836602787457, -0.013240405036773373`}, {
           25.016736585365855`, -0.07277846329425072}, {
           15.34261831010452, -0.010333461762414306`}}], {{
            LineBox[{{32.45836602787457, -0.012825597804084973`}, {
             32.45836602787457, -0.013655212269461772`}}], 
            LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, -0.012825597804084973`}], 
              Offset[{-1.5, 0}, {
               32.45836602787457, -0.012825597804084973`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {32.45836602787457, -0.013655212269461772`}], 
              Offset[{-1.5, 0}, {
               32.45836602787457, -0.013655212269461772`}]}]}, {
            LineBox[{{25.016736585365855`, -0.06635006741810272}, {
             25.016736585365855`, -0.07920685917039873}}], 
            LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, -0.06635006741810272}], 
              Offset[{-1.5, 0}, {
               25.016736585365855`, -0.06635006741810272}]}], 
            LineBox[{
             Offset[{1.5, 0}, {25.016736585365855`, -0.07920685917039873}], 
              Offset[{-1.5, 0}, {
               25.016736585365855`, -0.07920685917039873}]}]}, {
            LineBox[{{15.34261831010452, 0.021779504986988607`}, {
             15.34261831010452, -0.04244642851181722}}], 
            LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, 0.021779504986988607`}], 
              Offset[{-1.5, 0}, {15.34261831010452, 0.021779504986988607`}]}],
             LineBox[{
             Offset[{1.5, 0}, {15.34261831010452, -0.04244642851181722}], 
              Offset[{-1.5, 0}, {
               15.34261831010452, -0.04244642851181722}]}]}}},
         FontSize->18]}, {}}, {}, {}, {}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{15.075184752014364`, 0},
     BaseStyle->{FontSize -> 18, 
       PointSize[Large]},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {
        FormBox["\"Electron Energy (eV)\"", TraditionalForm], None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{Automatic, Automatic},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(3\\)]\\):\\!\\(\\*SubscriptBox[\\(S\\), \\(2\\)]\\) Values vs. Electron \
Energy\"", TraditionalForm],
     PlotRange->{{15.34261831010452, 
       32.45836602787457}, {-0.07277846329425072, 0}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7266289933437114`*^9, 3.7266290163843565`*^9}, 
   3.7266723345851803`*^9, 3.72668428225445*^9, 3.7268321227023807`*^9, 
   3.726833126798112*^9, 3.7280553678184433`*^9, 3.7280894125173836`*^9, 
   3.728092254911762*^9, 3.7280923032794466`*^9, 3.7280924128807154`*^9, 
   3.7280955583860188`*^9, 3.7280956832999244`*^9, 3.728126532711211*^9, 
   3.7281299773055944`*^9, 3.728130311730362*^9, 3.7281319350833645`*^9, 
   3.728135255378023*^9, 3.728137989380019*^9, 3.7281391834445806`*^9, 
   3.728139492105567*^9, 3.7284790234035697`*^9, 3.7284797621732492`*^9, 
   3.728480069658658*^9},ExpressionUUID->"b8ffc5f7-24c4-4b95-b933-\
0c3d6af2185e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(0\\)]\\)\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"32.45836602787457`", ",", "10339.611078288699`"}], "}"}], 
        ",", 
        RowBox[{"ErrorBar", "[", "22.5863986586911`", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"25.016736585365855`", ",", "643.1474605103409`"}], "}"}], 
        ",", 
        RowBox[{"ErrorBar", "[", "21.2894104934472`", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"15.34261831010452`", ",", "35.854412740440715`"}], "}"}], 
        ",", 
        RowBox[{"ErrorBar", "[", "1.8195305510561774`", "]"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"32.45836602787457`", ",", "0.05107669177186602`"}], "}"}], 
        ",", 
        RowBox[{"ErrorBar", "[", "0.0011617164175671596`", "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"25.016736585365855`", ",", "0.01509013300317145`"}], "}"}], 
        ",", 
        RowBox[{"ErrorBar", "[", "0.008203666890894386`", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"15.34261831010452`", ",", 
          RowBox[{"-", "0.056556387420091135`"}]}], "}"}], ",", 
        RowBox[{"ErrorBar", "[", "0.06973527433264685`", "]"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"32.45836602787457`", ",", 
          RowBox[{"-", "0.009760280491864422`"}]}], "}"}], ",", 
        RowBox[{"ErrorBar", "[", "0.0012611538077253446`", "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"25.016736585365855`", ",", "0.04997406838779233`"}], "}"}], 
        ",", 
        RowBox[{"ErrorBar", "[", "0.001960910719106007`", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"15.34261831010452`", ",", "0.07547333068962013`"}], "}"}], 
        ",", 
        RowBox[{"ErrorBar", "[", "0.05291088848435288`", "]"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"|\\!\\(\\*SubscriptBox[\\(P\\), \\(3\\)]\\)|\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"32.45836602787457`", ",", "0.011366264327991668`"}], "}"}], 
        ",", 
        RowBox[{"ErrorBar", "[", "0.0002455082589774751`", "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"25.016736585365855`", ",", "0.06038879076930814`"}], "}"}], 
        ",", 
        RowBox[{"ErrorBar", "[", "0.0046760495772154055`", "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"15.34261831010452`", ",", "0.059711615548903106`"}], "}"}], 
        ",", 
        RowBox[{"ErrorBar", "[", "0.015151827168823755`", "]"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(3\\)]\\):\\!\\(\\*SubscriptBox[\\(C\\), \\(2\\)]\\)\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"32.45836602787457`", ",", 
          RowBox[{"-", "0.008874416114761472`"}]}], "}"}], ",", 
        RowBox[{"ErrorBar", "[", "0.0003417081624042913`", "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"25.016736585365855`", ",", 
          RowBox[{"-", "0.042826074880519614`"}]}], "}"}], ",", 
        RowBox[{"ErrorBar", "[", "0.00356347244098552`", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"15.34261831010452`", ",", 
          RowBox[{"-", "0.054519474585726736`"}]}], "}"}], ",", 
        RowBox[{"ErrorBar", "[", "0.02071772430960102`", "]"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(3\\)]\\):\\!\\(\\*SubscriptBox[\\(S\\), \\(2\\)]\\)\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"32.45836602787457`", ",", 
          RowBox[{"-", "0.013240405036773373`"}]}], "}"}], ",", 
        RowBox[{"ErrorBar", "[", "0.00041480723268839904`", "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"25.016736585365855`", ",", 
          RowBox[{"-", "0.07277846329425072`"}]}], "}"}], ",", 
        RowBox[{"ErrorBar", "[", "0.006428395876148011`", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"15.34261831010452`", ",", 
          RowBox[{"-", "0.010333461762414306`"}]}], "}"}], ",", 
        RowBox[{"ErrorBar", "[", "0.032112966749402914`", "]"}]}], "}"}]}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7266289933437114`*^9, 3.7266290163843565`*^9}, 
   3.7266723345851803`*^9, 3.72668428225445*^9, 3.7268321227023807`*^9, 
   3.726833126798112*^9, 3.7280553678184433`*^9, 3.7280894125173836`*^9, 
   3.728092254911762*^9, 3.7280923032794466`*^9, 3.7280924128807154`*^9, 
   3.7280955583860188`*^9, 3.7280956832999244`*^9, 3.728126532711211*^9, 
   3.7281299773055944`*^9, 3.728130311730362*^9, 3.7281319350833645`*^9, 
   3.728135255378023*^9, 3.728137989380019*^9, 3.7281391834445806`*^9, 
   3.728139492105567*^9, 3.7284790234035697`*^9, 3.7284797621732492`*^9, 
   3.728480069689909*^9},ExpressionUUID->"e78bda7c-99d6-4f2a-ae0e-\
24728b080602"],

Cell[BoxData["\<\"stokesPlots.png\"\>"], "Output",
 CellChangeTimes->{{3.7266289933437114`*^9, 3.7266290163843565`*^9}, 
   3.7266723345851803`*^9, 3.72668428225445*^9, 3.7268321227023807`*^9, 
   3.726833126798112*^9, 3.7280553678184433`*^9, 3.7280894125173836`*^9, 
   3.728092254911762*^9, 3.7280923032794466`*^9, 3.7280924128807154`*^9, 
   3.7280955583860188`*^9, 3.7280956832999244`*^9, 3.728126532711211*^9, 
   3.7281299773055944`*^9, 3.728130311730362*^9, 3.7281319350833645`*^9, 
   3.728135255378023*^9, 3.728137989380019*^9, 3.7281391834445806`*^9, 
   3.728139492105567*^9, 3.7284790234035697`*^9, 3.7284797621732492`*^9, 
   3.7284800735807657`*^9},ExpressionUUID->"ef5fd58d-627c-4655-a88f-\
a03154cef643"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "allStokes", "]"}]], "Input",
 CellChangeTimes->{{3.728135833300891*^9, 3.7281358445012083`*^9}, 
   3.728135902533663*^9, {3.72813601845575*^9, 3.7281360303058114`*^9}, 
   3.7281360921931696`*^9, {3.728136179720703*^9, 3.7281361805332513`*^9}, {
   3.7281366580444717`*^9, 3.728136662893775*^9}, 
   3.728136886541404*^9},ExpressionUUID->"2ca4ce3d-0e68-4a71-8076-\
c3d0ee8fa2df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "32.45836602787457`", ",", "25.016736585365855`", ",", 
   "15.34261831010452`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7281360208463*^9, 3.728136030758961*^9}, 
   3.728136092677552*^9, 3.7281361810020103`*^9, 3.7281366631747704`*^9, 
   3.728136887025597*^9},ExpressionUUID->"d58496a7-9984-4548-aa59-\
731f3a30483d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export TSV file with all Stokes Values", "Section",
 CellChangeTimes->{{3.7281380439148865`*^9, 
  3.728138072257145*^9}},ExpressionUUID->"818dc8be-22f6-4596-b17b-\
220fbe52261e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"string", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"string", "=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"string", ",", "\"\<energy\\t\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"string", "=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"string", ",", "\"\<Pumplight\\t\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"a", "=", "1"}], ",", 
    RowBox[{"a", "<=", 
     RowBox[{"Length", "[", "stokesNames", "]"}]}], ",", 
    RowBox[{"a", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"string", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"string", ",", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"Keys", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"allStokes", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "a", "]"}], "]"}], "]"}], "<>", "\"\<\\t\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"Keys", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"allStokes", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "a", "]"}], "]"}], "]"}], "<>", "\"\<\\t\>\""}]}], 
       "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"string", "=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"string", ",", "\"\<\\n\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"b", "=", "1"}], ",", 
    RowBox[{"b", "\[LessEqual]", 
     RowBox[{"Length", "[", "energies", "]"}]}], ",", 
    RowBox[{"b", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "1"}], ",", 
       RowBox[{"c", "\[LessEqual]", 
        RowBox[{"Length", "[", "pumpLights", "]"}]}], ",", 
       RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"string", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"string", ",", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"Keys", "[", "allStokes", "]"}], "[", 
              RowBox[{"[", "b", "]"}], "]"}], "]"}], "<>", "\"\<\\t\>\""}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"string", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"string", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Keys", "[", 
              RowBox[{"allStokes", "[", 
               RowBox[{"[", "b", "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "c", "]"}], "]"}], "<>", "\"\<\\t\>\""}]}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"a", "=", "1"}], ",", 
          RowBox[{"a", "<=", 
           RowBox[{"Length", "[", "stokesNames", "]"}]}], ",", 
          RowBox[{"a", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"string", "=", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"string", ",", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"allStokes", "[", 
                    RowBox[{"[", "b", "]"}], "]"}], "[", 
                   RowBox[{"[", "c", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "a", "]"}], "]"}], "]"}], "<>", "\"\<\\t\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"allStokes", "[", 
                    RowBox[{"[", "b", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "a", "]"}], "]"}], "]"}], "<>", 
               "\"\<\\t\>\""}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"string", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"string", ",", "\"\<\\n\>\""}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
    "\"\<tabulatedValues\>\"", "<>", "stringId", "<>", "\"\<.txt\>\""}], ",", 
    "string"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQPXnp/Km3jr123LRxH5j2KY1fB6ILHzqfAdG7pOdd
AtETZuveAdF3Fk58DKJXlXU9BdHOFmlvQbRiXctHEC0pdPwniDYJmvcHRHst
t+W5DaT/GbALgOh13QoGIHrOn1umIPqlb6A1iD7z+qYNiE7o4vYH0acyf4eA
aA3F3FgQvetUeRmIdt0Q1g6icwwSwfRWh5e9IDrlldAcEL142pSFIFr834yl
ILrnZOgqsHkVR8F0f96BdSC6ReYEmL427dQmEC3TMXEziF7bk7EdRB/5tmkH
2L1SMntB9PkidTB9a6LPYRAdx//uCIg2Cpl1DUQr3Km9DqIB0BDSCw==
  "],ExpressionUUID->"e2f7e925-7e8c-4dc6-b0ee-76980b6aa8f4"],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.7281374424901533`*^9},ExpressionUUID->"31b5c95d-3f23-45b3-8577-\
4b291f48b9cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot Stokes Parameters vs. Energy with Pump Lights in Different Colors\
\>", "Section",
 CellChangeTimes->{{3.726629645454885*^9, 3.7266296888872924`*^9}, {
  3.728096143924212*^9, 
  3.728096148908884*^9}},ExpressionUUID->"7c202aa5-5826-40bc-bd91-\
1607b9b94687"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stokesPlots", "=", 
    RowBox[{"<|", "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energy", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pumpLight", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"m", "=", "1"}], ",", 
    RowBox[{"m", "\[LessEqual]", 
     RowBox[{"Length", "[", "stokesNames", "]"}]}], ",", 
    RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plots", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "pumpLights", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"plotData", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "energies", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"s", "=", 
            RowBox[{
             RowBox[{"allStokes", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"plotData", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"energies", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"s", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "m", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"ErrorBar", "[", 
                RowBox[{
                 RowBox[{"s", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "m", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"height", "=", ".1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"plots", ",", 
          RowBox[{"ErrorListPlot", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{"plotData", ",", 
              RowBox[{"pumpLights", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"960", ",", "600"}], "}"}]}], ",", 
            RowBox[{"AxesOrigin", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "height"}]}], "}"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"colorBlindPallete", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"stokesPlots", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stokesNames", "[", 
         RowBox[{"[", "m", "]"}], "]"}], "\[Rule]", 
        RowBox[{"Show", "[", 
         RowBox[{"plots", ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{
            RowBox[{"stokesNames", "[", 
             RowBox[{"[", "m", "]"}], "]"}], "<>", "stringId"}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stokesPlots", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"stokesNames", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<_\>\"", "<>", "stringId", 
        "<>", "\"\<.png\>\""}], ",", 
       RowBox[{"stokesPlots", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "stokesPlots"}], "Input",
 CellChangeTimes->{{3.7266296329707594`*^9, 3.7266296331847506`*^9}, {
   3.7266296919221334`*^9, 3.726629696327508*^9}, {3.726629780313285*^9, 
   3.7266297838093357`*^9}, {3.7266298725155315`*^9, 3.72662987762558*^9}, {
   3.7266299609304886`*^9, 3.726629974267811*^9}, {3.7266302935078344`*^9, 
   3.7266303823804893`*^9}, {3.7266304747488966`*^9, 3.726630491157727*^9}, {
   3.72663053666968*^9, 3.726630538134426*^9}, {3.726630758781905*^9, 
   3.7266307717578135`*^9}, 3.7266310444002976`*^9, {3.726631361242054*^9, 
   3.7266314576473083`*^9}, 3.7266315242265177`*^9, {3.726631560850387*^9, 
   3.7266315678251233`*^9}, {3.7266316100507946`*^9, 3.7266316535063033`*^9}, 
   3.726848116090891*^9, {3.727981136145689*^9, 3.7279811390406427`*^9}, 
   3.7279813676399035`*^9, {3.728050925576401*^9, 3.7280509694229484`*^9}, {
   3.7280542257794647`*^9, 3.7280542317798223`*^9}, {3.728054350158177*^9, 
   3.7280543623743887`*^9}, {3.72805461006026*^9, 3.728054623430371*^9}, {
   3.72805518178876*^9, 3.728055187775119*^9}, {3.7280552521087966`*^9, 
   3.728055259753272*^9}, {3.7280552932860746`*^9, 3.728055298646185*^9}, {
   3.728055333916593*^9, 3.7280553419203973`*^9}, 3.7280885714192877`*^9, {
   3.7280886176344748`*^9, 3.7280886995061846`*^9}, {3.72808883194701*^9, 
   3.7280888542982335`*^9}, {3.7280890281550107`*^9, 3.728089115717098*^9}, {
   3.728089205331572*^9, 3.7280892118189497`*^9}, {3.7280895178034325`*^9, 
   3.7280895519296217`*^9}, {3.728091216224549*^9, 3.728091353567929*^9}, {
   3.728091383609201*^9, 3.7280913865221653`*^9}, {3.7280962148347907`*^9, 
   3.728096219491348*^9}, {3.7280962513215637`*^9, 3.7280962519778566`*^9}, {
   3.7280963386710825`*^9, 3.728096355062785*^9}, {3.7280965314335155`*^9, 
   3.7280965751705065`*^9}, {3.7280970995923166`*^9, 3.728097148126441*^9}, {
   3.7280971996294994`*^9, 3.7280972274749203`*^9}, {3.7280972740245633`*^9, 
   3.728097274571471*^9}, {3.728097309917301*^9, 3.7280973244181633`*^9}, {
   3.728097527071701*^9, 3.7280975562767477`*^9}, {3.7280976805036507`*^9, 
   3.728097689769907*^9}, {3.728097815886794*^9, 3.7280978325596657`*^9}, {
   3.728097868046163*^9, 3.7280979337063184`*^9}, {3.728098078777443*^9, 
   3.728098088481148*^9}, {3.7280981221237507`*^9, 3.7280981505629444`*^9}, {
   3.7280982170356474`*^9, 3.7280982191295404`*^9}, {3.7281392741716785`*^9, 
   3.728139282903355*^9}},ExpressionUUID->"82f26dd7-558f-4e31-959d-\
1be92c87a42d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"p0\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[46, 51], 0.9019607843137255], 
               NCache[
                Rational[53, 85], 0.6235294117647059], 0]], {
              
              PointBox[{{32.658373170731714`, 90360.44027978003}, {
               25.216741463414635`, 3033.4319616912976`}, {
               15.542620243902434`, 435.2014464694086}}], {{
                
                LineBox[{{32.658373170731714`, 90988.62191441233}, {
                 32.658373170731714`, 89732.25864514773}}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 90988.62191441233}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   90988.62191441233}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 89732.25864514773}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   89732.25864514773}]}]}, {
                
                LineBox[{{25.216741463414635`, 3068.7362392646196`}, {
                 25.216741463414635`, 2998.1276841179756`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   3068.7362392646196`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   3068.7362392646196`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   2998.1276841179756`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   2998.1276841179756`}]}]}, {
                
                LineBox[{{15.542620243902434`, 439.6814910441814}, {
                 15.542620243902434`, 430.7214018946358}}], 
                LineBox[{
                  Offset[{1.5, 0}, {15.542620243902434`, 439.6814910441814}], 
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   439.6814910441814}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {15.542620243902434`, 430.7214018946358}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   430.7214018946358}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$395606, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[86, 255], 0.33725490196078434`], 
               NCache[
                Rational[12, 17], 0.7058823529411765], 
               NCache[
                Rational[233, 255], 0.9137254901960784]]], {
              
              PointBox[{{32.658373170731714`, 90497.80783130827}, {
               25.216741463414635`, 3422.7197329049704`}, {
               15.542620243902434`, 457.3584864020351}}], {{
                
                LineBox[{{32.658373170731714`, 91151.37560913416}, {
                 32.658373170731714`, 89844.24005348237}}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 91151.37560913416}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   91151.37560913416}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 89844.24005348237}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   89844.24005348237}]}]}, {
                
                LineBox[{{25.216741463414635`, 3470.3955538394753`}, {
                 25.216741463414635`, 3375.0439119704656`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   3470.3955538394753`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   3470.3955538394753`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   3375.0439119704656`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   3375.0439119704656`}]}]}, {
                
                LineBox[{{15.542620243902434`, 465.8781093463887}, {
                 15.542620243902434`, 448.8388634576815}}], 
                LineBox[{
                  Offset[{1.5, 0}, {15.542620243902434`, 465.8781093463887}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   465.8781093463887}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {15.542620243902434`, 448.8388634576815}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   448.8388634576815}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$395660, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[0, 
               NCache[
                Rational[158, 255], 0.6196078431372549], 
               NCache[
                Rational[23, 51], 0.45098039215686275`]]], {
              
              PointBox[{{32.658373170731714`, 89811.01131660999}, {
               25.216741463414635`, 3511.1988736322655`}, {
               15.542620243902434`, 427.398161358102}}], {{
                
                LineBox[{{32.658373170731714`, 90522.49160669025}, {
                 32.658373170731714`, 89099.53102652973}}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 90522.49160669025}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   90522.49160669025}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 89099.53102652973}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   89099.53102652973}]}]}, {
                
                LineBox[{{25.216741463414635`, 3594.1118644851886`}, {
                 25.216741463414635`, 3428.2858827793425`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   3594.1118644851886`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   3594.1118644851886`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   3428.2858827793425`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   3428.2858827793425`}]}]}, {
                
                LineBox[{{15.542620243902434`, 431.8785776196812}, {
                 15.542620243902434`, 422.9177450965228}}], 
                LineBox[{
                  Offset[{1.5, 0}, {15.542620243902434`, 431.8785776196812}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   431.8785776196812}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {15.542620243902434`, 422.9177450965228}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   422.9177450965228}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$395714, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[16, 17], 0.9411764705882353], 
               NCache[
                Rational[76, 85], 0.8941176470588236], 
               NCache[
                Rational[22, 85], 0.25882352941176473`]]], {
              
              PointBox[{{32.658373170731714`, 91760.19471660758}, {
               25.216741463414635`, 3399.0831147681615`}, {
               15.542620243902434`, 422.5028132386057}}], {{
                
                LineBox[{{32.658373170731714`, 91874.16850765492}, {
                 32.658373170731714`, 91646.22092556025}}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 91874.16850765492}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   91874.16850765492}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 91646.22092556025}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   91646.22092556025}]}]}, {
                
                LineBox[{{25.216741463414635`, 3450.554775085918}, {
                 25.216741463414635`, 3347.611454450405}}], 
                LineBox[{
                  Offset[{1.5, 0}, {25.216741463414635`, 3450.554775085918}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   3450.554775085918}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {25.216741463414635`, 3347.611454450405}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   3347.611454450405}]}]}, {
                
                LineBox[{{15.542620243902434`, 432.1887858518547}, {
                 15.542620243902434`, 412.81684062535675`}}], 
                LineBox[{
                  Offset[{1.5, 0}, {15.542620243902434`, 432.1887858518547}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   432.1887858518547}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   412.81684062535675`}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   412.81684062535675`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$395768, {}}]& ], {}}}, {}, {}, {}, {}}}, {
       ImageSize -> Large, PlotLabel -> 
        FormBox["\"p0t=120_Ei=100_BGP=275\"", TraditionalForm], 
        DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., -0.1}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0., -0.1}, BaseStyle -> {FontSize -> 18, 
          PointSize[Large]}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       TagBox[
        GridBox[{{
           FormBox[
            
            TemplateBox[{"\"noPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6013071895424836, 0.41568627450980394`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[46/51, 53/85, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"piPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718955`, 0.47058823529411764`, 
                    0.6091503267973856], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[86/255, 12/17, 233/255]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s+Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4130718954248366, 0.3006535947712418], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 158/255, 23/51]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s-Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6274509803921569, 0.596078431372549, 
                    0.17254901960784313`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[16/17, 76/85, 22/85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"p1\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[46, 51], 0.9019607843137255], 
               NCache[
                Rational[53, 85], 0.6235294117647059], 0]], {
              
              PointBox[{{32.658373170731714`, 0.05022069785113975}, {
               25.216741463414635`, -0.006353355349713041}, {
               15.542620243902434`, -0.07934342950259894}}], {{
                
                LineBox[{{32.658373170731714`, 0.05143673803706983}, {
                 32.658373170731714`, 0.04900465766520967}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.05143673803706983}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.05143673803706983}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.04900465766520967}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.04900465766520967}]}]}, {
                
                LineBox[{{25.216741463414635`, -0.0028224650030375604`}, {
                 25.216741463414635`, -0.009884245696388523}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.0028224650030375604`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.0028224650030375604`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.009884245696388523}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.009884245696388523}]}]}, {
                
                LineBox[{{15.542620243902434`, -0.07092569961457908}, {
                 15.542620243902434`, -0.0877611593906188}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.07092569961457908}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.07092569961457908}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {15.542620243902434`, -0.0877611593906188}]
                  , 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.0877611593906188}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$395822, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[86, 255], 0.33725490196078434`], 
               NCache[
                Rational[12, 17], 0.7058823529411765], 
               NCache[
                Rational[233, 255], 0.9137254901960784]]], {
              
              PointBox[{{32.658373170731714`, 0.05095837115175703}, {
               25.216741463414635`, 0.0029797286430545845`}, {
               15.542620243902434`, -0.043276549618553546`}}], {{
                
                LineBox[{{32.658373170731714`, 0.05215062950320548}, {
                 32.658373170731714`, 0.049766112800308585`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.05215062950320548}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.05215062950320548}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.049766112800308585`}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.049766112800308585`}]}]}, {
                
                LineBox[{{25.216741463414635`, 0.006011607912651751}, {
                 25.216741463414635`, -0.000052150626542581645`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.006011607912651751}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.006011607912651751}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.000052150626542581645`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.000052150626542581645`}]}]}, {
                LineBox[{{15.542620243902434`, -0.01341742762401981}, {
                 15.542620243902434`, -0.07313567161308729}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.01341742762401981}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.01341742762401981}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.07313567161308729}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.07313567161308729}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$395876, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[0, 
               NCache[
                Rational[158, 255], 0.6196078431372549], 
               NCache[
                Rational[23, 51], 0.45098039215686275`]]], {
              
              PointBox[{{32.658373170731714`, 0.05727807449073128}, {
               25.216741463414635`, 0.010932314247324527`}, {
               15.542620243902434`, -0.057483135648121214`}}], {{
                
                LineBox[{{32.658373170731714`, 0.06185334589484405}, {
                 32.658373170731714`, 0.05270280308661851}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.06185334589484405}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.06185334589484405}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.05270280308661851}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.05270280308661851}]}]}, {
                
                LineBox[{{25.216741463414635`, 0.019538115488723973`}, {
                 25.216741463414635`, 0.002326513005925082}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.019538115488723973`}], 
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.019538115488723973`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.002326513005925082}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.002326513005925082}]}]}, {
                
                LineBox[{{15.542620243902434`, -0.05055254761579646}, {
                 15.542620243902434`, -0.06441372368044597}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.05055254761579646}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.05055254761579646}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.06441372368044597}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.06441372368044597}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$395930, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[16, 17], 0.9411764705882353], 
               NCache[
                Rational[76, 85], 0.8941176470588236], 
               NCache[
                Rational[22, 85], 0.25882352941176473`]]], {
              
              PointBox[{{32.658373170731714`, 0.050421099015046406`}, {
               25.216741463414635`, -0.003823887213276847}, {
               15.542620243902434`, -0.01733198779509837}}], {{
                
                LineBox[{{32.658373170731714`, 0.05294047375291937}, {
                 32.658373170731714`, 0.047901724277173444`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.05294047375291937}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.05294047375291937}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.047901724277173444`}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.047901724277173444`}]}]}, {
                
                LineBox[{{25.216741463414635`, -0.00006888432377530817}, {
                 25.216741463414635`, -0.007578890102778386}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.00006888432377530817}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.00006888432377530817}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.007578890102778386}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.007578890102778386}]}]}, {
                
                LineBox[{{15.542620243902434`, 0.003492871068477621}, {
                 15.542620243902434`, -0.03815684665867436}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.003492871068477621}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.003492871068477621}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.03815684665867436}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.03815684665867436}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$395984, {}}]& ], {}}}, {}, {}, {}, {}}}, {
       ImageSize -> Large, PlotLabel -> 
        FormBox["\"p1t=120_Ei=100_BGP=275\"", TraditionalForm], 
        DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., -0.1}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0., -0.1}, BaseStyle -> {FontSize -> 18, 
          PointSize[Large]}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       TagBox[
        GridBox[{{
           FormBox[
            
            TemplateBox[{"\"noPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6013071895424836, 0.41568627450980394`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[46/51, 53/85, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"piPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718955`, 0.47058823529411764`, 
                    0.6091503267973856], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[86/255, 12/17, 233/255]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s+Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4130718954248366, 0.3006535947712418], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 158/255, 23/51]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s-Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6274509803921569, 0.596078431372549, 
                    0.17254901960784313`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[16/17, 76/85, 22/85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"p2\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[46, 51], 0.9019607843137255], 
               NCache[
                Rational[53, 85], 0.6235294117647059], 0]], {
              
              PointBox[{{32.658373170731714`, -0.014684800615711044`}, {
               25.216741463414635`, 0.037194094591217496`}, {
               15.542620243902434`, 0.02764070013932145}}], {{
                
                LineBox[{{32.658373170731714`, -0.010761463710551757`}, {
                 32.658373170731714`, -0.01860813752087033}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.010761463710551757`}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.010761463710551757`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.01860813752087033}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.01860813752087033}]}]}, {
                
                LineBox[{{25.216741463414635`, 0.044138350312983424`}, {
                 25.216741463414635`, 0.030249838869451567`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.044138350312983424`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.044138350312983424`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.030249838869451567`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.030249838869451567`}]}]}, {
                
                LineBox[{{15.542620243902434`, 0.062326404978208044`}, {
                 15.542620243902434`, -0.007045004699565146}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.062326404978208044`}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.062326404978208044`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.007045004699565146}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.007045004699565146}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396038, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[86, 255], 0.33725490196078434`], 
               NCache[
                Rational[12, 17], 0.7058823529411765], 
               NCache[
                Rational[233, 255], 0.9137254901960784]]], {
              
              PointBox[{{32.658373170731714`, -0.00460961454136929}, {
               25.216741463414635`, 0.022232934380320053`}, {
               15.542620243902434`, -0.033514055310638426`}}], {{
                
                LineBox[{{32.658373170731714`, 0.0008967875062773955}, {
                 32.658373170731714`, -0.010116016589015977`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.0008967875062773955}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.0008967875062773955}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.010116016589015977`}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.010116016589015977`}]}]}, {
                
                LineBox[{{25.216741463414635`, 0.03406739126222353}, {
                 25.216741463414635`, 0.010398477498416577`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.03406739126222353}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.03406739126222353}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.010398477498416577`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.010398477498416577`}]}]}, {
                
                LineBox[{{15.542620243902434`, -0.019501555100526154`}, {
                 15.542620243902434`, -0.0475265555207507}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.019501555100526154`}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.019501555100526154`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.0475265555207507}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.0475265555207507}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396092, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[0, 
               NCache[
                Rational[158, 255], 0.6196078431372549], 
               NCache[
                Rational[23, 51], 0.45098039215686275`]]], {
              
              PointBox[{{32.658373170731714`, -0.010543734339199256`}, {
               25.216741463414635`, 0.0012959551452696103`}, {
               15.542620243902434`, 0.051165717831223284`}}], {{
                
                LineBox[{{32.658373170731714`, -0.008940912671460693}, {
                 32.658373170731714`, -0.01214655600693782}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.008940912671460693}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.008940912671460693}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.01214655600693782}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.01214655600693782}]}]}, {
                
                LineBox[{{25.216741463414635`, 0.010485646759387783`}, {
                 25.216741463414635`, -0.007893736468848563}}], 
                LineBox[{
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.010485646759387783`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.010485646759387783`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.007893736468848563}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.007893736468848563}]}]}, {
                
                LineBox[{{15.542620243902434`, 0.06875432212308763}, {
                 15.542620243902434`, 0.03357711353935893}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.06875432212308763}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.06875432212308763}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.03357711353935893}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.03357711353935893}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396146, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[16, 17], 0.9411764705882353], 
               NCache[
                Rational[76, 85], 0.8941176470588236], 
               NCache[
                Rational[22, 85], 0.25882352941176473`]]], {
              
              PointBox[{{32.658373170731714`, -0.012069471619613035`}, {
               25.216741463414635`, 0.013470862369564685`}, {
               15.542620243902434`, 0.00455703260614631}}], {{
                
                LineBox[{{32.658373170731714`, -0.009740115630986377}, {
                 32.658373170731714`, -0.014398827608239692`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.009740115630986377}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.009740115630986377}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.014398827608239692`}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.014398827608239692`}]}]}, {
                
                LineBox[{{25.216741463414635`, 0.017493905433164415`}, {
                 25.216741463414635`, 0.009447819305964954}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.017493905433164415`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.017493905433164415`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.009447819305964954}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.009447819305964954}]}]}, {
                
                LineBox[{{15.542620243902434`, 0.009985010725436328}, {
                 15.542620243902434`, -0.0008709455131437069}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.009985010725436328}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.009985010725436328}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.0008709455131437069}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.0008709455131437069}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396200, {}}]& ], {}}}, {}, {}, {}, {}}}, {
       ImageSize -> Large, PlotLabel -> 
        FormBox["\"p2t=120_Ei=100_BGP=275\"", TraditionalForm], 
        DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., -0.1}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0., -0.1}, BaseStyle -> {FontSize -> 18, 
          PointSize[Large]}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       TagBox[
        GridBox[{{
           FormBox[
            
            TemplateBox[{"\"noPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6013071895424836, 0.41568627450980394`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[46/51, 53/85, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"piPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718955`, 0.47058823529411764`, 
                    0.6091503267973856], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[86/255, 12/17, 233/255]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s+Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4130718954248366, 0.3006535947712418], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 158/255, 23/51]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s-Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6274509803921569, 0.596078431372549, 
                    0.17254901960784313`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[16/17, 76/85, 22/85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"p3_mag\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[46, 51], 0.9019607843137255], 
               NCache[
                Rational[53, 85], 0.6235294117647059], 0]], {
              
              PointBox[{{32.658373170731714`, 0.008413610541789998}, {
               25.216741463414635`, 0.047814395945485526`}, {
               15.542620243902434`, 0.04768898748645962}}], {{
                
                LineBox[{{32.658373170731714`, 0.010630086299882942`}, {
                 32.658373170731714`, 0.006197134783697055}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.010630086299882942`}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.010630086299882942`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.006197134783697055}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.006197134783697055}]}]}, {
                
                LineBox[{{25.216741463414635`, 0.04815260320829258}, {
                 25.216741463414635`, 0.04747618868267847}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.04815260320829258}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.04815260320829258}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.04747618868267847}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.04747618868267847}]}]}, {
                
                LineBox[{{15.542620243902434`, 0.05857576744037053}, {
                 15.542620243902434`, 0.0368022075325487}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.05857576744037053}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.05857576744037053}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {15.542620243902434`, 0.0368022075325487}], 
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.0368022075325487}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396254, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[86, 255], 0.33725490196078434`], 
               NCache[
                Rational[12, 17], 0.7058823529411765], 
               NCache[
                Rational[233, 255], 0.9137254901960784]]], {
              
              PointBox[{{32.658373170731714`, 0.016141914182831802`}, {
               25.216741463414635`, 0.03069498139884921}, {
               15.542620243902434`, 0.0323321874238282}}], {{
                
                LineBox[{{32.658373170731714`, 0.01900868985497971}, {
                 32.658373170731714`, 0.013275138510683893`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.01900868985497971}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.01900868985497971}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.013275138510683893`}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.013275138510683893`}]}]}, {
                
                LineBox[{{25.216741463414635`, 0.03475617966460626}, {
                 25.216741463414635`, 0.026633783133092167`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.03475617966460626}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.03475617966460626}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.026633783133092167`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.026633783133092167`}]}]}, {
                
                LineBox[{{15.542620243902434`, 0.04070946868469666}, {
                 15.542620243902434`, 0.023954906162959737`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.04070946868469666}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.04070946868469666}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.023954906162959737`}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.023954906162959737`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396308, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[0, 
               NCache[
                Rational[158, 255], 0.6196078431372549], 
               NCache[
                Rational[23, 51], 0.45098039215686275`]]], {
              
              PointBox[{{32.658373170731714`, 0.02093807915741716}, {
               25.216741463414635`, 0.020505451288213964`}, {
               15.542620243902434`, 0.029094516980838602`}}], {{
                
                LineBox[{{32.658373170731714`, 0.021806763084468325`}, {
                 32.658373170731714`, 0.020069395230365997`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.021806763084468325`}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.021806763084468325`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.020069395230365997`}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.020069395230365997`}]}]}, {
                
                LineBox[{{25.216741463414635`, 0.02530626262549699}, {
                 25.216741463414635`, 0.015704639950930938`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.02530626262549699}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.02530626262549699}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.015704639950930938`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.015704639950930938`}]}]}, {
                
                LineBox[{{15.542620243902434`, 0.030724976967181634`}, {
                 15.542620243902434`, 0.02746405699449557}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.030724976967181634`}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.030724976967181634`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.02746405699449557}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.02746405699449557}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396362, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[16, 17], 0.9411764705882353], 
               NCache[
                Rational[76, 85], 0.8941176470588236], 
               NCache[
                Rational[22, 85], 0.25882352941176473`]]], {
              
              PointBox[{{32.658373170731714`, 0.007479341220920549}, {
               25.216741463414635`, 0.02466138651459528}, {
               15.542620243902434`, 0.024135534092005324`}}], {{
                
                LineBox[{{32.658373170731714`, 0.009912723920256137}, {
                 32.658373170731714`, 0.00504595852158496}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.009912723920256137}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.009912723920256137}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.00504595852158496}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.00504595852158496}]}]}, {
                
                LineBox[{{25.216741463414635`, 0.027749674428986695`}, {
                 25.216741463414635`, 0.021573098600203865`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.027749674428986695`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.027749674428986695`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {25.216741463414635`, 
                   0.021573098600203865`}], 
                  
                  Offset[{-1.5, 0}, {25.216741463414635`, 
                   0.021573098600203865`}]}]}, {
                
                LineBox[{{15.542620243902434`, 0.035402173735716705`}, {
                 15.542620243902434`, 0.012868894448293944`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.035402173735716705`}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.035402173735716705`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.012868894448293944`}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.012868894448293944`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396416, {}}]& ], {}}}, {}, {}, {}, {}}}, {
       ImageSize -> Large, PlotLabel -> 
        FormBox["\"p3_magt=120_Ei=100_BGP=275\"", TraditionalForm], 
        DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., -0.1}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0., -0.1}, BaseStyle -> {FontSize -> 18, 
          PointSize[Large]}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       TagBox[
        GridBox[{{
           FormBox[
            
            TemplateBox[{"\"noPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6013071895424836, 0.41568627450980394`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[46/51, 53/85, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"piPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718955`, 0.47058823529411764`, 
                    0.6091503267973856], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[86/255, 12/17, 233/255]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s+Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4130718954248366, 0.3006535947712418], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 158/255, 23/51]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s-Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6274509803921569, 0.596078431372549, 
                    0.17254901960784313`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[16/17, 76/85, 22/85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"p3_c2\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[46, 51], 0.9019607843137255], 
               NCache[
                Rational[53, 85], 0.6235294117647059], 0]], {
              
              PointBox[{{32.658373170731714`, -0.0010234903287647892`}, {
               25.216741463414635`, -0.04711916146356048}, {
               15.542620243902434`, -0.01138887700819715}}], {{
                
                LineBox[{{32.658373170731714`, 0.0010084328260546174`}, {
                 32.658373170731714`, -0.003055413483584196}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.0010084328260546174`}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.0010084328260546174`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.003055413483584196}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.003055413483584196}]}]}, {
                
                LineBox[{{25.216741463414635`, -0.04409971307039405}, {
                 25.216741463414635`, -0.05013860985672691}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.04409971307039405}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.04409971307039405}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.05013860985672691}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.05013860985672691}]}]}, {
                
                LineBox[{{15.542620243902434`, 0.004138363327008102}, {
                 15.542620243902434`, -0.0269161173434024}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.004138363327008102}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.004138363327008102}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.0269161173434024}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.0269161173434024}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396470, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[86, 255], 0.33725490196078434`], 
               NCache[
                Rational[12, 17], 0.7058823529411765], 
               NCache[
                Rational[233, 255], 0.9137254901960784]]], {
              
              PointBox[{{32.658373170731714`, -0.013949207921103199`}, {
               25.216741463414635`, -0.02323691422524482}, {
               15.542620243902434`, 0.000846410699566222}}], {{
                
                LineBox[{{32.658373170731714`, -0.009752167817836886}, {
                 32.658373170731714`, -0.01814624802436951}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.009752167817836886}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.009752167817836886}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.01814624802436951}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.01814624802436951}]}]}, {
                
                LineBox[{{25.216741463414635`, -0.014947444717598143`}, {
                 25.216741463414635`, -0.031526383732891496`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.014947444717598143`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.014947444717598143`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.031526383732891496`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.031526383732891496`}]}]}, {
                LineBox[{{15.542620243902434`, 0.009082071229384238}, {
                 15.542620243902434`, -0.007389249830251794}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.009082071229384238}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.009082071229384238}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.007389249830251794}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.007389249830251794}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396524, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[0, 
               NCache[
                Rational[158, 255], 0.6196078431372549], 
               NCache[
                Rational[23, 51], 0.45098039215686275`]]], {
              
              PointBox[{{32.658373170731714`, -0.01843167134919193}, {
               25.216741463414635`, -0.025357463142786082`}, {
               15.542620243902434`, -0.018169575795476848`}}], {{
                
                LineBox[{{32.658373170731714`, -0.016221193852938846`}, {
                 32.658373170731714`, -0.02064214884544501}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.016221193852938846`}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.016221193852938846`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.02064214884544501}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.02064214884544501}]}]}, {
                
                LineBox[{{25.216741463414635`, -0.017483208139953275`}, {
                 25.216741463414635`, -0.033231718145618885`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.017483208139953275`}], 
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.017483208139953275`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.033231718145618885`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.033231718145618885`}]}]}, {
                
                LineBox[{{15.542620243902434`, -0.01165732354918615}, {
                 15.542620243902434`, -0.024681828041767544`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.01165732354918615}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.01165732354918615}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.024681828041767544`}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.024681828041767544`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396578, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[16, 17], 0.9411764705882353], 
               NCache[
                Rational[76, 85], 0.8941176470588236], 
               NCache[
                Rational[22, 85], 0.25882352941176473`]]], {
              
              PointBox[{{32.658373170731714`, 0.00402675420350972}, {
               25.216741463414635`, -0.021087887232710767`}, {
               15.542620243902434`, -0.009663904324338692}}], {{
                
                LineBox[{{32.658373170731714`, 0.005351650727277907}, {
                 32.658373170731714`, 0.0027018576797415332`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.005351650727277907}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.005351650727277907}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.0027018576797415332`}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.0027018576797415332`}]}]}, {
                
                LineBox[{{25.216741463414635`, -0.016500351819026326`}, {
                 25.216741463414635`, -0.025675422646395208`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.016500351819026326`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.016500351819026326`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.025675422646395208`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.025675422646395208`}]}]}, {
                
                LineBox[{{15.542620243902434`, -0.0037625618889117456`}, {
                 15.542620243902434`, -0.015565246759765639`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.0037625618889117456`}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.0037625618889117456`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.015565246759765639`}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.015565246759765639`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396632, {}}]& ], {}}}, {}, {}, {}, {}}}, {
       ImageSize -> Large, PlotLabel -> 
        FormBox["\"p3_c2t=120_Ei=100_BGP=275\"", TraditionalForm], 
        DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., -0.1}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0., -0.1}, BaseStyle -> {FontSize -> 18, 
          PointSize[Large]}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       TagBox[
        GridBox[{{
           FormBox[
            
            TemplateBox[{"\"noPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6013071895424836, 0.41568627450980394`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[46/51, 53/85, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"piPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718955`, 0.47058823529411764`, 
                    0.6091503267973856], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[86/255, 12/17, 233/255]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s+Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4130718954248366, 0.3006535947712418], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 158/255, 23/51]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s-Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6274509803921569, 0.596078431372549, 
                    0.17254901960784313`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[16/17, 76/85, 22/85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"p3_s2\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[46, 51], 0.9019607843137255], 
               NCache[
                Rational[53, 85], 0.6235294117647059], 0]], {
              
              PointBox[{{32.658373170731714`, 0.0016067844837028653`}, {
               25.216741463414635`, -0.04765565649053444}, {
               15.542620243902434`, -0.05633166231261449}}], {{
                
                LineBox[{{32.658373170731714`, 0.007864514054801772}, {
                 32.658373170731714`, -0.004650945087396042}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.007864514054801772}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.007864514054801772}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.004650945087396042}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.004650945087396042}]}]}, {
                
                LineBox[{{25.216741463414635`, -0.04563513904113784}, {
                 25.216741463414635`, -0.04967617393993103}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.04563513904113784}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.04563513904113784}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.04967617393993103}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.04967617393993103}]}]}, {
                
                LineBox[{{15.542620243902434`, -0.03954073278038521}, {
                 15.542620243902434`, -0.07312259184484377}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.03954073278038521}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.03954073278038521}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, -0.07312259184484377}
                   ], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.07312259184484377}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396686, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[86, 255], 0.33725490196078434`], 
               NCache[
                Rational[12, 17], 0.7058823529411765], 
               NCache[
                Rational[233, 255], 0.9137254901960784]]], {
              
              PointBox[{{32.658373170731714`, -0.017341567217041772`}, {
               25.216741463414635`, -0.03317893344553113}, {
               15.542620243902434`, -0.042881364365238255`}}], {{
                
                LineBox[{{32.658373170731714`, -0.015320696390443655`}, {
                 32.658373170731714`, -0.01936243804363989}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.015320696390443655`}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.015320696390443655`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.01936243804363989}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.01936243804363989}]}]}, {
                
                LineBox[{{25.216741463414635`, -0.02869679997782883}, {
                 25.216741463414635`, -0.037661066913233426`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.02869679997782883}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.02869679997782883}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.037661066913233426`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.037661066913233426`}]}]}, {
                LineBox[{{15.542620243902434`, -0.031906015361128894`}, {
                 15.542620243902434`, -0.053856713369347615`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.031906015361128894`}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.031906015361128894`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.053856713369347615`}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.053856713369347615`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396740, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[0, 
               NCache[
                Rational[158, 255], 0.6196078431372549], 
               NCache[
                Rational[23, 51], 0.45098039215686275`]]], {
              
              PointBox[{{32.658373170731714`, -0.02263387508719726}, {
               25.216741463414635`, -0.011861391549777592`}, {
               15.542620243902434`, -0.03377347139061663}}], {{
                
                LineBox[{{32.658373170731714`, -0.02184394502083678}, {
                 32.658373170731714`, -0.023423805153557742`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.02184394502083678}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.02184394502083678}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   32.658373170731714`, -0.023423805153557742`}], 
                  
                  Offset[{-1.5, 0}, {
                   32.658373170731714`, -0.023423805153557742`}]}]}, {
                
                LineBox[{{25.216741463414635`, -0.011016497093403237`}, {
                 25.216741463414635`, -0.012706286006151948`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.011016497093403237`}], 
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.011016497093403237`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.012706286006151948`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.012706286006151948`}]}]}, {
                
                LineBox[{{15.542620243902434`, -0.030285687652703383`}, {
                 15.542620243902434`, -0.037261255128529874`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.030285687652703383`}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.030285687652703383`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   15.542620243902434`, -0.037261255128529874`}], 
                  
                  Offset[{-1.5, 0}, {
                   15.542620243902434`, -0.037261255128529874`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396794, {}}]& ], {}}}, {}, {}, {}, {}}, \
{{}, {{{}, 
           TagBox[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              AbsoluteThickness[1.6], FontSize -> 18, 
              PointSize[Large], 
              RGBColor[
               NCache[
                Rational[16, 17], 0.9411764705882353], 
               NCache[
                Rational[76, 85], 0.8941176470588236], 
               NCache[
                Rational[22, 85], 0.25882352941176473`]]], {
              
              PointBox[{{32.658373170731714`, 0.009635157651099025}, {
               25.216741463414635`, -0.02630440958762852}, {
               15.542620243902434`, 0.030911689761787042`}}], {{
                
                LineBox[{{32.658373170731714`, 0.012793067221020846`}, {
                 32.658373170731714`, 0.006477248081177205}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.012793067221020846`}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.012793067221020846`}]}], 
                LineBox[{
                  Offset[{1.5, 0}, {32.658373170731714`, 
                   0.006477248081177205}], 
                  
                  Offset[{-1.5, 0}, {32.658373170731714`, 
                   0.006477248081177205}]}]}, {
                
                LineBox[{{25.216741463414635`, -0.022459919340221922`}, {
                 25.216741463414635`, -0.030148899835035117`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.022459919340221922`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.022459919340221922`}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {
                   25.216741463414635`, -0.030148899835035117`}], 
                  
                  Offset[{-1.5, 0}, {
                   25.216741463414635`, -0.030148899835035117`}]}]}, {
                
                LineBox[{{15.542620243902434`, 0.04627207069550395}, {
                 15.542620243902434`, 0.015551308828070133`}}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.04627207069550395}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.04627207069550395}]}], 
                LineBox[{
                  
                  Offset[{1.5, 0}, {15.542620243902434`, 
                   0.015551308828070133`}], 
                  
                  Offset[{-1.5, 0}, {15.542620243902434`, 
                   0.015551308828070133`}]}]}}}}, 
            Annotation[#, {{Legended}, 
              Charting`Private`Tag$396848, {}}]& ], {}}}, {}, {}, {}, {}}}, {
       ImageSize -> Large, PlotLabel -> 
        FormBox["\"p3_s2t=120_Ei=100_BGP=275\"", TraditionalForm], 
        DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., -0.1}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0., -0.1}, BaseStyle -> {FontSize -> 18, 
          PointSize[Large]}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> {960, 600}, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0., 32.658373170731714`}, {-0.1, 0.1}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       TagBox[
        GridBox[{{
           FormBox[
            
            TemplateBox[{"\"noPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[46, 51], 0.9019607843137255], 
                    NCache[
                    Rational[53, 85], 0.6235294117647059], 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6013071895424836, 0.41568627450980394`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[46/51, 53/85, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[53, 85], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"piPump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[86, 255], 0.33725490196078434`], 
                    NCache[
                    Rational[12, 17], 0.7058823529411765], 
                    NCache[
                    Rational[233, 255], 0.9137254901960784]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718955`, 0.47058823529411764`, 
                    0.6091503267973856], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[86/255, 12/17, 233/255]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[86, 255], 
                    Rational[12, 17], 
                    Rational[233, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s+Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[158, 255], 0.6196078431372549], 
                    NCache[
                    Rational[23, 51], 0.45098039215686275`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4130718954248366, 0.3006535947712418], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 158/255, 23/51]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[158, 255], 
                    Rational[23, 51]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}, {
           FormBox[
            
            TemplateBox[{"\"s-Pump\""}, "PointLegend", 
             DisplayFunction -> (StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    PointSize[Large], 
                    RGBColor[
                    NCache[
                    Rational[16, 17], 0.9411764705882353], 
                    NCache[
                    Rational[76, 85], 0.8941176470588236], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`]]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6274509803921569, 0.596078431372549, 
                    0.17254901960784313`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[16/17, 76/85, 22/85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[16, 17], 
                    Rational[76, 85], 
                    Rational[22, 85]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                  RowBox[{"{", #, "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], "}"}], "}"}]}],
                   ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "False", "}"}], ",", 
                    RowBox[{"{", "False", "}"}]}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.728097729772294*^9, {3.7280978795155745`*^9, 3.7280979361283145`*^9}, 
   3.7280981554226046`*^9, 3.728098224551716*^9, 3.7281265592910852`*^9, 
   3.728130002182232*^9, 3.728130328403228*^9, 3.728131944534441*^9, 
   3.7281347524550643`*^9, 3.728135030690082*^9, {3.728135226947395*^9, 
   3.728135262821509*^9}, 3.728138000330881*^9, 3.728139202166644*^9, 
   3.728139286715875*^9, 3.7281395846890364`*^9, 3.7284790481237893`*^9, 
   3.7284800021233935`*^9, 3.72848003648481*^9, 3.72848008365949*^9, 
   3.7284801483454857`*^9, 3.7284807859282055`*^9, 3.7284808323997188`*^9, 
   3.72848087994942*^9, 3.7284812510689554`*^9, 
   3.728481319537259*^9},ExpressionUUID->"18395bc5-2124-4bad-81fe-\
7174c6e9031b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Display all raw data and averages", "Section",
 CellChangeTimes->{{3.725718216997883*^9, 
  3.725718228341962*^9}},ExpressionUUID->"8a253907-04d7-47ce-95d6-\
225bb086d3ca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"allStokes", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stokes", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allFiles", "=", "signalFiles"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"j", "=", "1"}], ",", 
    RowBox[{"j", "<=", 
     RowBox[{"Length", "[", "energies", "]"}]}], ",", 
    RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "pumpLights", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Pump Light: \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"pumpLights", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", "\"\<, Energy: \>\"",
           "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"energies", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"fileNames", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{
            RowBox[{"signalFiles", "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#cat2", "\[Equal]", 
                RowBox[{"pumpLights", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "&"}], "]"}], "]"}], "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"#cat1", "\[Equal]", 
                RowBox[{"energies", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "&"}], "]"}], ",", 
             "\"\<fileNames\>\""}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Rasterize", "[", 
          RowBox[{"PlotListOfPolFileNames", "[", "fileNames", "]"}], "]"}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{"GetAverageCountRateFromFileNames", "[", "fileNames", "]"}],
           "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7257182661836624`*^9, 3.7257183611759806`*^9}, {
  3.7266292959027624`*^9, 3.7266293055343328`*^9}, {3.7280560034597187`*^9, 
  3.72805619387389*^9}, {3.728056649692979*^9, 3.7280567105559835`*^9}, {
  3.7280568237658386`*^9, 3.7280568786284776`*^9}, {3.7280569213497467`*^9, 
  3.7280569521641626`*^9}, {3.728057095064178*^9, 3.728057100611431*^9}, {
  3.7280571855857716`*^9, 3.7280571924143467`*^9}, {3.7280572287604666`*^9, 
  3.7280572884672494`*^9}, {3.7281255541593065`*^9, 
  3.728125560144088*^9}},ExpressionUUID->"c730482f-060b-434f-9560-\
702824d88bee"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Pump Light: noPump, Energy: 32.4584\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479086079172*^9},ExpressionUUID->"8930acfb-3cf9-4bbf-8fe1-\
fb6f22b0c27f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvf2zHsWV58nu/rK/bMT+CxvRgGljG3vMdLcc0+OZ7fmhw7sx0S8b0T0d
q+72mOume9vtxtMvEzvsGDDQboNBwsbQ7as3hJEshKQr6yIBEkJISBYSsgBh
gSQkJBA2EiBaGMSba0u3dOvWU5WVdfLkyays53w/UUGg+zxPVZ0n88nzrZMn
T/5vX/yr3534Hy+66KKv/c/5f373T//u311zzZ/+19/7X/N//F9f+drVX/7K
VV/67a/8l6u+fNU1v/7F/yn/45f+h4su+l/y/zn//xkAAAAAAEiSCQAAAMCR
vn0XAJHo7O2uPwfGzweXwCVwCVyC/RFcIv4lIJOAHiCTcAlcApdI5xKMj+AS
8S8BmQT0AJmES+AScbw/LpHOJRLsIcO6BGQS0IO4TBoPdFqdaTVcp9UZDFeG
oNU6v0CgE/R2I3v27On7FvpBp+E6rc5guDIErYbjAHpAbzeicxTNtBqu0+oM
hisDMgkABljdaUTnKJppNVyn1RkMV4aU1XAZQBXo7UZ0jqKZVsN1Wp3BcGUg
mgQAA/R2I4FG0TNnz/306OlTb74T4uQiwH2oAoarAjIJAAbo7UZkR9FcHd25
et9f3vrI/Os2FMefffOhBSv3nDx1VvAqIsB9qAKGqwIyCQAG6O1GBMeTbftO
5KKoFEjV4z/f+OD6xw9LXUgEuA9VwHBVQCYBwAC93YjUeJJrJKNAqh5LNjwj
ci0R4D5UAcNVAZkEAAP0diMi48mZs+fa4ki146dHT/tfTgS4D1XAcFVAJgHA
AL3diMh4smDlHopGyo9rFmzxv5wIcB+qgOGqgEwCgAF6uxGR8YQYSiqORJa/
wX2oAoarAjIJAAbo7Ub8x5OTp87SNVJ+7Pnpz0Tu3BO4D1XAcFVAJgHAAL3d
iP94svOZV5xk0gNbXxC5c0/gPlQBw1UBmQQAA/R2I/7jyUuvvuUkk7btOyFy
557AfagChqsCMgkABujtRvzHk/c/+Og/3/ggXSYdOHIqhQLdcB+qgOGqgEwC
gAF6uxGR8eS6yR0kjXT9zJFGgW64D1XAcFVAJgHAAL3diMh48tOjpzsE0tdb
X+qrQDfchypguCogkwBggN5uRGo8WbLhGYZGKo/4BbrhPlQBw1UBmQQAA/R2
I1LjyfsffHTLvbudcrlrR+QC3XAfqoDhqoBMAoDBxCx930hayI6ilt1vO4/I
BbrhPlQBw1UhZTVcBlAFeruREKPo4RNvbn7ypQe2vrBx54tX3byJrpRiLn+D
+1AFDFcFokkAMEBvNxJ0FE25QDfchypguCogkwBggN5uJOgomnKBbrgPVcBw
VUAmAcAAvd1I0FE05QLdcB+qgOGqgEwCgAF6u5Ggo6hrge5cVoW7mRpwH6qA
4aqATAKAAXq7kdCjKLVA90ydyaB3UgPuQxUwXBWQSQAwQG83EnoU7S7QPXtE
rsUN96EKGK4KyCQAGKC3GynHkzNnzwXakdZWoHv2uG5yh/h17cB9qAKGqwIy
CQAG6O1Gtu3YfefqfX956yOlYhHfkbazQHeukWJWTCqA+1AFDFcFZBIADNDb
m2zbd+Kqm8wp1uI70hoLdPe1720G96EMGK4KyCQAGKC318h1S+dcmH1HWsY8
XbVAd+RN3GrAfagChqsCMgkABujtVXKFQ9x8rSlm8s+GnqeLANyHKmC4KiCT
AGCA3l4lVzXEBWi1HWktm9v2OIPGAO5DFTBcFZBJADBAb69CDCUVRzmt5j9P
lw5wH6qA4aqATAKAAXp7CW9HWp95ugQZlvvglWtofmpYVgsCw1UBmQQAA/T2
Et6OtOx5ujQZhPvgpYFZPjUIq0MAw1UBmQQAg4lZ+r6R/uHtSMubp0uW9N0H
Lw3M/qm7VjwW2YpESL+5A6HTcBGr4TKANtDbSxg70vLm6VImcffBSwMbp+Qx
WRJv7nDoNBzRJAAYoLdXcd2RljdPlzIpuw9eGtiYJY/JknJzB0Wn4ZBJADBA
b6/iuiMtb54uZVJ2H7w0sDFLHpMl5eYOik7DIZMAYIDeXsNpR1rGPF2/1nWS
svvgpYGNWfKYLCk3d1B0Gg6ZBAAD9PYarjvSus7TJU6a7uPM2XPbf9KdX1Q9
ijSw8UsekyXN5o6ATsMhkwBggN5uZNmax4k70rrO0yVOUu5jZAn/1x3UzvzZ
NLDxSx6TJanmjolOwyGTAGCA3m6kGE+IO9I6zdMlTjruw7KEn3IUaWDjlzwm
SzrNHRmdhkMmAcAAvd2I03jiOk+XMom4D8oSfvtx4MipXNm+evrtMUsekyV0
c/PKpEcgkX4eGcgkABigtxthjCfG6Mew9r3N0nAf9CX85uP6mWP2n39ywzTx
g4NIHpMlUHPzyqTHJIV+Hh/IJAAYoLcbYY8nxHm6ZEnBfdCX8NcPx/yl2jEs
QStCiObmlUmPTAr9PD6QSQAwQG83onMUzdIw3BZKur5d51g0kuVTs8dQksdk
EW/uoRQ8T6GfxwcyCQAG6O1GdI6iWQKGdy7h/2NWpMj+qb9d+FCC+TMRkG3u
ARU8772f9wJkEgAM0NuN6BxFswQMJy3h502umT5VTAP1bnVfyBo+oILnOlsc
MgkABujtRnSOolkChrst4f/6httX7Nm488Wrbt5E/9S6bYdryWO9W90XsoYP
qOC5zhaHTAKAAXq7EZ2jaJaA4Yz9X/xLbfdudV8IGj6sguc6WxwyCQAG6O1G
dI6iWRqGu+7/4l9qOwWre0HQ8GEVPNfZ4pBJADCYmKXvG0kLnaNolobhrvu/
+JfaTsHqXhA0fFgFz3W2uIjVcBlAG+jtRnSOolkyhjvt/8KYp6tdLhGr4yNo
uH8rxERniyOaBAAD9PbMtKUCZTxJdiMGHxJxH677v7jO09VIxOr4yBru2QoF
cX5WOlscMgkABpp7u2VLBct4kv5GDD4k5T7o+7+4ztPVSMrqmMga7tMKlJ+V
oILS2eKQSQAwUNvb7Vsq3LXiMcanEtmIwYcE3Qdx/xeneboaCVodB3HDea1g
/1mt2nxQ/MFEZ4tDJgHAQGdv522pMJSNGHwYrvtwnaerMlyrPRE3nNEKHT+r
9lKiPg8mOlscMgkABgp7O29LhQFtxODD0N0HfZ6uytCtZhPIcHordPysCOXW
eQ8mOlscMgkABgp7O29LhQFtxODDeLgP4jxdSafVY5munwVubkor0H9Wsg8m
49HPXYFMAoCBwt7O21IhwY0YQvhuuI8q452unyXQ3E4/K8EHk94N7wXIJAAY
aOvtvC0VetyIoamFgvpuuI+SsU/Xz/pubtefleCDCfq5J9ocB+iffZNladOJ
66Zftb08uU/yVXW9nbelQvyNGNq00NTjhym+mx1ogvso0JCun/Xd3K4/K8EH
k/Hr55SfPGQSGCivTl83UaeiZwwvC706g723j19KBm9LhcgbMbTGMQgZrX9z
x1afQNP4uQ8KNauVpOtn/TV3MbDsf+G11u+W0NWrh+uDydj0c6fYMmQSGCYX
oj1z8qX4w+y/i3+VESbBfxYYe/sYp2TwtlSIuREDJY7h6lnok0Rj4z6cqFmt
JF0/i97czYFF6nB9MBmPfu46LwyZBAbJTMCnJl1m9Eyhk2b+d+Tl6gd8Xr1A
s7ePfUoGb0sFkY0YOqHHMegaqTwok0Tj4T5cqVmdYLp+IGI2t2Vg8T8e23vc
qSHGoJ8z5oUhk8AgaZVJM38zvTrztxkR5fPqLLXeriElg7elgud2GERE1kdb
js5JojFwHwwKq4uZoAMvnnL6SgXT9eMTrbn5MVL7cf3IP+lB76H3c968MGQS
GCaNqbALs3BzMqmWTjQnf3xenaXa2/WkZPC2VPDZDoNIuMft4uicJBq6+2CQ
d/tv/PPmuZkgoayYQeT1xWnujoHlercvvLOZKEHvofdz3rwwZBIYKI086+um
pycviJnK9Nvo+71fnaXa2/WkZHRuqfC3Cx9qOjif7TAo2NZHO/puyxFtLcwg
8J8JqmXFDCuvL05zdw4sf9z2UpuC8p5iHno/580LQyaBATO3av+8hpGJF5Gj
SVXoP70t2368Z+AsW/P4VTfVE7P/9IYNd614bPXq1YxPed7PD6a2S2khy7Hy
Rzss92AxfPzIm9L/+9y4ZVf1hM2+IdhDxInT3G3fSafyyb+0v7plI7tp1m16
ol/Dxdm2Y3du1JqN1DzJ2k/e3+qqswjmDgHoZi4OFDE3qccKiv1i3FJhT9dj
l+t2GBRcyw5Y/IvlsC+d7jR8bOBny1eOarr+EPP6IjS368CyeP0ztZ8VO+Jn
CXoPq5/XQ5Tcn7yg1ZBJoE+KSTiBtWxuK93iV1BMmV5GUdeyA7zDvnR6WO7D
B5Fs+Wo9zyHm9UVobqmBpXww+dKNDvGltinmAfVzwXlhutWdmXWQSSAiNTFz
IVMpRKEke92kyBUUE6evUZRedoB92Gs6Dch9eNLhegh5xdV0/YHm9UVobtmB
RSroPZR+LrJCsPzJd1pNz6yDTAIxMZTKrkqZWFW4Y1ZQTJ++RtGOsgO8NUGV
o7Om01DchycUb9uaVzyrkarP2gMttRShuWUHFqnY1CD6ufi8sN1qp4p5kEkg
MiNyxrDxWqQ93eJUUBwEPY6i9rIDdt/deYz9QmkiVG9rSgJpuozh5vU5NTe7
xIHgwCIVmxpEP5edF86sVrtm1kEmAT1Ue3ucCoqDoMdRtLPswNcWPvrlf9hU
++Of3DDd2WqUmk6DcB/+uHrbu9f8xJKuP9y8Pkpzd07EdMonwYFFKjY1iH4u
Oy+ctVvNyKyDTAJ6qPX2CBUUB0Hvo6gxAF6NY9SW2knVdOrd8DjIzgQNN6+v
s7ltEzHfePC/3fU4sUKU4MAiEptKv5+Lzwtn7VYzMusgk4Aear09dAXFoZDI
KOpadqBTXHWSiOEREJwJGm5eX2eySqsVjkWwBQcWkdhU4v38zNlzq7c8TzKT
Ni9c0GY1I7MOMgnowdjb/b3t0El8FLXjU9Np0IY7ITvFPNC8Pktz2yZiuEWw
pQYW/9hUmv28Ob9JP+zzwgVGq3mZdZBJQA+W3h6iguJQSHMUjYAqwwVnggaa
12dpbv/84bZBw39g8Y9NJdjPPesjUUKURqt5mXWQSUAP6O1GEhxF46DKcNkp
5iHm9Vma238peugKUT6xqdT6uWd9JHuIssyxN1rNy6yD4wB6QG83ktooGg2F
hufDfnPTMcZM0BDz+tqa23Uipu2IYC8vNpVUP/evj2Tsq80pvLyfN3PseZl1
cBxAD+jtRpIaRWOi0/Dcaqkp5mHl9bU1t+tETNuRToWoGkn1c9v8pvuq/wKn
WpGMzDo4DqAH9HYjSY2iMdFpuLjVQ8nrazO8dSJGdJ/lHkmqn9tDSa6r/jP3
WpGMzDo4DqAH9HYjSY2iMdFpuI/V7NrUKdBmuNQuzOlUiKqRTj8nzW+6rPrn
7cLsmlkHxwH0gN5uJJ1RNDI6DWdYTd8kNGUshovswpxOhaga6fRzt/nNr2+4
aekue4iStwuza2YdHAfQQ7nfW983khbpjKKR0Wm4q9VOiR8pYzGcPhHTdiRV
IapGtH7eGWwUL+HuswszJbMOLgNoA73diE61kGk13Mlq18SPlLEbTpmIsRwp
y8XQ/ZwebJQt4S6yCzMlsw6OA+gBvd2ITrWQaTWcbjUv8SNZ7Ia3TsRwl1+l
Q9B+Tgw2loEmwRLu0XZhhuMAekBvN6JTLWRaDadbzUv8SBaK4Uan/yc3TNs1
UuI57eH6OSXY+Dd3bK0GmiZu3kjsVJ0Bumi7MMNxAD2gtxvRqRYyrYbTrfZJ
/EgQuuHNiZhhVYiqEaifdwcb2yoqCAXoou3CDMcB9IDebkSnWsi0Gk60WiTx
Iyn8m3soFaJqBOrnHcFGa9UpRn0kI3F2YYbjAHrg9fZB14qhoFMtZFoNJ1od
LfEjGjqbOwtmuO9GeC71kdqIswszZBLQg1NvH49aMRTgPlRBtDpa4kc0+mru
t8+dPnHqybd+8UovV8/CGC61Ed5Xbn3EM0AXYRdmyCSgB3pv968VM6AYlE61
kGk1nGh1tMSPaERu7lwdTe/5+3/a+Fu3rft0cdw5/ZtTu695/ezRmLeRhTFc
aiO8+d5ZbRF2YYZMAnog9nafWjFDjEHpVAtZFMMTVMt0q+MkfkQjZj8/8NK6
XBSVAql63LH+13a/sCjanWRhDHcNNloOkay2oDn2kElAD5Te7lMrZqD1iiGT
xElHLTdnfOhWx0n8iEa0fp5rJKNAqh6b998Y52ayMIbbgo39bRlczbFft+kJ
qdNCJgE9UHo7u1bMcOsVQybJkoJatsz4OFkdIfEjGnH6ef7Nt8WRakcuXyPc
TxbMcJGN8OYHy2oTtBoyCeiB0tt5tWIGXa8YMkmQFNSyfcZnzaM30E8VIfEj
GnH6ea5FKRopPyYf/kKE+8mCGe6/EV5xBMpqg0wCgEFnb2fXiqHHoL562+bh
JquMGeKGp6CWQ8z4DLq4Ykmcfk4MJRWH7PK3tkS4cIZ7boQ3P2RWG2QSAAw6
ezu7VgzJOY7Wnk0ntRsyiQIlGbv33T2CzvgMtLhiSYR+/vrZo3SNlB+HTwp0
g85EuHCGdwYbO49wShsyCQAGnb2dVyumOwbVntOYwiO5z3jSe00YHyiGOyVj
9767R4IzPukQQSYdfHmjk0zaefAuzytSEuFCG87YCK84gma1QSYBwKCzt/Nq
xXTEoAjrPvpN7WaMJ+nUhPGh03CnZOwUdvfoccYnfSLIpNfOHHSSSQdeWudz
OWIiXJxwcS3Y2HtWG2QSAAwmZrG8h1ErRqSESI+zGK7jSVI1YXywG+6ajN37
7h69zPgMiAhq4YOP3st/AvQmyGUV+1r0RLh1m57oq35Xj1ltIs1NcRkAjBOU
3s6oFeMagzIe4skq9IHRaTxJrSaMDxbDGcnYPe7uUUx97jtyX+QZn2ERJ6iy
Ytt84vefCyqfC1ET4a7f8MeVrMheUiJ7yWpDNAkABsTezqgVI1JCRORZj1HY
kD6eJFgTxgeL4YxkbFe1/Nje454t3pz6jDnjMzjiyKS85xO/f8+4a7eMTzsl
MjSQSQAwIPZ2xqy6SAkR/2QVXmFD+ngyZhnCFsN5ydgktSy04NEy9RlhxmeI
RFvRuXn/jZ1f/opt830u4bNspDzSrHYrBWQSAAycervrrLohBhW3aD+7sCF9
PBmbDOFiRnLLth8bX3VNxs6/+WJ+s0Mtyz3dU6Y+g874DJFmPw+UsfPBR++t
2fkXdo3k+euQ2nl2iIUdiEAmAcCA0dvps+r+JUR8klV8ChsSx5PBZQg3nSBx
RtLBBzVCQ19buMVVI9lFbBP61Ge4GR8RIucVl/08zo57xnCf1BoHqZ1nA9Xv
SgHIJAAYROjtlmmvzsOnaL9PYUPieBK/JgyPNic49fhh4owkyQe1yx5KxZi2
g/J0T5/6DDTj40lf+wIX/Tzyjnsn33h6/9FV+W/hqcPLBRP2RJaNFEdSOwII
ApkEAINovb2MQf31gpbYgmmI9rmiT2FD4ngSuSYMj1Yn6BLM6fZBnWf7+oYv
foPjxShP956hpMkHf6/H+dAe9wXO+3kKO+5JIbXzbIj6XSkAmQQAg/i9nVFe
gIFnYUPieBKzJgwPihO0H2UwR8QHbd59rFDLX7pxI/1T9qd76tTnWsMfixmf
Hvem6VelbNuxu/cd9wRpHVvipkQmC2QSAAx66e2M8gKueBY2pI8n0WrCMKBn
Z1mOMpgjsnSxOJtsdW7Xqc+1u75Sm/HpSyb1vi/wdXc/QmyCoWTs+O88O1+0
fldSQCYBwKCX3h6haL9nYUP6eBKtJgwDenaW/SjbQsQH5WeTrc7tP/XZl0zq
fV/gq25ymAYdRMaO/7KR+X4pkSkDmQQAgx57e9Ci/byt6EqcxpMINWF4+IeS
iqMM5oj4oPxsstW5/ac++5JJ/e4LnMKOe4HwWTbCS4nsa+sTJyCTAGDQe28P
V7SfsRVdidN4EqEmDAObE/RL1aj7IPezeYrYJp5Tn73IpN5VSu877oWmOrZs
2vki0Uynx7S+lijygEwCgMEY93afXHHGeBK0JgwDqWp781uCOaUPuu+h5xhn
8xGxTTynPnuRSb2rlB533OsF8ZTIHpco8oBMAoCBeG9PKvjMHhjZ44m9Jkyx
H2ucyJJUtb35XcEcXmhIfMGjz9RnLzKpd5WSN9yf3iDWDdJHNiVyiIUUIJMA
YCDV29MMPrMHRlm/2dyP9c7p35zafc3rZ48KXqWGVLU9SjCHFxqSfbr3mfrs
RSaJzzwy+NuF1AQezyJm6SCSEtn7EkUekEkAMBDp7YkHnxkDo+B4YtmPNfSU
nEilI0rz8UJDIRY88qY+I8ukMuIqO/PIYN2mJwS7gQhxIq4/eninT0pk70sU
eUAmAcBgYhb2GYYSfHbKFZcaTyj7sW7ef6PItZp0qJfruwd5ejCHHRoKseDR
dTuMODKpGXGduJlaYzOQSskNj1DEjELkiKtni/e7RJGNSD/3dxkADAvP3j7Q
4HMnIuMJfT9WwZ2tatid4B93OUf6CO8ZGuIteJSKPESQSa0RV1Gx6kpueIQi
Zp3Ej7haWrwzu7L3JYpsEE0CgIFnbx9o8LkTkfGEvh/r5MNf8L+ckU4n+LWF
j375HzbV/sgO5gSthVUiHnkILZPsEVdBsepKaXichjPSS8S12eL07Mrelyiy
gUwCgIFnbx9o8LkTkfHEaT/WoMkYnU6wDOb88w8f84/7hauFlYWJPASVSaSI
q6n2VASVUjM8aMMZ6SviWjPcKbuy9yWKbCCTAGDg09uHG3zuxH88oe7HOnsc
Phk82kZxgj1uAkshUOQhqNX0iOtXbn0kskrpvbn7irhWDXfNrkxhiSIPyCQA
GPj09uEGnzvxH09c92PdefAukTv3pHe/aSFc5CGo1SlHXHtv7r4irqXhvOzK
3pco8oBMAoCBT28fbvC5E//xxHU/1qeO3But8qSF3v2mkSJV+4Gdfx4o8hDO
6sQjrv02d48R19JwXnaleHHUOEAmAcDAp7cPN/jcif944rofa3lEqDxpISmZ
1EzVDhR5CGd14hHXfpu7x4hraTg71pdIIYUSyqpPyCQAGHj29oEGnzsRGU+6
92Nd2/pSX5vBpSOTLKna4pGHcFYnHnHtt7ldI655l5C6dGG4T6wvhUIKmeOq
T8gkABh49vaBBp87ERlPOvZjbddI5RGu8mQbicgkSqq2YOQhnNWJR1z7bW7X
iGsuq6QuXRjuH+vrsZBC5r7qEzIJAAb+vT214LMIUuMJZT9W+xGu8qSRFGQS
PVVbKvIQ1OqUI669N3d3xLXi9wWvWxguFeuLX0ghY636hEwCgIF/b08k+CyL
1HjSuh/rFNXdh6s8aaR3v5m5LBKXijwUVgfaTSzliGvvzd0Rca0cu19YJNhA
heGJx/os8FZ91pq7s964BcgkoAep3t5v8FkcWffhmWYTc/lb734zc1wk7h95
yD3O8ocmgu4mlmzENXRzf/jOa++e3PXB2Zct76FEXO968POyDVQannKszwKv
3lRhNb3euAXIJKAH2d7eS/DZn+ZTagj3Ue7Huv3AQienH6HyZEnvMsl1kXhb
5IF4uTi7iflHXH0e/C0Eau5cHZ3e8tWX7/2Nl77/K8VxYtlnTj189ftvHmm+
uTXiWhxrP71g6rPiDVQannKszwKv3lRutVO9cQuQSUAPmnu7ZZFIULWQcuXJ
3mWS65fTPFZsm0+8VuTdxBgRV5EHfwshmvvsC6tzUVQKpOpxfPHHz/zE3JmN
enVhi0Dyb6Cq4cnG+tpg15tatubxTkur9cYtaHYcQBtqe7s9jLDm0RvCXbrH
ddCd9C6TXL+cpkYizlH2tZsYPeIq9eBvQby5c41kFEjV440d17Z9vIy4PnV4
+aGTm4kNlL/TNWepavjgsit5z1m55L7qJlIiFmUiQK3jAArR2dt72ZS8pMd1
0J30LpNIX46ploLrFExfu4kRcd1ojIdsc3/4zmttcaTa8e7JXZ1nY2Ty03OW
moYPKLuS95zFqzfehk7HAXQyMUvfNxKPvsIIVfpaB91J7zIpc/lyFkxdWUQe
GC3V125iFHgbjTGQbe5TD19N0Uj58crKz3eeraOB/Eqzthk+iOxK3nOW1N6C
Cl0GUI7C3p5CGMFpHXSgezCSgkyK8OX0uJsYBdkHfwuyzU0MJRWHfflbRwN5
l2ZNoZ/74PqcJb63oELHAdSisLcnEkagrIPOB8NAxXzaSMR9EL8c9vlTzqLP
5B78OxFs7vffPELXSPnxi2MPWc7mn8l/mzUanEg/Z+P6KCG+t6BCxwHUoq23
pxNG6FgHPVMr5u4H/335zzhb4ibiPjq/HHqqthHX7I6njtwbTayKP/hbEGzu
t4+sd5JJZ/YusJzN1kASpVkT6ec+OD1KiO8tqM1xAM1o6+2phRHa1kHf8aNf
N95P6C1xk3Ifxi9H5Btwze6IKVbFH/wtNJubHb187/RzTS30/KJL9i699KeL
Lm6+dPaF1ZazsRuodrQZklQ/5+H0KCFebzyG4zh0+7yLasy7/VDbGyamR/5e
+afp/bV31/9mPM/cx0dvo+PujWcw3l/bacxnIN9F9VImG6YnDGc0/rF59bm3
UW4qfzflppNjuDKJV3AvzTBCdR309gMLOu8q3Cq8BN1H9csRTKrvzu7wSxJm
I/7gb6FsbqeN5o388sNzxxd/vFRH9//w8u+t+VR5tu+svWLlqk88u+SSUibl
ssp+Qnr6jeVoiwYn2M950B8lZOuNx5JJo2rivFOe9bMzDnru5epLZpl0/h0X
/lp5c/nXystz76/8ae71GbHQIXNMpzXfQOdpRq6V/4EqsAwfn7vseRtm/q/8
n+oNGv/YefXGN2h6R7vVbeI2AQYnkzwL7qUcRsgSWIU3Nu6jk47sDu8kYTYx
NxormluqFPnPpn4/1z/b7vlYLoqMZ1u49oqHfvCrRZ3JzrPR028sR1s0eMz6
OeVRQrbeONtx7D/0Wj6A37x0Vz5o73zG+vhp8Jvln1pem9MADYc74qLLd1T+
WvlUETWZNzExd56Rc3ZGRUynNd+A1fraPbiEY0wfd7lt0x+tn+8WSZBJcRAp
uJdsGCFLYBXemLkPO5Tsjl7EarSNxvLmFqwh9u7JXblG6jzbupWXt9XiruHf
QG2lWVX185JvLdnS2aOI9cZ5juPeTc/VLpeLpdZ3W2SS0aWOREg6wxrN88w5
8UPT0w25VflHp9zo1lTdoqLlHqiTVoaPd30t1RiS6Y+2qxs/e4FyYi7vNKPB
wMoEZPnvFGflBiSTpAruJRtGyBJYhafKfbRmd0gkCfsQbaOxJ3ZvEYxevn3u
9Hen/rWgvOxMv+k82kqzqurnJT/evUeq3jjDcbQl3W3c+aL5A+ZJt2ZkpvEy
XQ/Y9UxbYk+nJ++SSTZR0XWqefNc5ET14zM3Mm3MxLpgmTH1q/yj5eqWb7w2
WTmX0lSff0Q0yRvZgntphhEEV+GxE3EVuo8DL627Y/3n2D0hUN5anI3Glj30
RUFBGCgWapkTtB+W0qwK+3k2a7VIvXGG42irBvbf7n7c/AFLCreHTBrJLHKQ
SaN5PXaHbj0tJbXJfKoRdUXLUqrJpJGUrMY3aAxxGROWale3q6SRZPH2Sb1O
mfTq9HVlbdOJyX2jL+6bnKhx3fSrLa/XP9v16mBkkmzBvTTDCP6r8PwTcXt0
Hwxp9+E7r717cpe9UCGF3Ooyu2P7gYVSYtWHOBuNOenDzqYJGgstG2jL/puJ
l7DMjycukwJVS6ta7VlvnOE4qgmltcP8AYvfbE3S7nC4lYBG8zxWmWR8Z2Od
V2eQqn4DbWfo/hJoaUqNaJI1OaojN6ntjx0NZZRJIxqYIJNGNFJTB1lfNrxY
0UL2V2cYikwKUXCP/ZTKG+c78dwSVyQRN777YEi7XB2d3vLVl+/9jXLZ1Ill
nzn18NXvv3mEdw9Vq5MqGRF0ozHZGmIxK5L5Vx/l9XPe6lo6/o85dgR/3QzH
cfPSXW4Ptja/6Z7CbQ7jmFO4DRfxT+F2jSMZrttyCeLH21KtOs7Z/UfbrRjf
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
BXO/0NTWrMlWUWCcTecPfO+TO6X2hWHIpLZn56cOLzd/wDzp1ozMNF7ukkkt
cafGSdvSdTo9eZd4aAgVh1PNm+ciJ2wRubl/nz9XLYtp3u3T9ZQj09VdBOHM
11e8wTT/OIRokmz8J/5mB7IoHEWL7Jftu6xh8PbPCma1+eNazDlvbvtHCkf8
1oGlTjKpc1V1G/Tv889v/Y5FKT137MUdz2w+9uqFGgW9r1mTraLgczaFP/Bs
1mrKo0RnbiFDJrUldSzf+gfmD1hSuD1k0khmkYNMGs3WsTt062kpqU3mU42o
K1qWUvOrqP9leqKpGGdCO5XkrVLGNK7eKZNG/tamowYjk8TjP4NOHNUziopk
Ew16VWPW3txNR+x0dK6qboP+fX5z1b9vqqMv3rTy/1s6/1v3/5vybbeumXfb
mi8ePH4gG12ztnnHvfxvzRHZKgqeZ9PzA88qmqdqtfG5gD4aMGRS9bS1w/wB
i99sTdLucLiVgEbzPFaZZHxnY+1YZ5CqfgNtZ+j+EmhpSo2P1/4wJ7Ya0SRr
GpXxq+6Mm9USmUZtHoJMEo//DChxtBm0VzKKSmUTDXpVY9bS3BZHTDw6V1W3
4fR9funm5VWN9NcLb7jlgd8wvvPba65c9tC3Og0PgWwVBf+zafiBNzXPHes/
Z3kCchoNGDJp1Y6r3B6dbH7TPYXbHMaxZiB3yqRWLJnhjkpAWiaNfqyp0prh
OHtCfFcKtzGaVA9MDUYmZQHiP4knjlqC9hpGUalsIqmsth53/Wg2N8UR2w/7
qmoLrt/nV27/VlUjdb7/zvVfsxgeAtkqCiJnG/sfuOsTkOtowJBJ+UWNp936
7C3mD9j9pmtBgJZ8INt69oZaoE66GU/rkJDUcg/VWyRmc5vSq9oDbaYldcYv
qHL1roIAptykWmqSQTulRbW3i8d/UkscrWIP2h/YELw8YL84ZRPZExU8s9pS
2PWj5jTpjthysGtxu36ff3f318q5trY4Uu3Y8cxmo+GBkK2iIHK28ZZJrpqH
kVvIkEm5O2g+iU8+/IVz7/+L+QO0BWvVKEjlg/WJrGbcZCQRp3YG4w2YCi4S
7q2qB4w3YGX0HiqW0QIvzUyktptvy1e/aFQpGq5u+AKbE40z39rtE1WleeGP
09UiD2TDolLr7SHiP70njjZJpJByj9CzXxZM/avy/42JCj5ZbYns+lFzmnZH
XKu29PyiS/YuvfSniy6u/pG4qtqI6/f51wtvKGTSf1/2R8SPfGv1/240PBCy
VRREzjZ+MqkMxjI0DyO3kFcQIFdK259bWMwD5jeZu5tWjQRAMtR6e7j4Tzqb
HfRVSDkpugfSta0v1SQuO6stHbFac5qd3eP4jDq6/4eXf2/Np0q7vrP2ipWr
PvHskkvoq6qNuH6fX/7H7xcyiRhKKo5i+VsEtSBbRUHqbOKGRy47X9IMxq5c
/RlXzcPILcSebmlgSC5KMRwzcIy9PcH4jyCRCyknSHf2S7tGKo9q0J6R1ZaU
WK06TYoj3nbPx3JRZDZw6rP+PxP69/ntNVcWGumqby6le7r82PTkA1kUmSS7
N73U2XLDRYRNj2Xns5ZgbFvPbNM8vNxCyCSgB0tvTyf+I0vMQspp4pr90naU
vYKR1ZaUWK2qhU5HnGskJw3ZpDNZnf59lrW4/2rBPzi13eJNN2VRZJLs3vT+
ZyuEzXfX/1t/YdNv2XljMPbZJZe4ah5ebiFkEtCDtt4es5BysnRkv0xRB8zq
Sl7XrLakxGpVLdgd8fOLLiE+rTefLJyS1Snf580r/mO5xu3L//h9J2e35vEl
maNM4i1FlN2b3vNsgsKm37LzbcHY7fdc5qp5eLmF2hwH0Iy23i47BTBQXLNf
LEc5Z+GU1ZaaWK2qBbsjXrnqE8RvplYNxjVZnfh9Hj7x5uYnX3pg6wvrdxz8
9por6Q339JG9GU0m+S9FlNqb3vNsgsKGniZ96OTmEDlLbcHYpx2jSfl3wsst
1OY4gGa09XbZKYDhQs9+sR+1IkjErLbUxGpNLVgcsWviR3FCdrI65fssc2xu
uf93iDeWCyqj4U1EliLK7k3PO5vsfjr0pWHlIZuz1NYoL05evNClixaah5Fb
qM1xAM1o6+2yUwARCFR0kZ79Yj+MW/t1ZrW5itW3nl0StPJkTS20OWJG4kcm
kaxu/D6bycML188j3lhZi9sukwSXIuZv6zwVvYoC/WylhpTdT6dDcZFXifKw
B2OX3v9JV83DyC3U5jiAZiZmkTphXwtj6chOAQQiQtFFSvZL59G5tZ8Rulg9
PvrPQJUnm2rB6IgZiR9ZmGR1S45N53HL/b9jMbxEdili3uJSe9NTznZ06nc2
7Pqr0U3EqMvkb+vaT6djaZjjKlEG9mDs3qWXumqezCW3UNxlAJA4Ur2934Wx
TshOAThBDA3FKbrYmf1COTq39mujU6wes8pX2aZpqgWjI2YkfmQBktUpOTYW
jVRUTGozvCSEuqPsTU+n7Wx7tv81W0MWR9t+OgUiC0XtU3v2gaIzGLtu5eVE
zVPiWjEPMgnoQaS397swloHsFEAnTqGhyEUXfeISxK39jNjFqkUjhfgS2tRC
zREzEj/Ek9VJOTamgEZz31uL4VnIpYjGvenZ1M7moyHLwziVXGJbGsZaJVrS
OVAU8un9My/ag7F5R73PutagrUrwM4eWf3eqvhBg4brP7Hy6vu0aZBLQg39v
73dhLI/OoP2R+35bKhPGKTTUV9HFMvtl3aM3P3V4OXGo5wng8kmZIlbjfAn2
FJ2qI/7B5t910pDiyer0HJs7p3/rh1vvXrzpph9sXlBu4kY0PLWliEToedr2
wz6VLLVQtCZUrAPFr776wP9RlU/HF13a2SjGIqhGzVO7gX1LL310+WUb7/v4
5uWX7V16qXGkgkwCevDs7bLrRyJjmQKQKrvnGhrqvehiYXiIrf1MT8qffvne
Xzc4BbJ3lvoS6M3tmuwqvrKSsa8Ew/DUliISYSxAMx6dU8kiC0WrU3uWgYIS
WbV8iqJ57DdgHKkgk4AeeL29DAjIrh/pBeMUgIhMYoSGei+6WBguvrWf5Un5
pUWXHV98OcMRCH4JTs3tpCFlV1by9pVoUv5+2wxPs25GZ2qfSCiJMpUsslC0
nNqzDBS2DL3J1pdc56wZIxVkEtCDU29vBgS+Q1jWUR4pL3+rISKTXENDKcx0
VA2X2tqP8qB66pE/L8TqG7tvif8lODW3q4YUXFnJ21eipPn7Pbb4U8YcuaTq
ZhBT+1w1ZNtB7N7+C0XLqT36QFHvMKxPNTUPI4gNmQT0QO/tzYAAr4zMIBCR
Sa6hoRRmOpqGe27t5/qg2suXwGhuuoYUXFnJ21eiwHX5ZCJ1M+i3LbIAjT6V
7L9QtJzaazWQ8OU3A0eMOWtGEBsyCeiB2NuNAQFeGZlB4C+TGKGhFGY6xPdC
dX1Q7eVLYFtN1JBSKyt5+0pkrOWTPdbNKHG6bVcNadRIb/3iFafKb+yFouXU
nutA0doK++4sMgeOL/kU/VO55uEFsSGTgB4ovb0tIMArIzMI/NUCIyoSYaaj
0wWIyyTXB9VepnvEra4hWFyRsa8Ee/lk5LoZNVxvm6ohTXkC+Qe3P/cdduW3
Ui1v2X8zsXXKqKPrQNF2FOqFoXl48VvIJKAHSm9vCwjw9g/qEfpzor/f5EVF
As100It/ygoG3oNq/Ome0DKpQKS4ImNfCfbySdnS2a4wbpuuIW9f99lqGFCw
8pvrKtG2gcJ1gVuhXhiahzdSQSYBPVB6u+WZjrF/UHwYFcL9/SYvKhJipsPJ
BcgKBt6DavzpnjgyqcC/uOLGbV/q/Lkt3/Dvyvd7Lp/sVHehth10v226hlzz
6A3lhWQrv7lm+LsOFHb1wtA8vJEKMgnoobO32wMCvP2DYsJ7ThTxm7yoiOxM
h6sLkBIMhet85/hWxlAv/iV0ElMmeZJ/scfu+Yy9xnL+8PLTRRcXGkxq+WRT
3QXddpB920QNWbZ4oMpvTqtE6QNFp3rhaR7GSAWZBPTQ2ds7AwKM/YOiwX5O
FPGbvKiI4EwHwwV4Gt50nS99/2LXQVv2S6AwIJlUTkWZayyvveKhH/xq8YZi
KirQysHQ2w7ybpuuIfdvXVZcKGjlN2KGP32g6FQvGUvzMEYqyCSgh87e3hnF
Ze8fVBIoaO/znCjlN9lREZE8FoYL8DHcVkPScagX/BIoDEgm1b6QZo3l6pH/
pkKsHIyw7SDvtuka8ug984oLOa1Te/XNZ+mL4Jzw3Lin+ovgPZ25jlSQSUAP
nb2dGMU1jkv27MegQfvM7zlRym96RkU881gYG1uwDae4TvqgLfglUBiKTGJM
RYmvHIyz7SDvtl01JLsiJX0RHN1e40BhKbVtVC8FjKcz15EKMgnogdLb6VHc
ffd8Yt8Lix/fc+2eA9+1T+WHDtpnfrtfyfrNaFGRKryNLXiG210nb6iPyVBk
Em8qSnblYLRtB11vm6EhSRUp2zcaYFSkt2MeKCYvoauXAqLmaa78pY9UkElA
DxOzWN5DjOIe//6vnFg6V9nMEhqKELT33P0qhN+MEBWpwtvYgmd4p+u0VwYO
uq6cQojmDjGVzJuKkl05GG3bQdfbZmjI7oqUhM2Y6IvgiDQHCt5zVtunTu69
zb7y1z5SUVwGAOMEsbfbo7i2/Rkbv+U4QXvP3a+GEl6wwNvYgmc4pUGNnSR0
SI2IYHMHnUpmz6BJrRyMvO2g020zNKRrVfO2g7GJDwPec1b1U/u3LpOqEAWZ
BPRA7O2WKK7rbtRxgvY+u19lYyGTeBtbMAx3dZ2nt18bLaRGRKq5I0wl82bQ
pFYORt5xz+m2eRrSVpFyivrbYSyC64UNjy2QCo5BJgE9OPX2Fi9AWvFd+sQ4
QXv27lcFpd8MtAovDoyNLRiCIYUdez0RkUkRppIzvxk0ytyNvcP3suMefcqJ
riGPTV5WfIRekdJ+hFj+Jsvb507fsf5zFFsowTHIJKAHRm+vRnF/tv4PiONS
ERqKGbRniISSp3Y9EnQVXmgKZ3fs+IPEb6AMtjMEQwo79nriL5PiTCUXeM6g
1WZhyvundPhedtxr3nbbd0jXkAc2zOlVyvYinUctuTFBZCtEQSYBPXj2dtfQ
UMzIA2P3q4Lcjx9bbN5lO5Fcmjaazm5qVbf51eKfDMHQo+uUwl8mRVv/lYnW
3iwMd5orjL/jnhNEDVlt8c7tRShHLbkxQXxW/jaBTAJ68OntjNBQ5MiD6zaU
WaypkxAYnZ1r8U8nwVAuKE7cdXbiL5Oirf8qEakykRvu2uHj77jnBFFDNlvc
kttMOWrJjSWJzNp7rvxtApkE9ODT2xmhociRB9dtKGNOnchid3b04p8UwdDc
Svi7P/rcylWfeHaJrcBLj66zE0+ZFGEquc3belaZeGrXI4wOH3nHPQadGrKt
xcvtRfYcWrpw6kq6rqglN4auneuK58rfJpBJQA8+vZ0XGoofeaBvQxlz6kQQ
orrbt/TSPT/5R/sOU0b3UfXRlofu6mYQCbpOC54yKdxUcmhve2jVHzI6fOQd
99hYNCSlxdnJjREWPLriufK3CWQS0INPb+eFhvoK2lO2oYw/dSKCoLqruo+m
j95+X/cAu27l5Sm7TiOeMinQVHIEb9uWg0fp8L3UlpeC0uK85MY0Z+09V/42
gUwCsXl1+rqytunE5L76y/smQ73q29t5oaE0g/aRS+f5UwZ5nNTd20d+ZJEr
pftoOsHnF13SnLkzHrX9s9J3nZ4yKcRUcgRvK9LhI9eWl4LY4q7JjSnP2vus
/G0CmQSiMqKRCq6bftXyakXt+Lw6g2dv54WG0gzau06dvPHjm3pJzmwGeShH
bbuQtrmbculT8wwrrang1eP7G//DsFynfwq37FRyHG87BgWv2BBb3DW5MeVZ
e/bKXyOQSSAmRbinlC+FtCl1UvFqiH8W+Pd2dmgotaA9feqEKDlC0PzSOqug
O20lk7uPNh9NDCUVR/rV9qr4yyTZqeQ43nYMCl6xcWpxenJj4rP2Kx75qlNw
zAJkEojJefUyol1m5MwF2TTz/yOvzsioC3/xefUC/r3dMzSUTtCeMnXiJDnE
oUzE0G+4PKpzN7n7MProZ5dcQtdItw2h2l4VkSrcglPJcbxt3uGPTV5Gv1CC
Ba/YMFq8M7kx/Vn73Xt2OQXHLEAmgZgU4SNzNMmga4q/zbzd59VZpHp7aqEh
HvapE1fJIQt9IoZxlAI1dx/Gq2y/5zInmZR+tb0qIjJJaio5prc9ct9vE6+S
ZsErNiE2bUx/ErOwmh4cswCZBCJTTbNuzsDV0onm5I/Pq7PI9vZ0QkM86FMn
FMkhC30iZs61kd9Zzt3s2z5lfMPTjtGkzgXFSSHoND2fF3Ix/Obe26J52/1b
l1GvMqjnnU5CyCTXScy3nl0SObmxajVl5a8FyCQQl7pKmlM31fm3Weakjs+r
s6C312ibOqFLjpdX/JsQo1+4UFJxFDf8zCMLja++OHnxQpfcpM4FxUkh7jRd
nxd4afnF4ZMylBue5rLT0ISQSfQFj30lNwpaDccBIlJL2R79Q5RoUpU96tn7
5M7DP6SuWrKPfscWf+rQqj/ct33K/67agjxzl570lUlPb/5efqHplXe0vWHp
/Z8kaqQF6670Nzkmq1ev7vHqzzx0q1P9otrxk8f5N58b3tnhj9z320898aCg
vSlgafGndj2yf+synsmdk5iWiftjk5cd2HCth03d+PfzqrOQd4YAGGnNIJqT
OoPITfKh3Bqs+VJfOyLlnsspehM6tZuS9lAXaY7etpi7yZ1m2xPx3qWXEmWS
U5JDCuwJEFsgUkvLf37RJfn3/NNFFxNbzTNlaE97mSyprpsmzRYXKXhun7Xv
N7kxQzQJDBS7TBrCSjc2za3B7pz+zand17x+9mjvOyIV40k5dXJq63/pd/Qj
pj24SqPqUczd5IZb8tjXrbxcakFxUvQlk8q0/Fwd3f/Dy7+35lPl1/idtVdQ
tsmzy5jOp4ya4UPPLaRTM1yw4DllEtN+hPvmIZPAMGlUM7pQE7JaESDpukk8
LFuD3TH12YdXflpkyGJTG09ckzPFRz/XOs9vPPntN/fcenzRx+gfKZZ754Zb
nohfnLz4PmuRSfqC4qToSyYVafnGjYmLw75NXlvKEP0po8cwWr9UDZcteN62
4JGxnkIcyCQwUAylsqtiJu0q3DxyjdQZlGjbGsxpyGJTG08sKiXa6Meo88z4
SGG4/YnY6NZdFxQnRV9qIVcv+ZfJ+y20lRdwCoxAJgUqeG5pBcoRKM0AMgkM
mBE9U4v3ZCnv6cbg7XOn2+JItaO2NRh7yGLQHE/okiPQ6Meo88z4SGE4pQTQ
iVc2+ywoTope1ML7bx7hbZNniam6BkYgk4IWPC8nMd/YfYvTQBGo8iRkEgAM
4vf2qd3XEDOB715zheCQ5URzPBEpqeQ5+jHWbrt+pDYZoSSttxe18PaR9fRt
8u5+4Iqf/+g/2VOGGIERyKQ4Bc8TqTwJmQQAg/i9nRhKKg7Lkp+gy9+M40lT
cvBWk7Fh1Hl2/UjTcA1pvb2ohfdOP+e0Td6rBybtJ2QERpTLpGgFzxPZPg8y
CQAGkXv762eP0v1Cfuxc1pqEzBiy6OUFjONJp+SIM/oxgjz0j+j0m71YffrM
806/hYPPL7OfkBEY0dnc2azh0YI8rkswAm2fB5kEAIPIvf3gyxudXMPG+1rH
FvqQxSgvYBlPfJIzBUc/RpCH8hGdfrMXq11/C/Zt8niBEZ3Nnc0aLhjk6XwE
Y6ynEAcyCQAGkXv7a2cOOrmGbfe0RpOIkRleRZTO8aSUHK+s+Le9j36C6PSb
vVjt+luwb5PHC4zobO6sslTBM8hDfwRjrKcIZLUIkElAD5F7+wcfvXfH+l+j
u4an28vrUSIz7Ioo9PEkhdFPEJ1+sxerXX8L9m3yeIERnc2dVQz3CfK4PoL1
vn0eZBIADOL39hXb5hP9wsK1rSvdKJEZn4ooTuNJ76OfIDr9Zl9W038LuaCy
n4oXGNHZ3FnFcPZjDuMRjLEEI5DV/kAmAT3E7+0nTj1JdA2W+sOUyIxPRRSn
8aT30U8QnX6zt/KS5N8CpXQnu5qoQqqGMx5zfB7BeqyzAZkEAINeevvm/Td2
+oWl93/SMzLjUxGFMZ6MR5UhnX6zR6spvwXiNnnsaqIKqRrOeMzxL0rZS50N
yCQAGPTS2z/46L01O//CrpHaKiYRIzOeFVHY48nQqwzp9Js9Wt35W3DaJs+n
mqgqmoY7PebEKUopDmQSAAxi9vbamlnj7rfF1mA+kZniKm8dWOokk2rlBeA+
VNG71ZbfgtN5/KuJKiE33LiEn/KYE60opTiQSQAwKPd7C3cJ+5rZk2883bY1
mH3Ievvc6fz95YN28ypOR628gGb30fct9EAiVlt+C06gmqiFYqA4uuSzxuGI
QiI7jzCQau7QLgOApAjd23lliyzk6mh6z9//08bfKh+688fwB7b8wYF7+ftx
v9QoL6DQfRQ4GU6vap44IZq7JuPjg2qiTUSGo0R2HmGAaBIADIL2dnbZopKa
rzHOTZTVAywr4+xHs7yANvdRQjGcUdU8cQSb2yjjp3Zf8/rZo1KXEERVP/cf
jgoS2XmEAWQSAAzC9XafNbNGX3Pv1j/sXBO0buXlDJmEyYhsNjT01BMP2t8m
Hh5MAanmtsh4RqJRBPT0c5/hqEkKO48wgEwCgEG43s5eM2vxNZRj79JL58ao
ye6rG8sLqHIf9NCQ1PN4aog0d95vOzvn5v03+l9IED393H8Jf5WB1t6HTAKA
Qbjezlsz2+prpqgy6e41I7W7j3dpJGNqjRL34RQakn0eTwr/5n773GmitvfJ
zRZHST/PAizhH2LtfcgkABgE6u28NbN0X2M/ajWXjtFkQBUN7sM1NCT7PJ4U
/s09tfsaYuecfPgLIvcsgoZ+noVZwj/E2vuQSQAwCNTbeWtm6b7Gfuxc9jHj
VX6+8Spi4cexdx+M0NBAS+pR8G9uJ3nf4/K3GmPfzwvCLeEfVu19yCQAGATq
7bw1syKhpPzYeJ95HQp9Ze7Yuw/X0NBwS+pR8Gzu188edeqfh09ukbpzT8a+
nxeEXsI/lNr7kEkAMAjU2xlrZl19jeXYdo85mkRfmTv27sM1NDTcknoUPJv7
4Msb3aKdB1MJNYx9Py8Y7hJ+WSCTAGAQrre7rpl19TWW4+kll7Rdhch4uw9G
aGi4JfUoeDb3a2cOOvXPAy+tk7pzT8a7n1cZ6BJ+WSCTAGAQrre7rpl19TVt
x8K1V1iuQmS83QcjNDTez+Oezf3BR+/dsf7X6F007+pSd+7JePfzKgNdwi8L
ZBIADIL2dqc1s66+pu0w1uJ2XZk73u6DFxoa4+dx/+ZesW0+sX/mnVzknkUY
735eY4hL+GWBTAKAQdDe7rpmlu5r2o6l93+y8yoUxtt98EJDY/w87t/cJ049
SeyiSdXiHu9+XmOIS/hlgUwCgEGE3k5fM0v3NW0aqVYxib0yd+zdBy80NK7P
4yLNvXn/jZ1dNH8Q8L+QIGPfz5sMawm/LJBJADCI1tuJa2a7fc3aT99uykcq
59qO/fOv/PxH/8lzZe7Yuw9eaGhcn8dFmvuDj95bs/Mv7BopnYpJBWPfz9v4
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
gfn/AcjRYfw=
    "], {{0, 356}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 356},
  PlotRange->{{0, 781}, {0, 356}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479086376065*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzUfQd8lGW2fi6E7rp3d+1ioakIFlz3rlvUXfeuW+5dXde166qr2DsqIiCg
SG9KT+gtQAhp9F5DCiEFQghpk2TSk0lPZiaTnP95zvu+33wDEVHx7n+HXxLy
5Ztv3nL6ec55//L8+68MffP591994fnr//De8++88uoLw66//+33+FLn/wgK
6vRKUNB/XHl9EP5PQUHWt865RFStv4Lku3x7Cd/+A3/k2zo3kv8V5P/vS/j2
H436Jte5bnJ9vzf1l+9d+Fsr5SXso5iNG2ljxG46Vd4UdI/8rTN/a6KshAN0
IM0Z9Eu5Fszf2qg6J4miYmJp86ZNnSg2NpZvjYmJpthNceRsag36lX60ryaH
dvL1qKho2rIjlWr5qnm0tz6f9u84RNmVLUG/NkNpKaaDW2L5/kiKiY2nslYK
ulv/rfJ0Em3ZwEPcGE0HUwvIx1djv3p2/eR7N/5WTyk7l9C7/3iannj8MXr0
70/Smx8vouNVLfrRmGUZrf38Axo+f7+eZQ/+1k4lyWH0ykMP0SNPPUPPPvM0
PfXUU/TEE4/Sk898Tod4lX6pP8PnTKL5E96npx9/nP/+BD355Gs0beUOKvaQ
9Rmekp00bOhIijnZoJeHx+bKpLDZo+gf/J4nnnicHn/8RRo7J5xO15N+dnf+
5qPC5E007s2h9PSjj9Fjjz1Jz7/8Dq3Yl0ktRDFftwLdqanwCE1+4wn6eMle
Kq2sJGf6Tvr8zX/QZ+tTyEv0a2sRKihyxlgatzROD7A7tbdW0O5Fk2ncgkjK
KnNRrauSKioqqKKylty+9l+YtWqro12zR9Abw0PoOP+5kj+lJH8/TX5zOIVs
z5Stuks/0ttUQ+VlZVRWVk7l5eWUnxZFH781htYdyqH6llbrkTy05HWT6bXX
JtPhojJ5ZEXZMZo/ciTN2XSKSZCCfqEf6a5MpXnD3qfZGxOojO+rrCyn5JjZ
9O6bMyiptPkcS9TXRtLZe0Lo7TdnUkqFr5NektPbFtDIscso39se1NEy/dq8
vcVJu9eH0qLoQ1Tt86+ot5h2hK+kzcllQZ2sT2qnhGWjacSX0VROdJeebvbW
L+iVF5+lfzz9FFPPk/TU08/Siy8+R08+NpSWHnLwm8wKYgQ1FL95DYXvy5Hf
cO3kxpk0evoGKmkzy9KZSo6spLFTlpODr5kZUXUqzR75Hi2PLwk6r3XxUErU
NBr1RQyVe8k8pSE9ij4dOZXiqlo7XJe7zdvbKilhyypaEraNsl30G+upxbRm
7HCatPIQixcylFEat4Ref+09mrNmK23dsoWiwmbTe6+/T9MXx9CJ4rp7zabE
TKcPJyyi026zJGr/smJn0CvvTKa9OS4zzrqMTTT6hQ8o4mTl+c22keJWj6PR
C7dTdZs129qUCBozYiztLvR2ONt7rLe30ukDa2n6vLV0otSjbu0qO16SvoNm
fzKGxn06ikaNC6VjZS1ql7pRW0sp7Vg6k+ZuylDDqTlMY96dSLvyvRYb5h+O
pPlfhFBCUQN5PB7yuCspZuYo+ix0N9W3WUQEUXE8cga9+tK7NGr8WJo4cQJN
+PxzGvHuKzRsQjg5Gn3ntwwtdHTDJBozbwtV+qxlqE+LpE8/nkD7S71aOHUh
b6ubWrz4pY6iZ4yR5bjXeoybksJn0UR+TIWHjIivzNhFMz58i1555UNan1gA
CaQf15V8pSk057OxFJVaQZ7Kg7wO42lzRo0Rl4V7F9EwZor3hr/Pb3+ZXh76
Eg0bN50O5nksWYDVztsyjz7+MpzS0vbRl58Pp3ffeYcmLIBY9Z1DYfin76OM
rbPpnY+WUm6DNf3yuDAaM2ohZba0WdN3lSfS0hmr6GjuCQqfOYnGLzOik3mk
NJPiU7KpwefnvqbMzTT+44mUWO6x1GDRgUU06pOZFF/mtdSmMymcxo6fSwcT
d9DnH0zCGui/daWWzK00ZexMitq7mUJCFlJI6FpKLWsxH1uWuIyGfTiLjpb5
grZ+9WSNbnBlbKPRL71A83bnyh/aXTm0fPyrNGLBHmpoIzNRX3Mpxa2ZS2NG
v0FvvPkhjV+TaBFn5fEoev+FNykssVQ/vZmORc2gl54bSwfKmvwbU0fJWyIp
cmcG84l6lRxaSO+9P5p25nrN1EF86dEz6aMRw2joOxNp+8laa0mpMpFmfPop
bc0zVkR3aq3NpDlvPUsT1iWyrFIvV/ZhWrtiOznqvF+rHlkJe8toa+hIeuGf
b9LI0SyZ332NXhw6irZm1/gFPHiYCeDDN56lD5bFW+rRW0k7QkbTC6+9I28d
PepDenXo8/Th3O1U7m7zT91DmZvm0Tuvv0HDR/Jto0fRm0OH0iczIsjZStaH
uKspduYr9ODQj2nziVrLSGhz0ZYvPqQ33v6A3/kJf8jH9PGnU2hTustvJLR7
KG3zF/T2a2/RiNHqE9577Xka+eVmKnG3nWMV+muyaoOmXzqbxrJ+HTlyJm0+
WgSlY6j09MF1tHJXmughQ4ntvjLasWoOjcGUeFCz1+7iD2s3f4Y4LIhnQh7z
CX3yySc0OXQbFTe1mSe6yxJo4RfL6Eh+Q5ARlTl7l9MkFpFjx31K4/C2CdNp
y4ka64ntPsreH07TxnzMYxxBM5bFUGFz+zl42v/f/xOL+lo9N6/XSykpKXT4
8GEedlxcXCc6evRoL/yP/4q/HDlyRH7r2eFf4+Pj/X/la0lJSbgl4Nr53nfs
2LEO70tOTv7a+xITEzu8LyEh4Vvfh+tfdx9+P/M+PB/v/z7vw/zNfb06WJce
X3OfmYf9PuzT190Havi299nn0Vl/Z7oT2xrUuOzrybWkpISGDx9OYWFhTK7r
1q3ja+PHj6cJEybIbz31tffee4+WLl0acO1zti8+++yzs+5bsmRJwLWJEyfS
pyy77dc++OADWrRoUcC1yZMn09ixYwOuvf/++6zqQgKuTZ06VaTKmc9bsGBB
wLUZM2awNBwdcO3DDz+kefPmBVybOXMmffzxxwHXsCZz5swJuPbll1/SiBEj
Aq7hfbNnzw64ht8/+uijgGt436xZswKuzZ07V8ZjvzaSZTDGbb+GeWE89muY
17Rp0wKuLVy4UNYLv/WyrR+u47ce+lpoaCgNGzYs4D4836yfuW/x4sUd3odx
2+8DXWDf7fdh/mZdzH3Lli0763lYly+++EL/5qcXpsfzJeGCggIhEaN6cG3n
zp20d+9e+a2nvoZlaGlpCbi2f/9+2r17d8A1PKuxsTHg2qFDh2jHjh0B17Bc
NTU1AdfA9Zs3bw64hmWsrq4OuAYOj46ODriGZSxj79h+LTU1lTZs2BBwbfny
5VRUVBRwLSMjg8LDwwOurVy5khwOR8C106dPW0trrq1atYqys7MDruXl5dHq
1asDrvHm0KlTpwKuFRYW0ooVKwKuRURE0PHjxwOuFRcXi1iwX4uKihKJZr+G
AIO5r5e+ht9xnbSjg2tYd4iPM+/D59jvq6+vF3K334d1wbjt9zU3Nwt92O/D
/LEO9vvcbreQv/0+rEtWVpb+TX1PS0ujNWvWyG/nQcIYzvz58+U3Q8JYnk2b
NgUsD6bT1tbmv9YJI+9l+6vP5wt4Bwgek7NfgxxyOp1n3dfU1HTWp7W2tgZc
wwKcz31QQ1ho+7WGhgYxj+zX4NKeyWxfdR+u269hY8Eg9mt435n34fl4//nc
h/nZr4FhzIaf6z7MH+tgJwz7uhgCwv6ceR+ej8/5uvvs62LuAzWcz31VVVU0
ffr0gPvs62IIFwLsG8jejggXsg30j9+MxQ+ZgDCe/RpkFuS0/dqWLVsoJycn
4BpI1cjKe/U1/G5I2ERZ6+rqLBn4o+8+nT/oa1AvRm2YIdXW1orlZL8GkWx2
wlwDpxhRc6/tMwwHmaFjt4yovoBDx0oa5jdDgiYyQzLX8vPzZUr2ayCi3Nzc
gKHjd8M0VmybCchoj3+ToSue6Ebtba3kqUil+ozl5IqfQDVJ06kxbwu11juD
bvn3nV53+R5MrXUOqjrwERUs6k+Ohb078bdr+bJjwVVUvO631JgdiRUY9O87
0W56or7GUirf/BTlz72ECkKuD+YZ9+NbHQuuxv+oLm1h0L/xLLvqWfJmUU3i
FMqfdzkVhPbtin2VWfamohV3UEvJkaCbL9wsIfWM4fR/N0vWo7V5VLTqZ0yr
1zAhqynmz7mEqva9L3cMPMcUoXTOe4rBVFpaSmPGjKH169fD7r7//3CWzYX7
MUPex37+Wc67gso2PUZtnvoOZ/mf+hp0ETwmHnbQ8q+fJdQUnPTt27fDCPi/
nGX9iaUQPMKO3W3kWhz+e/K6Tp9zlrCvQH/nNctAH/D/klybcjbJlAI2cv6V
VBr1N/I1V56TXGG6/n8vd3jo1ZlUsGQgJKt/iixpK3e9Jneca4r/JqK1zdtA
VXvfZRa8DMRqiVZw6OIbqCk39kKK1n+VmvS4sql4/e948y4lR8j1nWWWXURF
goQdC6+m6oMjqL297d95tsr66UnusqNUFvsYZsozvkz2FjPPn38FFS4fQjUJ
k3nfG/+NDQNjxrLCoPrjS5iCh1H5lqepYvuL5Do8li2C+H9nM/Yifa3d12KN
5dZ/3+n8G/tL/x8O/Sr5Hkwt3jqqrs+lmoYCFly+6/81M0Ik+LvO6Ar53p0q
6rJod9rntO7g87Rs90O0Ys/fKSLuVUo8vYQ8rU3mY7/LDJEC/AZ2MuIsCBki
tspm2XexIC+X7z3pZNEmCt3+B5q4oR9N2jCApm4cSFM23kQTw/vy/2+miMMv
U0XtqWu+w2SNIYlA2tatW2nt2rXnYy4jdYYcB2JlDofju0z2Mv3IkupUWrDt
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
YP5jtdCLG9Ek6RwXcq2dTHBMnVpwNeaCinhpgb/h8MsUxssfHf8OHckKAWAs
qCOUlkUfDUVSVBzAJDBt2OWVc4HZdNTnKgX0UJx3JRaoQya5XC8C8Ew1R6dL
dN4R0scEwxFAAdsBqMoSxRilONdhPs4AMxldHsgUVqarDzxDTd56iYwpQ/0K
U3EhJI3om/VigpYk6eIb1TkDC69RCJJgq5IDLMSOoWnRqM5XsDeC7WYZRrXJ
s+Shu9MnMvXeJJlJNbKLLSQUmqujnyla4BzOmC1Bp3lb7hG1g+AXUnzgAJxc
n1m0ubuWHz7dnr+K6QNHh+oT6YKtdODt8q7ZsYJJV3NjE07TiWWH2OpmrL2b
f5U0eEKv/GbnQZ3ss6rhJQ609l7BmYmxN+8KG++oanjvqcUUn5hEa9eu+6a8
Y3JQyFYI1idE1ScUiYk3QKxgNjLsFWbbdZ7IFCd0xCNtODlo63Nn8wjOPEue
KZlLleayLH/pDMMyzueusWLlSDd5vApY2lGrScMT6H8ChY2yUGvheF1xMi1e
1Qc+Bg/665fgkaXMlXcbW8bOECbK2NbeKuLRWXWMXPV5xoZXp04qgDmblWLN
BXXW4PIbYHhbNTmAfkLm+sMm3cVORm4F2BC8Wkri/N17bZ1tNZQS0Q3LN+8s
6atCXQLrB0mrw+vc5am24yhOqhOgpc1Uv2Abr0gtkxQj1vEU20QE+bOBF1nU
PEWKjVQSCBpiT9rnlHh6Me1K/UwOYE/LX091zSWmu2NDcxklsFyNYft/3cHn
aBnODJcGlrf7BQSzJVB/OO5CBKkikh8aRTdfesFJDhq1DEA82BSJMmEfFBO1
LPYxeIR+ZlikmSFrCSUkfCdmwP5WoT+1FGPzpkpgozeFh90AReLPHt1Ie49P
AZS8Q2YwVhYQNEpjmmSkURhXUWNurBw/J5027UfPAYD03xKBM9GJjnocNrSU
i6EHLF1e6T7BU/TSBACVBpNHmjOGXGsyMWLCsLhtzI6U/LwWUT1sn4xyEJiO
HbGGMcHh3ibnrBC6WLzzf2nhtt/T0p1/oQ2HXsSR6MYEr2MXSTfyCDiNB843
QgpWOIZHEhX/hi2x3FmnewZR0uklFiYWo3YqcIK/pzOeH9Kbv/qyMfYm+RpK
/KDgFonoBSKqVW0F85V1fCrOWYCF4sfN9/Z/BBMVPGBvjfRI4jWvpJV7HwUL
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
UVx9TBYsJW+t0BDyg36fcaAEV91tVULtSFf/QPMcSpJjE4eJgQKIWHLOSoT3
zLDQLreurIKqalv0lLpTfV6G5PDiE9Kp0mr85aOGqkJKS0nqhD/yNiVnFVFZ
cT5lZR6n5MR4/ZYkctaqwIqnLJ9Hk0hZhY1Bna2P85KrpJy1jttyzxtKcigx
IZ6O51ZalRsNjlOUmHSUCsrV+Xq1JacpIyOdjiboz0k6RqUN7d317cwSVF5U
SU0+3f26zUUnjyXwrclU5ELH7CbKTzsmp6fxyJOS06mg2sysnZpcVVRe0UDW
mQn8e0VZA0/ZWF8Xy30ttVVUVlZPVuCovYVyUzCaVLQg1q9GyjmeyB+dyLJO
Q4kuR1EP5SQnUOKxQuuoWHe1g3IKi3nbNC+U8ULw5LKclVRTWiNHC7orsuko
X0vOdlJNdTnVsNRu9zWR40QKc3YthqwW8lzCqdtZwinp9DJ9LJ+/qgkyE6p5
V+pnFn4ODTwhxJTaHihWge6IyR/LV/h9CD8iIIZ3XKM3RJ2l+YHkfExTHHNm
dumG+yl73yzyej1KRgXzLNp0I5T+/q6DXTXgrJ8kVBGGdjUUkLu1wdDu6ZKd
otH9p9F3Fp8WEg3hAZMFdZfEM9uOFmAvLFCEp9HfABbb1Zrmz4pNsyml+pRI
o31zJlKhDYqlui3YgCPzFdCstc5hckuwI6T/6UbT/1Q5V1DRH84fTs+M3c5f
22jUkhdhfeK6mfvM6Fvp8/V9KOLQeDn/rRnYg9xcI55wYA/QawhCW66l9CtW
hzZYrfZPLDfNm2yW+BVUtuVp24kdgf2SVVyoC/naW8UiVVWRN+ngMMRqsCRm
YEkgS8+q3Do4kR2tjXGvidLj2+0RXuTv0Z0UL30AijFxy2szpVYMso6pshPI
jceEeggkKshiQ9jNpbTkpbdp1PwjoH1lSMP+baFju+fSC39+iP72yCP0yAN/
pX8Mm0/HK8CrNbTqrUdo8E9/R3/H3/jr5SlrKWbOULrpkj50/2P/oMdw/cnn
KDzNTW016TT6mf+me353P93z4Bu0p9xjrFmiXJr5+Bs0ef0JxcHle2j4Y/fR
7x/4G91396M0P+7/sfYecFVk2fYwn6m7J773JvSb8F73jNM52tM5GNocMees
iIgBERUzigqIiiiKCioiYgAliCIZBUWCIDnnnHO897L+Z5+qU7dQpsN8j/7R
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
6KB7dn369OmmqanJ5J2uMPeNXxkSkklrxoS15khBVdpfmO7ubuLGi9zmRVkP
8sDbj5SbPcfOmsqaZunDOl140p5lG+Px8nRZMl5O7sNqnH5CVJ0uBSXX88Sc
iwtfllf3N3uPn9UkVJpmoeISy+7G1pn9J85C8yV/SxMNRQZ++jt/7VRZrbl/
0rrAZg2Sv4Wt68y5Rj7aFJXXCx8sCiPo69QWFoKPuSuPfsO/4/nz583Jkyfl
p9/111ZsPxl1YLs7vFqSMs9YzwW/ErZUjDfsori1kHc89do2gXvjuduPSnB1
UYbaYGP4VsgJ5O35OD6Wn/6b/DtQbryto9M6+GX2Y7aaH49daYaNtsfVHvWI
48fePQa7hLXu6mDUmr09ty0mGi560Vzo7lbx4W0vXLggtguZ2LJlC6FNklFG
bu05r8sxMyc8bu666x7zxPi3zaFDW80rY8aYNfmV5tjKaWbUjCzkMpLb1tws
89wzE8zu8hqTveB589zc7aYp4QdWZ883I5+dYU7UVZk1M0eYF5ceY3ypzm8u
WvuqGf78Gya/3d00e/3EE0+IyX7ppanm/icmyjh6GAW06A9A/P5Ja8yRnHx7
aE/+OetoN+a0Nc25J/LN28v3SPqILAmOGwA5gIbPz95uFmZuMAX5J7Av/eTP
BphC63WzEUvX7TdPvboZ6bPPBkZygIxgeOa1LSZr0wF5HWbpav93p06dtNdO
mndX7ldSPa+L0yXTff/EtWb73mP2tk6ly5+ki/Nw8OBBs2vXLv7/b+VyhrwT
E4HeW33AkQY4zixXFv6KYySxl5ZtOMibmeKiQrNh51EzcuY2q6RdOECIx3f8
MZg73ly2V9aisPDUH/sPJ7rIyckx27dv58N/x18uLjplVm87Ii6y/dCBXsoj
z9ca2bv9IpIJfWrGZvt9feRpe5oh1anqlry3ar/cq300J+f+6flwbsLezJ/I
5UEyJb2k+LQ5evyEyd6fYzbuOGK3cK/jPhuzSt/51hFZ5snpm8yRY/l2B/Oo
bwLyO8n7szXu006l6baWlJTQjSU10Keeeqp3Z9ZV9Z31J8z8UQ+Ze594zrw6
83Xz6ozp5vWpz5vHnppkNuadNYeXTjIjXltpqi8kpL352HKrpZ8zu4oqzbZ5
o83Yt3eG0l61c5555tmXzfGKs2bFjCfN1OW5pivx68LV081Tz800ua0Jf+C1
117rx9FM6y+0m25BE+GL9n/NWnbEamqoRaC47RJaUyXdI1h3nDGuh4lY5N4J
q6Xixwf383+HFifcJoBA+4V/5ybrLZfq36pdDK6HOuSi2LucwnOaeIjFySoM
8xZPpdshzarub2tra6W6zE9/J/8OJmEn8TdtWE/M2OJnUFkpdryCwN+8uv1S
lGomme1YmlyMSsEAfgdAMjSywIRCDu6kdRBkub/hbwBth+jx0+/qTTW0SeYD
D1u5KEIP236ocvCwnre78Vyxz94vCMyH+TlxpDQBvVmXSZeBO+BO+OlP5d+B
0aPoV2Vts3h/4ewCbNfLCw/Ia4nBEO6vyN/DBNgjOj07O7tXDuCq+rMHFpin
H5lgNhS2RQYhf/0s8/C9j5r1hTUmb73VvFOWmLMdoS5faZ4fMdUcskZp36JJ
ZtRrG8z5i5H41mS/Y0aPmW1Od9SZDW88a8a/s990JKS7eO3rZtSE+aa4OyHd
NrzSTH9ze7cSgISg0DukM9ORxtkY/C+8dwVQBZ00dHSiRUqS1yNWSK3ABq3q
9JMnY93wpMPpGfgCUBoqDJIIn8wgr/vtsBJmjxxI/bjswN/7Z8vJKzJrduaL
I/ju2hMK1UhFiC/bdipyvnGM/FeUyOwNZk+XEFtysi6D8FvqbYyNZFF8jqG+
egpZSVd3T1zx58/9OxKQwrSU1MqdIaKMPicJx5eP6bUToY9++NIdb5gnx75h
cuoTstKUu8KMenSk2VXXYs4eeNc8dv94s+NMh6aX8la9ap4ePd9UXuwyBVYw
HnnkZZNzXgW+y+x51yrXyVmm2bSbvQsmm0eHzzElEdNtk1k/c4wZ+/pG02KS
hEmd7/LqJmFXYP5AP6lNDYi43tgITjc89CpOhBWITWIQy8AIPIja4Au39YV3
9gaVLpfGQb3wLso8jxpdbuXgZpdEvzqlluM0waqwg4mtpZbTloAoxgkZ3YPd
Ha2RQoCf9YanM0PQBeJ/IK/KFUFjBcrRIW47dEaiQR3xpzRnX/V6hbvCSUKa
wO/VNbZFmfpQpL7rn5mzE9MWpL40b/f26uMfayjZtfUNxVvMxHvvNMNnZtkD
W2SKCveZOeN+YR6YlmUarMj01OaY6b/4oXlk2jKTZ39fsGe5GXXfHeb5D46K
t9tWst08/+APzfDZG+zNF5mcTW+bX/70x2bGxmJZx/qcZeZJ+/4T3s+W3+9b
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
Y50T0t/4/+ThgJE=\
\>"],ExpressionUUID->"07471b03-d371-44cf-bb09-ae9b48c4dca3"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxdkj1Lw1AYhYOL0kmhiINFLVVKqVq1fleT1Kq1ph2U/gHByUG6dRCan6CC
iIuDYx3UwclNEB2cBMFB8C+IODmIac59OnghHJ6c97y5770Z2tnf2u2wLCsX
PC3V+rQvm8G6vXbMC6carFcf7gq5moW7Q/VtOOq08qlhuC/kZu3KcL+4AQ+q
Xx6Oq1+MfEL9XuAR6SOcVP0ZnFL9B5xW/84bw2PiUTij/B31E5r3BJ5U/Tk8
JT8JZ8UJeFoahWfUPwLPSrfhOekBPK9+h/CC8u/wos5vgP3nVB+BlzR/DF5W
/Rt5W/M8wY7yDcO+o/oMviv9Nffju+rfnicvTZM3/M19rqjfA3nD4+QL0jr5
gvof46+Kj/AN9zDfmvb/hW/4h/y6zu8eX2y15y9KPfziv/93Q+fVi2+4znwl
fS+OX5JWyG9q3j18wxf4nvKn+J70Gb+s/dTwy5rHxa9Ig//nD1Ds34c=
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxd0mtI01EcxnExRQdNw0wFQ02GaJqoed1mPup003lL0vCCzNvSUPJNFyVr
LILEUMTmBYWaWOGLIFJBMpmL8jIxQ8yJJkhmZtoNA0tEK9rji/5w+PM9Hw6c
A79jRRcyS62trKykf9bf/7/vW0xDj8TmUq8Ylg3onrW5edSx7dEQfa4tS8k+
hDvTprziM2xnHC5Ei00M2w0i8dqI6kOUpY+if1NyQrTB9sLZduPu/DTbG3tl
DxrGInlehNAVqT7YxPbB8nDuoNLI9oW56FXxeif7OO7f9Zuom2EHILtxZkH9
gx0ITePDknIniaWD8F2dP+QxQA+G45h6dLudHYLJ+tmfpnvsk7CrNRfuxbJD
sVSjjzKcYodBFSGZOhjMDkd1b+tImh87AhnN3jn+JexIOFzLd5DcZEeh51fX
1paOLYa+dmn1/DRbgnT3+vAuO95fiv7OogX/LXo0AhxdbHts6afwcW49rGCK
HgNXg8NS3nM20DdgSMi4ZWkNkD1sWshT0GMhrHmr3vCkxyJzqCxIsP+eOMzL
05ebZPQ4PHmxODvrTo+HbNwoeGdPj4cwyyC8LafL8NlzQnRAS5dh22HcLGil
J+DRTl+VtIWegNcBFUcCd+iJaB4VV/q+pyfCafB0qeYTXY7eNx1f+4bocqgl
K2bX/fcroFvVB2oL6Ir/5jcJF5/mJG6G0JMgeOyi9VzjvCbjcsvirkc0PRne
5TdyvVQ8r4SmqlvhfIWuRKeq+np8Nz0FX0KasnQd9BQsGmVCxUt6KirK5ga0
V+mpqJyc8bHOpqftz89vMRX2BA==
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 4397.333333333333}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790865166984`*^9},ExpressionUUID->"c3f87bf6-d684-49f1-8e5f-\
749319b56450"],

Cell[BoxData["\<\"Pump Light: piPump, Energy: 32.4584\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790865323243`*^9},ExpressionUUID->"09ee217b-45a0-42e1-84ee-\
da0be290346b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Fg==
    "], {{0, 356}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 356},
  PlotRange->{{0, 781}, {0, 356}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479086797964*^9},ExpressionUUID->"4a59c839-2715-4b4a-8f1a-\
20ba89f8e867"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJw9krtKA1EURYMgBgQRVFARjEZEYvD9TEYzM3m/LIS0YpTUFv7ANP6BlY0Q
ECQWRqwEBQutFDt/wcYiabVykn2XF8Jmzb5nn3MmM3V0sl/rCQQClv/rqE47
cdPwT+zONg/sDke+m4aD0kd40K745/MFHu6qdwiPio/hCd0PwSHlX8LT4nt4
RvW/8Kx4iPnmlDcJR6QDcLSb1xiHF3T/lbwl+R/wctevXMMr8l14VX4NXpO/
CK9LL24Nb0if4E1TD29pnzHqt5UXhmPSUziu9/MOW+J59ttRfhTelWbghPL7
YVv6YPI8W/Vf5Dt6X3F8R/2q+K7ykviu6s/wk9qvgZ9U3jN+SvyGL670MV9a
/RzDXlp5Leoz8sP4hi3qs7o/gp/VvP/fb079UvTPyW/x/+SlB4Y9w+f4BWkd
v6B98uQX1f+K/KLmq+OX1I/v3Svpfhu/LO1l/rLmDbLfnvJ+mvYf1DPizg==

       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJw90m1IU1EAxvFVrEyaOBWtkLKRoiWar+U23TPf5pwTKrOIChOs1GC6MkhM
VxlpmqlfQhNGlBmmpSCZspopYYIQqaHUnKkZaIYVyzckK9rThcvlf36cwzmc
uyNddyBjrUAgkP95/37/Pd8UX0Kavac9ZbAPYCqwud3FKrW3A4olOXPFz9jO
eD10/0yVme2GwdT2Fy469mZUNozmFuayPVF0UttYKGN7wV9X/zHvLluCsART
zYVW9k54mY3d8hm2D4aLHinW/2L7ossreLJnA/e7C1fm/dybl+j+6D7X8fjJ
OnoA3EJPVB/vou9Bq9WyfLqXHYTS72JT/0N2MGY7C8S2VHYIbh4tdVzSs0Mh
OmQWlavYYdC6C6wL8xH2DodQldmXIqTvhVE8Z9OM0/fB131CeT2MHgHzjbe6
/ki2FPpB17aVS2wZZhzSRVmv2HJ83VinaHPm+SLh1NZVbxSzozBgaSob8GYr
sOLaZxxa4HzAcdS5aftTexuA2/HlS7L3dCU6a6T1WfvpStQoGi7W/b/faGwZ
W83oOUyPxud8lcBUTo+BsEVfUtJIj0Hv8EhxmokeizealU0+PI8hFqm3hj6c
stHjoPJQ24QS+/4NcZiaNadcHafHI9tpJDLDkR4Pm3wsxmMbz6tCjrHQUrvK
9VVo8nsXKOrg/ASoB/trtUfoCXCxHKwUb6WrcfbTqDDear8vgxrld84/N9h4
f4lYjKtYo1ymJ6IqLTP95THO16Banx9e8oDra3C5oHXVco+ehLJFzZSF/7sh
CYLdLQXJE3Qtoq4tO1T8oGtRMZmdF/STngzJTEhQwLQUvwFYrP8/
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 4422.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790869542236`*^9},ExpressionUUID->"2b9dac4c-b22a-476b-95e3-\
54e3df0528e7"],

Cell[BoxData["\<\"Pump Light: s+Pump, Energy: 32.4584\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.72847908696985*^9},ExpressionUUID->"17cc1e6a-4a18-4d68-8952-\
27875688f49c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
SyRi6YI1L88ghjOFkISWTYNVhiW4rj6Qb7CV/Lp1H5Ahk0A8SEZ7I3mJ/SNM
CGmuFpR5LEstkK3THZNJ/pOm0sOnqxhmwJAJmHqNpFRQxYejQJLQ8mi2yrAc
F9UHqhtsd806R77Blv6ADJkE4mHqOE2fSFiYqwVKHsuecPEwtk53TCZ5Tpqq
FT5tF10BQ1VQYy2Pbw8qCa0WjVcZlmO9+oDJBlvlAzJcBogKjHYh5mqBmMcy
b4Fsne6YTPKQNDVfXNOtsW4XmYAZZsmn3pa5ywCT0BJpvMowBZO11+Iir4cN
tnAcIB4w2oWYqwXdPJaBbJ3umEyylTS1mj69urh269B5dL1hHV0Bo6ugsvj2
9iahbbzKMB2ttVfBIu+yrwwuOq+Y5LOumWywheMA8YDRLsSKWvCcx9IKHZNJ
iVnS1Lr06S+8cl95cU1Tb1hHV8AwWjZT0cYktCFUGXaBZJG3mOSzrpqMyQZb
OA4QDxjtQqyoBZ95LG3RPZnETppaF91BSa5I0RvWoQsYXsvisduYhDaEKsPW
oSzy3vvwOfJqMuwNtnAcIB4w2oXYUgtO81hK8uOxU+d1TyaljK7+J6VDmbfs
3xc/UhfdkT6YE5MrKvWGdegChtfyeOzWJaENocqwXdQ5suoj84sTTewNtnAc
IB4w2oXYUgvKPJapRtJ9oMvy4/3LLY/nd/U8P57kJeLBuyeTPv9k/665581f
cJbEpwwsPPuVmad+vHM0C0CSpE8flB5HV29YhyJg2C2Px25dElqfma79wM6R
lbesmgx7gy0cB4gH+WivRq4qYXwkQOyqhf1bB1/vP6fkcHfeN3nv2j7dQ0ny
411y3cg/3jAqfImeOq97MinPhS6s1po9We8phYrNnFwna82nkm51uf9LKWBM
Wikeu11JaL1luvaDbrp1Yds0MIm9wRYyCcSDcLTXRa7mecmqGYaVH2kXFtVC
Lmz+7Ze399364/vu+G93/O5frvrVdC31kh+q9vZ+jfr+T0md1z2ZVJoX2jww
6Yl5k0fnn7Fy3uTUTewib0VM24uzT3OhN6wjiexlt7p47LYkoXWd6donihxZ
5N0Edy+ewt5gC5kE4qE62iV5ybYPnDn0+EXVDMN7X7yHksrsw0Ov7tg25/0D
m7xbqY0ttZAJm0tvHLxq4OKbFn4lv243P/ylq+d887JfDxDVS6KTH0/SlPuL
OyaT5LnQtTRS2tbMnexOb1inKGCGn/2B4WnbnSOSVHLRKvKihYtM142gm+RT
0tjXGTIJxENptEvykgnXLLJWjAkURr0uWnzBnYXl8hlLzl247K/e3be6KauV
WFELmbD5Yd91qSgSXrffLj7/J3f+jKJeEp38eJKmTJ3XMZmkmwtdrp1esDGb
1MialOFinK14bEklF5MiL0SsZ7puCmaOLFFj7yaATALxUBztkshVyiboLCZQ
S1ytfurbDdouwYpaSIVNqpGU1+0XM79NSfxrPpWUNbkj6JhMkuRC31Mvh+ra
G/2n9pnFJjW7/0u4GNe39ILZK/9Wfs5W5nZkSX6G//S2R/5c+JL1YCcrVYab
xWKOLPZuAsgkEA/F0Z4Hu1ang4iRq5sGJumKq5HH/rZB8+uwoha+d8uiunmk
UvvuLTPk6kU3P56kyVPndUwm6eZCV7aBhWebaKQQ9n8VF+NWrr0/+6PreGxZ
kh+donK2eGTFOpMqw41jK0cWezcBZBKIh+JoN98EfffiKQxxtWPbnAavgBBz
tZAKm6vnfJN43X694D/I1YssPx4heLvY5KnztAxnZ2fyCT0XOqWlDwKK3hQ5
/WD3f5W623o8dhaO+Na+J8xDyu3Gh7f9ccBWjiz2bgLIJBAP+WiXBLtqbYLO
U+LTxdU9S77Y7EWoYn4XTYUNcSopaw+tksWO6ubHkzR56jyK4ebZmXwizIWu
G7xdbEODZyp7c86qi1qx/8uRWkjV0eKR/2siHFGy96qhIi9tl0mJjRxZJrsJ
IJNAPOSjvS7YVXcT9Lo5pzPEVWjb38zvoi/u3Kp13YbXLpAcTTc/nqTJU+cp
DZckbgo2wIOSC73U9vTLIpTkySoDWVyj4EItPL/hqhmEdTRGs3hVOyCTzHNk
mcxwQiaBeJg6Tl2wq+4m6NH5ZzDE1Utbbm36SvRgfhd9afejetdtoyIdLj0/
nqQpU+fJDZclbhpvxPwGPlHmQhcrJemr64b++o5lf1HqxGAX1+qwrhZSjeRC
IGXNYpGXDsikDGFQ2fThLyovJns3Qe4y7BoCQLDko70u2FV3E/TquaczxNWT
T1zS7HUoYX4X1d20q4ylpOfHkzTlbI/EcHripjBjYiUJweqacG2umApMEszT
inT0dtXCh4dedTSPlDWLRV5aKpPqkkqVxqGHajKQSSAeiqNdGOyquwn6hbHy
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
ZdobMgl4pCKEqspI8AHCfBF5NqnIxlbx+6f1ykZsXX6L5GgbNq6fPnQ+3UG/
MBYrS3y0z9qa9aOSE3hw6Ikd9yoWQYpt7v3zlJfoptmrlDftn/Ytz9+/aNEi
+vWnMPTYM0SZdNeDT6Xvf/TpO7Vk0sNPXJ1+ip7/Z+fcC6snqWX1pufWvf5Q
7dLb2AxMeRfkrv7JLy27Uni0dEwqz/nVJd/J3z9jyRdtjbfM8PTgDMmnvKSB
Y32c5zy7YeNVdz4u/7mtWv2s1jGXPTW9msktvVktfuI6reMIrU7Hs3LtNW9F
Z2HNB9bx2u8uPKXEhb97re4NU0d6/l74p+j9pXeX/yY8zsTHe09DcfbCIwjP
r+4w4iOQz6L4VSIbRqYKjig0VvFO5Smln6ecdIXaCKJanVQSQn5ik8LEVk6n
HHrMZN+SEzvdXpx9GmPqo47db3+49o6vEW1JBZV8p0yG7t60jQ6esrWer3n7
oA1D1BhWyxegDUufVFt2EOspB1PDlWGHvEsaOC7GeRH6Ngc65kml6qxmpHzx
JZN61cQJNz3uZ8dc9sTLxZfEMunEO07+tfDm/K+FlyfeX/jTxOtjukAhc0SH
FZ+A8jA935X+gSqwBB+f+NoTNoz9X/4/PScoMlb8Tq1TksqkOnGbqGSSQur4
2+kWLHZzOtFjJrPNRGvmTtZyW/IUcKmkufamPqI5997yQ+VOmRz6TduF+9CS
aox90OYhamyrDRegdfdpWk85mBsuWfjjXdLAcS2TMijbHHxSZzUj5QvbcWx5
bf8dizb/cmD99MGN67ZKlwsFfjP/U81rExqg4nB7XHT+jsJfC5/KJkgunDp1
4jg9x1TOiogOKz4BqfWlc9CZjhF9nHzaamMn/qgzQ8SVSdVsRidzQmZCqLQN
LimFHPnJmxQy1nM6EWMmM//4xrqrGVMfElLBsLDvW0pb1t7xNcpOmRKUm7Y7
90GXarr7oM1D1Pw4zSq6k2DWUw6WDM9V34Enf2x4SQOnqR5vFonVuilfeI7j
/sdeLt0BUrFU+26JTBK61J4ZErkGGZ8NqdEDr42MVORW4R9KZUCSGSqZJD4H
qiQRfFx1WQrTRQpje9+pOqV8qS4dNL2TgYUFyPzf4qMJUmUXxYxgq1tVUwnD
v61l4W4QSpJAuzmdtGImraeAS9XLpdcuWTnjP8o10vdvmGsyey/BtfugSDXd
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
AAAAAAAAAAAAAADH/P+J7A2e
    "], {{0, 356}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 356},
  PlotRange->{{0, 781}, {0, 356}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479087251116*^9},ExpressionUUID->"9017f357-1ba3-436a-9b84-\
3c93b540ffc7"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxVkT1LglEYhl8coi0Dg6AGkzARk9Ls0/L4VZbZIAS1NATNbc3nP0S0NAhN
FVhSU9TWX3BoaI1GIYqWIH2vcwsdeLm53vs5z8d5Jg6P60cBz/Oy3a+nnE7u
5rp7TMu4H2hIPIgOiYPGjw+KQ2a3d57uHI/6ahviceIvxGH8R3EEfRBPEh9Q
/qjP8Yw45tdrvys+Tv2U/AT53+Qnib8Xz+CfiGdhI06RLypO00/j1vEc/pQ4
A5fE8+Qb0P0FdES8iHYUv8T9uvxl+Fm8wvxNcRY/rnlXma8oXoP3xTniD8SG
/iKOrSE+LD+Pvrp6No9/pvoF+FJ+gff5lF+Ef+UX/9fzSvQzrfol5huWX0bF
tkz8j/Kvk+9b+dep19/3BvoiH7an8ivU25NfYZ60/E3ynbv9WMdJ7WuLfq6a
znf84dirwl+6X0Uryr+Nr31auN1/vxr9jWn+Gv3H9D47+ImW+QOuId3N
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxV0XtIU2EcxvEhWVbDzbytXNJqDRlmbl7SzfSZTp3zmpnYQhRNc5i5P5RF
UZ2SLKVIsNBZpFNKpTQM7UoJUk67WCJlkwyiYF4yNMma2qxoP6EDh8PnfHnf
95z3FeQUp+Y5sFissD/33+e/azpCJ76SbBTIYX8B2QhPW2iT2e2EBv3Ws/p5
MhcHCgyf+hbIbjhxzMrpv0fmYcrZqD7TSOZDlZvJL60nb0KvuCEt9S55M3pt
gx6C22Qh5GvuuHdNk0VQxLNnLvLo+3yw9PZFq3GEuhhJH71Nez2o++JlyZZT
wUPU/eDZI7TZOsj+SJdqXQcYsgQtFcwT6R6yFFUB/Wk/IsgBGPfUvOu0htod
iLiQ5vIOEzkIA3Nd+vYhcjDKVl4/t1ZE43dA7dmdPCohh2B0srQ4cAM5FBt/
Hckx5pJlyK4sK7p0nyxHd715l76NHIZVvN0ebC79704ICpX13kJyOIbfCH/m
BpEjEH41b3EihAxUmTQ1H1bbzQDrs25MnneiroDMJ5/f+Mq+HqMApy/fNG+g
9SOh6mlqkl6jHgm2ZaZl8DP1KCwMHpJ0f6Ee9f96LCWYC837tetofSVe+x50
91uk8dHodE/RsMlMNFy+T3BPj1GPwVj74a9cC/UYPM2u1WUsn3csGreHKiyP
qcciqH3iplctdRWsl8MlGQXUVeA4zTyaUlOPQ7DjeInDnP08mTiYObFeD57R
+aqhq6mI1FRTV+Pow1ZZdRv1eGwTmVU5fJo/HkXPDZXR+2j+BAwvpegMdJ5M
Am6l+5+cXd6/RLzPnO1xW0H7kwjBt3LXOmfavyQoszIdj7vI8RszyPak
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 4446.333333333333}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790873917503`*^9},ExpressionUUID->"418fc6bc-51a6-4fdf-a602-\
83d6b4dae8e0"],

Cell[BoxData["\<\"Pump Light: s-Pump, Energy: 32.4584\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790874073763`*^9},ExpressionUUID->"cacf7f3b-e727-4770-a41d-\
3020f40e097a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
o5uH1i6rXug1EUhTcoGCDMeRGC58Jh9tvUP8AXmIkW5CgIp4INl+9lIIN3XR
TXhajYCkinvI3yIxmlsUXlU90SZ9J+MBdt/06ExUITRJoJ2KCFJl58WMYKtb
WVMJw785WbhBiskoSpnHyEqZb5p91QPLri+MRVOXXb923tXZuMq+EwbWBQM9
bfWKV8bnt4wxVqnYm8SdyqQAM65nXZRnuHm+0CncpKnpTCz9qJqJtdXi5eq3
iUZS3pV8F551siqKVTFj9CP73jEcR/LzMBv38lNJF85WhLjTNqzJ8h3mFnXK
q1t58VE8g/AGRk9LT3l0WbceEN6AlO57yFlGm5UqPsPqOSjVO7UeYHmhcfip
3d+TV5qX/tifT/IgM6xLz5SikqQV3+zWdGs3p06f2T10kpIUlzGKas1jFEqZ
D8688vk5Y9bM/8L6OWN2zLyy6+ew39+eLgQDI201Y5XKZJO4U5kUTsb1chc9
+OR1uitBVvKFTuEmTU1nYukyqWomVtLiWsu1KfsPf7R++6ElG/c99+LAwRlf
otwYI3W/LuwqipQvKc9xJM13avvktAcmw2PyfazUSAAEQwwyKVFHDy0e/Ml9
z2W/+JIfgL0LBo6eOF31EV2/yZjHIJYy17bWDBeCQTdtNWOVynCTuDuZFE7G
dcN8jBlW8oVOMUiaWp6RqDokM7HlFjfJ6Z1RtZmrfFQG5FjCPAZJ/iWNwXE0
gfIcj3b0E1DS+t5enhXPju9PWr3yxf3CT2n5Td48BrGUOd9yFu4EAz1tNWOV
ytA9ubM6kIzr5vkYM2w536qkqcpw/cJMrOSgL7Pa0pBWduGZw18VrQ4ULFyi
9Y4DgIx29/ZEIyl37M5Ytav8QbrfNJzHUJYy94zrPV+UtNWMVSpD9+TO6hAy
rlvJx5hiJV9oehQyq2uF65vPxOZb3JaGtLULzxArq6LLtv5U/iVtt+MAIE+L
e/up02eIhbx3D50sfJbuN61Ms0tKmXvGQwYhOYxVKl33dHrfwkLwiTurdVMi
uCjLYnElSHdyrOooZFbXDdc3n4nNWtyihrS1C88QP1UUW+w4ACjQ4t7eu2CA
mAJufG8xIITuNwOZZrdF7TKJsUpFd0/vdv8zCz5xarU6JUKFeLCFVhc9c+J1
SQCzeb7Q9MgrH3ZSKZOZ2KzFLWpIW7vwDPFTRbHFjgOAAi3u7cSppPQobH8j
+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
AAAAAAAAAAAA4Jj/H2oVZpI=
    "], {{0, 356}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 356},
  PlotRange->{{0, 781}, {0, 356}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790876886425`*^9},ExpressionUUID->"8703180a-4f0b-4e54-80a7-\
29d9a61c7336"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJw9k78vA3Echi8mDHSQEEGQpqGkivp92mvvWpQ2jcTE1EQkFjGS4GaTzSIS
NmfgRPwFJpGYir/AYjGZ6T339pLmzdPnvu/380nagere+naTYRjm/6eePD+Z
W8/z4n2+FX5hBdwtbg7YO7sPOUJeiTuCdDfFXdZG/dkR99DXLu6HW8SD9I+I
o/hDcYz8Fg+RbZovzn22eJQ+U5wIfK1TnKT/XX3jnD8VT8C74kn6EuIU+XUX
8hT7V+Snue9EPAP74ln6L8Vz+DfxPNl4f4H3I5rfhCviRe6PidPsFxVn6H9V
n8X565Bdi/3O5bPkhXwWn5bP0TcmnyOT8jbpyNucf5J3mO9Z3iE/5PPM9yuf
Zz9D+xToe5QvMM+Lzi9x/kEert3IL+OP5UMuy69w35E8bGzJF3l/WL7IPPvy
q+yn/4sLewfya+SnPOw2fo8luDfc1y3Rl9L+ZfZp9a0/6VjizA==
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJw9030s1HEAx/FDHsvW07jNQwkldeoQ55CPc7jzEKOWyNzOTmsSQ1nF3Goe
Fkv94Q/VSg8sGqmpNYSiMVKakVamrUmtu1gtD12mWvfx23777fV777t9v7/v
9+eizk7QmAoEgqC/97/n/2s2pLI92inPIhDGFxiIM6+JMqOt0DH6pm20Wmr0
WnRMVLzS36Q3QrJekWmdSQvhJbaZq86nHSE+rLzvKKI3o8+x5KjEg96CxqpD
1TFy2g1vp9NPPz1Hb0VcQ+/Y7ATtgbNz2+2aFmlP9NSnmra5cr474VnX/POM
M+0FQ9b7gVwTejdEp75OqoY4Xoycznnf7ou0N0YqHTxMCmgftBcrAjoiaF/s
T5L9crKj96BZUq93V9N+aH3cFR5fTvvDWd7dr2mhJRiqGFsYqKUDkNYTPHWg
n5Yi9eRltN+jA1FhKz1WYqCDIH42L5wVcT3BmOpZddDClt6LS/pG712r6RBM
pWxb8/05xwN18hOey7eM1gLj15c35V1hD8WwYjFJd409FNOld4ofJbLL8KSp
vKU5kl2GGyq3xNe0IAy+hm6tVRJ7GFysSs7LWtnlcHXKVVp3scsxqcy/a/OS
PRyajI/CmU/s4Yj/XTu09I09ArqikYKGB+wRSCjvtEzuZY/Ehwsa4Qt+b20k
/IYnlpYb2BWo0vcVOZSxKxCvTknTqNiV8Fkn0mWXsivRVVTWl7NyvqOwYFmb
dkTGHoUC2efhL4Xs0YgbzzLL5v+ijYZ/yExh8sp5joFQ+SNjjOvVxsBlQ87g
7ZXzGAuDn3u6zty4f9pY9B63Vw3acz/34eFV9bsd81L8AbKf+v8=
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 4432.333333333333}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479087829277*^9},ExpressionUUID->"4002e85d-5ead-4af2-a051-\
d75305ec83e9"],

Cell[BoxData["\<\"Pump Light: noPump, Energy: 25.0167\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479087829277*^9},ExpressionUUID->"9617c87d-6a5f-4f3c-8d7d-\
f0efc688a085"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HcG9yp1lTpDMnDNnZoxz4L2Bsh8Q3crLE7jUwc90jOh097PvvTPTpUbjZwmu
6U9UAJvEbH4m3F3bEran283eeolBOivxTrmTBo+u4S/VffFaoGU1UQiTZN9b
RrUXZVSF01TNIJwYCbdJhV+esvXDhllyPVpik4RDquWTvD3I2ByIi/n5rrLS
Ybe4PzzNirencsxdOa8hroPqopXgdNePxXhjTqXLu/zEkqhKCqKs9Tuj0cRO
BnJrddbfeqty0RLp3OmV2rl+PZJVjHOt69weuWu4moArax09V6sPd+880F5V
d8a5iZsNmr0ooyqcpmoG4cRIrE1yWxQwOmTxCeJFN+fMjONtL5vkMu/kuKhb
YI/nSO5lkxxLXj4uNXOmHzvBnz5akUpHyNR97+X80O7L9YpN8hBlW6w0jxAt
1Xmb24QRqU366c5wX9VsX7HcfLnZW3/nRp/x35Gh84bPCX1lTQLNXpRRFU5T
NYNwYiTWJomfVp5X8b/WHhSfIAnhDmCTYiKLfNik2Lge+YAuvaxKaJP4UjFG
RC1KyWaTYkKyxhyLZKWSiaaIREe6iopR7zaxRtommdh2vz2n5pGMw87lTBif
gMp7rCr7mYzMXOvHNXtB0atLV44n6/a/siYhSH9ibTanfYUEguGDFBBOisTa
JH6HKVsRnyAZN12DtD0GXG5Cw3kdqU0SHsmvHPE+zv2y9gq4XcH7Q1ALU3LM
JtniiMbNlvqNHEfaRdneEtqkGA8Mm3Sf4e+bfzi1ebAp61zuZLlBkizJda6f
uDbrtffyZy3e8UsrcfeSnU+8v/F3Ly7KN35uf11do76yJkGjPzHc0ariZr4r
eHnRHuMfUL39Q9rViD8YPkgB4aRIrE1amF8v9EgZWfvEJ8jGTf8h3OIZD3EI
t+AmwUO4/c4jCe7rcgvF0wWhVk6X5hH77qyShyjhbJJ9Wgw2KYbbVzu1PVK3
y/4mZllW8vjCze+HNYfjtz8R7q4ScEYrIWD4IAWEkyKxNsnoBoU9ZOGXp8Qn
yMdNvwkBvEJnBPHHDl+huugmvKyPgCSXOvBVVIzmjv0oxj2LfClNfiPXdUAh
otgkW2iSwDslF3G2SX6zc9s8kmS3XLNUH8sMpZ6++hPDI3nGkOdVtIRSsajB
8EEKCCdFYm3S7ZG7zhDTjKx9P968LT5B7YE1wSyII6jJGH2d8yYxITvCeRTX
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
SO/WLg9bEuZTWrHLIyeSWbKXvJO9+K95y/6wesmbm5a/LLmF57RV9bFMW7WF
K3HxWY/D8EEKCCcFbBIAGqR3a/cMW7pU9mzPhepjXdvr2tYc6Sg4USXenNFZ
jq2dYfqWVz/acnrdFOExpzc8pJjWsqf/sFVnwyN5PgGXV9ES0SeG4YMUEE4K
2CQANKDQ2oVhS+dyJw0eXWM7Uj26ySivZ24yHEtV9jNuBxQp75OSs/dpswKD
Q8Nu80i2YgthCgsMH6SAcFLAJgGgAZ3Wzoct3eytdx7guZGurdR/VbjzQHvX
BtfN3XztkHLtxwtGHbKKGhXTTmZk7YviU8LwQQoIJwVsEgAaoLVbeG6kayuG
45I4qxM+03139N6zPYpTSWaJ4vE3DB+kgHBSpJhN4jakf8DaT/47twNse9aL
Njbz2OHecYrtOvy29t8xL0SXFVfA8zLiKyjXYux0x/5v9y8gvqZQrfJnJcao
gUqlkw7YJAv5RrrOMtReLHFWhzZN9GWT6trW9PYP+drHpLH1UugfAoYPUkA4
KVLQJsWOvPcG+rFxdnTQH3+bf0s8ZN874v6r3MHWq9zb48dzL42/P+oVPCyB
6LLiCnheJuZexgs+drZ1nO6sn8s1xyt4T63nZ2X/Ntzr465ayWglBtgkC18b
6RrFsFUSZ+V387iT3aV1LRd82SRrS5QQwfBBCggnRTLYpK7vaysb395e+2JZ
Q0bb+SrZoYJx03rJ5b3xkV008MdOlYwN+AJzZU6azJwzZ/w6Mdf0nBURXVZc
Aal6Wx38TMcIT+cuIxcjvI/4sxp7Z2bQ2STYpBRBfSNdw1AxqbNS3TxurPQN
tnVfvObLJtm2RAkFDB+kgHBSJNwmHTixxNbvGWbJ9WiJTRIOqZZP8h5wx3yC
i/n5rrLSYbe4PzzNirencs7HOK4hroPqopXodK52MYbNcU3Xj1coynhjTqXk
M7cW+4xGEzsZyC1AWn8n46ocbBKP20a6gsCko2uuDw/09B/uLPvPbseobx6X
XT6Dje6T+3zmbnWbZNiq0D8BDB+kgHBSJNYmtZ2vEvZ+RzoKxCeIF92cMzOO
t71sksu8k+Oi9uuMReZ4juReNinWqPi71MyZfuyEbEbO/ZqjVa60xSG5WUrT
Zrl+5rbFSvMs0fpjcs8mmSS6IsmC50a6pzc8tLP0l/zOIyt3TSvaPuVEnn0f
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
Kp5+Iu8hp8doyp+gaJPKCn6usdxmlDcXrPO0Ome9LZNruVD0a9uH6anl3Q0v
SSocSkaCJCTh7TxR0BQOmwRSklEXZLMuo35mzBnd+8P2fuyBMW/yl5O/ex+0
diFJ0ovadohTGe4rKp+2xTZ/u/u3qyr+Xnjwil3T9mx+xGkzVDKE5++Yahw5
njR7foyvcEupbZbZ83d1rp/oyyP5LbxFVExx8OrSlW42KcSMBElF1O3cLRVV
wlNUJckPPM7AJoG0gXdG9yeTxhfm7MtxNgs1Pvkkf3cMtHYhSdiLqg/3TfkT
Tm94yPhv64YHazY97Hm8YYpsHuNMzoPyDOGGRzIubhy58JOFlpf4vVpKbbPU
rnoqoBGSl/62CnMgVs+WuWj7b9xskltGglQnonbutgPy6e7L6jsjR0oS/sDj
AGwSSBdi5o9EgUtjRke0HjdujuTvjoHWLiQJe1H14X75LqXDbM7KOY0jzBBu
m4DalfU/rCkjxZTaZnnv4yw3hyNcXPM7v5S37A/mjZaWzFT/HF5YWCC0SbaM
BGlDFO3cNRWVS6DarESkqErCH3gcgE0CaYHN3Dgil3inE7M453hb/u4YaO1C
krAX9Z5KcrqjMlV7sLZkmpvfMDOEV22ZVF0w0XJTNidjuKO61f/gaV3MlNpW
Mf6MbjZp9dI3DSf2xpIsX3bx9eWLhYN4or/8qAi9nbumonL3SFaJZ4qqJPyB
xwHYJJD63HMxbnFIMQepzBcpzybxNIJRiouLE12FGLyTY/ufQbIVcxHNswSM
GjKsCx+hVL3yH0M3SLyFO7Rpoq8P4a21bziH7zVbv070999YU9tQ+uU3+2q+
9fWWJ6G0c6sCxv+8uMBfaghbMa4TvD4qJNsPPD4EV80PFmENewCoIn2izXHg
uBFCbFIUNCbZPzbbzlcFdEGepW7jw9oeSf0ZtGNrZ9gmag5VrDZzN5nxVKfU
3Jpi9fxmy3z3s7dtA/e8nFomDTmONBrZLcint39I8pb69YO0c2cFZn/kkhdC
ucQtRVWy/cDjQ4iqMXCAeOP2OJuH1cGTblGRbL1o32CbbHxXXlyTlKotk0Kf
2BGWr79p4HeeNZMVrK38lVWTlbumFW2fIkxW4NfC+c2WuSgrJoHSe+sOfrql
MXSXouisJPvNPfdh5fOZVcHjfLTbuaRuAUt8Hn9Lth94fIBNAqmK7JF/MzaJ
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
qAoPXXXvleNWmsTskNazrIfrjXGzd/u/M/+fj9ix4pdsVkQ9vNwYKHkVHvNj
ux7LKrMn9DaH2qH2Yslwr85Pd4b7qmbLV44spX6zV721VpyO24wa0kuCZMMy
NuZzc5Jtjq1iOMPh75t/OLV5sClLkh9bPerbMFTW1ar2vOX5sRje2Lj+lf7z
p4/s6bvgmngcAwegA1q7EJpugVEVHp3q73trQvFIRmms+QM/bqpbEe/w8rEi
nEwQzI9xMw+8IbQ9tqYy3KugqNTv8uKfV3zoFjXEdJMgSZBsc2wrKp+VetS3
9SldHx7ILldKn3Uod7ye7eun1uf9fxfOtNgqgIED0AGtXQhNt8CoCo9O9bEj
C8KySfxymIWiFVFZPrMlwbYhsUPxwVOp3+XFlz753OmR+BAjZxIka3tZt3Am
CerbHF8o+rXbRfiga5UVST4MTD19Fv+8gFk610+s35XJ1wQDB6ADWrsQmm6B
URUeneoL3btD8Ui25TC/eIaX25Jgpyjqy4vLSh63RQ05d7a1kiA5t5c9vW5K
VfYzGZm5fDiTHMWpJLPYwrcMd1TZ+Pa6qqes+t8Luv72T9/t/p3iiiTzmT5L
GFpWt+U162oYOAAd0NqF0HQLjKrw6FTfvv2Dr7zZbkU9tlaCfPksDVBfXtxY
+QEfNSS8mpkESbK9bOf6iWYiI6fFsuF3m2N+R1rht2Z9d4e+eUNlRdJv+ix+
02S+nD5yv2IYOAAd5oyR6IokFzTdAqMqPFLVm0rFDxapl601s4KkuLHBL59V
1xYGv2BSobi8qPiNV+1Y4Wlp9ua86Hkdv/vbWjvSGh7JU44h2XNF0m98u/W8
gK20rP8FhgxADbR2ITTdAqMqPFLVnW0bg3ikNbt/vXb3b6w/NVLcSEi/r1tx
edEQ7uk8Qwy69ru/rbnLjFFDxZUyz2gxv/Htts34+GI+/oaBA9ABrV1I+g0f
itAUHrXqyi//i8fAtOux5aXTbS+uKPt59hchpLiRkK5ft2R50Yzz+az8V57O
01fQNZ9S24nf/W3NHWnVg65z9j4t/0D8xrcLN+Mzy/HabQwDB6AEWruQdB0+
PKEpPGrVt2//UMSNy86yqfQXV/qb+OWwQyezPMcyM8VNENL763Y+nSeP87E5
T8WpJFu+63sptfe+cvtqp60y6pmOrA3vfAVdey7Iqse3SzbjM0r9zvcZBg5A
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
    "], {{0, 356}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 356},
  PlotRange->{{0, 781}, {0, 356}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790881105433`*^9},ExpressionUUID->"074f18ba-08e4-44f0-9b47-\
b405f438eb6d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxVkj0sQ1EYhm9MJAaDgbhEpZESqZ8WrZae2/8/IpJOEhHSySA1iPEuqooq
k1gwiAS7WKzdJRKLRFIDi3TsInGv93sHJ2m+PPc533u+e3oda5tL+RZN04LW
z65YjZBeK+i1r1MlD9Qf/5wIt6K2kzuUv1L3VTxV4U7U5rFwl9qyAx4qwrrK
2WuX3A/uJQ8oO67ePBJ2In+dPKg+LO3rI7uQf3EoPIx5H8kj6u7WWmWyG+e9
HAiPIW+FPI6qysIT2J8je5DfTfZiXhd5EvPckKfgS/vC0+BPsg95V2Q/5nGz
f0bZunBPH8B99NAHURfpZ+GX6edw3iV9CPONkhXyncKmsLck3sD7v+2JNzBv
G30Y+e/0YXiDPoK6I2xGsF/RR7F/iD6K2pQ8LYbz8/Qx/J/n7I/jvp7o46ir
9In/85oJ7P9mfhL515w/ifmqRfEp1DNhM4X73aBPY55n+rR8D8zP4HwH8zPo
D9Bnsb/B/qx8X/Tzcn/sF36lX8D7bBfVL66H7Tk=
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxVzm1IU1Ecx/GVFUFmQxaGjnBOr7E2c5qmc82fc25ubkkjl5ka5qISxR7Y
Jk3TiMqIREVImS6NRGYvCpMiyV5E+dAgRZwl5sMbH1rrgUKjEZjR/QsdzuXy
ud9zzzmCk+XGUxs5HI587fn7/je+pc5en9P3S6PBfoDZPjicdJdhvRX5j2Ly
9m4mc7Gow71mWxRrHjwuf3W3kbwLXx4EuZoWIlnzUfhzH+P0kMNh3XGjltND
joDjmeSrtZMcCf7g+bVJZlAo2hDpOEbegxBl6OFVMVkEU3CbojiRLIbBc+7o
cBQ5Bha1eqVoXsg6FsPTrW0dfWQpHsedHSs2kuMgZz7EyvPI8eD2FFwxqMj7
MbptuXJOS07AFk9hl7SCnAi30VxdG0Q+gKL3/t7kOHISsgOvjoyEkJPh13S8
eJdFlsF+PL50KIycgjft0RXL6+fLcfmVUKz8FcH6IPi2oYJr+dQV6BEpguzr
+6fCahM4vD5aD/BOTDFLS6xrABcTMue+TT0N3Z/im3Sl1NNQ9VpiKqmiroR3
p23aVUZdCf7AU/NiI/V0LIyJZc4u6umo835W1a93Fco7AyZ7b1JX4XSotr/R
Sj0DvsoVZXU79Qw0BG6/NdpLXY0WoXsi+yV1NdLu//5ocVLX/H/fGg0sy5Wa
txeoZ2LyCE/TbqKeib47Mq7EK2C7FrkPGy6u+ljXaBEgHU/ImaKuw8QTji5x
E/2vg6f1TONuhvbPguJHcHCOkHoWkp1Dl8ok1PVonakNC+dS12N+oG5GGk7d
gPHnvuaADOoG5NpklpQS6ofgqP8ubJoV4A+G2OzI
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 1210.4444444444443`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479088251176*^9},ExpressionUUID->"0014ffca-420b-4834-9bea-\
d23b4b3decb1"],

Cell[BoxData["\<\"Pump Light: piPump, Energy: 25.0167\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479088266802*^9},ExpressionUUID->"43724e83-b075-4287-9c7b-\
f94c9f61dc3a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvft3FcfZ7+mZ+WV+mbXmXzhrxcYYOyZO/BI7J5m872RmTSYrObMcT9Z5
j+fgNzjGNkkcG8d2zvFrEy4C29wsCTAXCxB3mZvERchgMAhkYZAsY+4YIYRA
YCQbiHwRN/c0atSq3V1V/VT1Ze+t5/tZtbzM7t3d9XTXrvrqqaee+g+j/vLI
6P/xjjvueOF/dv/zyO9f/uexY3//3377v7r/+H+ffeGZp5598g+/fPavTz71
5Ngfj/qf3A//8D/cccf/4v7Prf93AAAAAABAQTIaAAAAMCTfYxcAGRHZ5k1/
DhY/H9wCt8AtcAvrU3CLLG8BmQS4EdnaB+uPHbfALXCLAryFxSm4Rfa3gEwC
fIBMwi1wi2xGf9yicG5RgC2kuG4BmQT4kLhMGhzwtNrhajhPqx0YzowEreb5
AAFP0NqlNDU15bsK+YGn4TytdmA4MxK0GgMH4ANauxSevajD1XCeVjswnBmQ
SQBYgNYuhWcv6nA1nKfVDgxnBmQSABagtUvh2Ys6XA3nabUDw5kBmQSABfrW
frmn92hbd9elbzKrT4HAsxd1uBrO02oHhjMDMgkAC6St3VVHc9a2/Hn6+yPH
b/bK029sLa1q6uzqyb6GeYFnL+pwNZyn1Q4MZwZkEihizteOHz1ARYvmaPCg
47RU2B+VtPb6lg5XFPkCSSxPlGzZuPtkPFOLA569qMPVcJ5WOzCcGZBJoFgR
hUw/42vP3z6aq6ACB2VHBS2kP9pHoLW7GkkqkMSyePPB9B5GgcCzF3W4Gs7T
ageGMwMyCRQnnpQRlM9t1XRbz3j/8sVN4NveUbt/eoit/XJPr8qPFChH27pT
eBQFBM9e1OFqOE+rHRjODMgkUJT06Z6AdOnTM4JMyjkcPJh7VLyc/uhtxNZe
WtVE0UhuGVu6I6kHUJjw7EUdrobztNqB4cyATAKDBlEaee4juTdJJrH6Puv7
uv5oP2JrJ7qSvDK4l7/x7EUdrobztNqB4cyATAKDhaADKRi7lKuZAsFGA+JI
f7Qfv7V3dvXQNZJbmo5eSMP4AoFnL+pwNZyn1Q4MZwZkEhgUhMVNOMK7/7A4
/5Zzfp8Q0h/tx2/tjQfPGcmkdTtPpGB+ocCzF3W4Gs7TageGMwMyCRQ/t1RM
7jRZKMBb/CAhb5IIXSYtWb+7afCydu3afFchP/A0nKfVTTCcGfGtFgeLNIZA
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
dlczdO947uzyh9rf+Z5XOpY80LXtmWuXWvNVJZ9Af3LsbJ2RTGo8Nlc8vZAt
DYDhgxUwnBWQSaA48aSMIIskYmjge4Ej3nf9k43+6ZGv1t5zYq0rFXzZIJYz
i4Zd/mRu9CXSJNCfXLx8zEgmHW6v8c8tcEsDYPhgBQxnBWQSKEr61E9Aukim
1vq+VtESONL3z5yTxcvpj94mL63dVQ5S2SCWLxtezb5iPoH+5PrNq+UbR9Bl
kiurvBNTtfRyT+/Rtu5klwRi+GAFDGdFkcmkz956+I4AD7/1meoLo2tzPhf+
Kft+4NvBz6TXGTg9txoRtZdeQVo/1WXkVyDXQryV2gbKN2tHK++teuY5uOdT
Kk3ilr7JETO+OsqVSTKJdVtPRR7tJ3uZdOObiyrvSqB827lXE8yThkjwCfcn
q+pHEjWSK6gsLKWb435zztqWP09/31+F9/QbW0urmjq7etIwnAM8rXZgODOK
UCbljry3hun+cbZvyB44LB6SD9m3vnH7U+HL/qfC4YHvCx8NHO8TEBGSQHZZ
eQUiL5NzL/cDqsCSnD5w21s25FRA+Tj9b4qnyB9WPJlEElo+QZUk/FsikwKT
cwPiSH+0n+xlUte2ZyjK4YxbKoaEg3lSFQk+4f6ko2s/USb5ubiJlrrl4IIf
E82RZlFIMJcChg9WwHBWFIJMOvDZRbcDn1K51+3lGg9qVwRLxk3/I8WxgZE9
NODmDNH+N4RPhbM8T8rDo0cPXCfnmpFeEdll5RXQWh+og4k7Rna6+uxbRx62
NFByOu0sSY2JMikkbnJEU65Mkq17GxBC+qP9ZC+TIh0spzWHKu5ZXPZCeiLB
R9qfbD9QEqmRVtWPpFsqlmdLlkaa42qkyOzlizcfTNzwQQ9Pqx0Yzoy8y6Tl
7x0J9FeuWFJ+WyOTpENqjt9DP+D2e0MU4uez2tqQ3BL+ESkiojVVyB0Tvoa8
DtRJK8npysfiHhhdS/rmwAm5ki/39AD+VJ3baHKdgcIEpP/vSANvqRhtMFEq
3iSRppRp2bPBWiP5ZU3Z4yqRMHXxjkTquXbt2vCH+5r2Vr73X3WJJbf8ds/e
OqKlgTLlzSl6c+ob9j05eQtl47ma9z5M1vBBD0+rm2A4M+JbLQ4W+sEsTOPB
c9L+qq7xlPwE+aRb2DMTOkwf5fV6RhWuEzmSR8mk0JSXwaUefpgemZR7el9F
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
3nSdl6pU733WCwi32PXswoZHqcN0EgkWIhHj2y3MMdquN7yyMvC6Y4quAPQW
Eigad5PRLHOkOY+byyHlKYax3w1zfpFGO4zcs8ZIMBT1Jr8ikEmgOPGkzIDw
6ddFnp7RH739L/+w0T89Mm7tKWWTThx6f2K3sp6+zktTIrMJhfH/HPYTLESW
NHIgp0Hkdr2jJldNffcP0pWVgddtJLoiK0ZvIUSN5BdiPiWSOf3yxg8v90Tg
y7N2ak75t4m1RqIoXNx7Jd4OKXvW0H/g1jvgFCBGf/3p16FAJoHs6NNBAenS
p2f6hJD+qPe/OYfFE/RHb5Nxa088/XJK0PsTu5X19HVemhKZTchH+ufwriVP
R1Y4qQQLGaDfrvf5sokzqh+WPsbyjSPWfzAxcLVI0TWyb/9fSsXsXEmBcnzh
Xc2VQ44uvDPwOTEwL9IcVx3teuf/E8PLTy/+AWVrP3Evm0mLPrRQSmvKHk+w
HRL3rCH+wOPsgFOARFpNX4cCmQTyyy19E9BG0qMyEdX3mVJiDRztJ+PWnnj6
5ZQg9qJxVtZT1nlpij6bkPjHoOrP4VETqnfM+Y1+bEp7o/bEkRr719mTIp9n
YGWlXnR5GokSoxLZQs5UyD4U1NGad+99e/39fj1nVQ+vWn3fof79don5lPTm
zJw67rN35BnFjbb2s8v17bbD7bN+nUg7pOcbr3nvwwSvltReh2mj79aM1qFA
JoG8QlVJEtEjiiP90X4ybu2Jp19OCaJMirOyPnKdl75II5zDfwy2LRpeV/7I
2JJFmiGyteL+yF6xuBDH9E8++4wYDnfk5JbjH2+9eG5gGkXvSNHjKdUrhysj
W8UZxefShPNeEdPO06Ws1JyyGX+PrCFldi8iQVNUoLhUqpm2Q/qeNX+aWpfg
1TSb/BYUmm7NdB0KZBLIHzJxozoqTL/lfqNPCOmP9pN9a08w/XJ6EGVS/JX1
xvuY9BVpNiHNH4OtC4YumP68pp8//slOL8HCodoJaSRYyB7fn0ZfWTlv/XDv
cZ1Y8P29i//13KnbkykUR4p434BSpZRwJJKrkSIrXFN1b7t5PiXRnM1bapPa
2i8yQZMy6lvwzsVM9BFzz5pUr1YIqLo1i3UokEkgT9xSMWo/UuhoQt4kkab0
2d6wnDhsrf9gYgb1kbJ27VrK15r3N56uMFjR/Mlu+WV3fPjuxl3T130wruaD
KdsallS+9181j6Viy2/37K0LXOHg1pxt1qWhLGvKHtf8cW1keMZ8uG+H22zC
Vof5eO/7J9aMbFv8I9/qWSabv4hPzNWW7y152aie7ls4vSjomjMqRza8eGLN
Y+7rU/mRAuXWW970N9vn2nSg8j8RK9a29GH9pep27I2WE7J1cL+fuHnuql3W
Jvhs20mogFCqNjVkdrUCQfXr/mz1vxKbgThYJDTqAUDGxI0kflhcsUkeSaVf
To8mcgh3SivrjbIJ+X8MRoayTHlzsr+OSfrnMN3wDDDd9S/sT3MNN3LTNS65
O/DWGlf+kVjbOMmRxBZytfuI+8roHrA4SReNRJ1+ds8s39TfNy/adJDinaOT
bPr09JKx5xHVr9tiHQpkEsgacjhS+EBxrXTzSCr9cnrQ1UKqK+uJ2YS8Jef6
UJZt/aEsXjk+/75AzJK3N1nhyCTTXf+kKmXP0qFGMqlupSTr5vGPo2e1rJMj
BVrIrYwNrZ1GHrDus7vsnnDiW/slm28qjD67Y7Lp01NKxp5fpL9uu2YAmQQy
xVIj9R8sqrxJIomkX04JI7XwZcOrkX1Lqivr3QGaHsoiFjFmyftzuEBkkumu
fyqV8qmhN2nzinvCi+4PLvhxZIX1yZGky9kC5cDiX3oZG558o9Kozta5xRLf
2i/ZfFM+xOyOyaZPTyMZe96R/rrtmgFkEsgQWZbtgQSS+qNFmYU7QMz0yylh
pBa+u9F7sW6UXiOlt7Le/WPQKJQlXD0vZsn7c7gQZJLFrn8qlXKq4s4y2pMR
S2Cm0i3i8jcpZyojXEmq5WxeaZz7f/gzoX8pfd2otta5xdLY2i/BfFMeRtkd
6e6s30/cHHnrtJ1j2SP9dds1g7wPHIARKh3k6Rn9UcklimBPt6LAQi1IF5pl
sLLe/WPQKJRF2vXdSobc9+dwIcgk+tq0BVt/6W07opnwqlzzfd1F1NNb4qL7
Txve1VSYOG0hTax9uuKewCLEp958x0gmWecWc+W90QIEypZqSeWb8jDN7kh3
Z81dFT1TmZJzLA4xN5WT/rrtdnjEwAH4gNYuxVotxFzRbIHbaxFdSV4JTyq5
5cD8Ed5OZ3v2RueTSRuLDAlh/49fmiuHWGgkv3gzlXvXjdNU2HTaomPTKK+F
dLfuDrtKHp9YM2P9g3TbT3QcsH7UrSt/Sayz0QKEOPmmfCVgl92R6M4i/sAT
d47ZkdSmciqrLdahYOAAfEBrl1IIThUi3ZePGymKwGKu8OI4/WoyIpF7QqmI
3vWP5v8RS3XVvaa6Syyu0Gp+/x1Nnc+dbDKSSQd3LfJOVCUwLFnxG2LdXEHl
xd7bcWDnEmKdLZyiRvmmwkpg1CTqhnHPzdzu+1iI7iziDzxZ55gdCW4qp7La
Yh0KBg7AB7R2KUUkk0y3yRMXc2kWx9nF0tP3hLI0h+z/EcupijtXhuclN1Cf
2K2ZyuPKqLmveru3frTx4MKgPFPtwuaWLe/ddtnJh7+/bx4zfRaxbi++/XKc
pehuO8/7AgRHqwQiSm5yb9/HEunOMvqBx3GOxYQ+7UiZj9NYbdoMMHAAPqC1
SykimWS6TZ4rjXyNFPnlwE5neoz2hErKHGkRI9X92GmNJows4fQU4ZxO3sRf
85Ih+tRVrQuGetHy+t09Xln4VGStSlb8ZmS8pehuO8/vAgSHpgSkYtL//zGT
VorZwKTb8gbcWRY/cCPnWCJQpx0nbH7mzYGvaebjNFabNgMMHIAPaO1Sikgm
mW6T92nfeE1fHEdcfmi6J5TWnH+SV8bI/6OoQ0vlkA+WDa0xnIYLLLpX5nQi
TAgumP68Fy2vT2D4+MSaCUt/p9dIf5iybGS8peh+O8/XAgSlEpDl6w4cddXR
pvLfHZ43UG0xG5gY2q0xvJCJ3lRO/ZSkzq5Iq+nNAAMH4ANau5Si6EV96Nvk
uYO11/XRF8dVbPtVZAUs9oTSsGzjT400jLRIZ7v8Ypp2Ulx0r8zpRJgQXL7i
IX/xOCWB4fNlE6eteyhwkRnrH3zx7Zf90dC62Tihdp79AgT69rKBMnPqOFcU
SV+unw1M4/Mpih94hCtJrySF+TgfotWUZoCBA/ABrV1KUfSiPh1d+4nDvR/h
bDT9FJkRXZ9cUSznqn4eac7Hy+NqpJn9kerSNfjt5mkn/UX39JxOqvLujtuX
oicwfHra3LGzxr0874W/zn5lzPRZ4iG78Bg/wD7v7dwuJMnVSJEtbU3Z42NL
lYk38254JPo5WXoRtWKCVmPgAHxAa5dS+L1oAMo2eZVrvu+NIKY7nUXmebbY
E0qFl4PIdFIsXKTbjvjFNO3kxcvHvOopczqRJwRF75wugeGE6BHQdCl6OMD+
9KL7jQLsk8VOCYyZtFLlRwqU114vVYU0F/4P3HRTOVURtSJkEgAWoLVLKfxe
NEDkNnmuRvLnoeJMOYVJamswz8Vx5XBlu2ptmknxI9VVJSLtpFDKN47wKxnT
leQV3zunT2D4eJRGMlqKnkiAfbLYKYG68keILe3AvBGqbAmF/wM33VROU/x2
ApkEgAVo7VIKvxeVIg0tLqt5IJBNyHrKSUrMrcHCLg6/xFmb1tbylhdc0bn2
/5JWQ5d2Mrf4iRGiczrRyqH2Gi95uBOZwFAWf2KxFD2pAPtkiVYCYZfa3zcT
XUle2fT+HumtC/8HbrqpnKb4WhEyCQAL/I1M8l2RwqLwe1EN4W3yAp4E6ykn
KXG2BtO4OPzirU2rWzls/rr7iRUW/T+a1HmUqb1V9SOdfk/X4ZMrEpFJfnE1
bfVHz09buUHvNXKHuThL0ZMNsE8QqRIYNblqzPRZ3iK+gEvNPfTf3pqoD84P
lP0frJTeuih+4Mo5WULwtlj8zFpJWY0hA7ACrV1KUfSipogLWFZsf4QuObx9
TFSB3HZ7Qjk0F0dM/4+HKnVe5NTeyp3/evr9p31Pl6kXLqeo18G5T/jdXTPT
S2CYbIB9svhKwJVAr1WOnLpmYJHjtHUPjVvy2JNvVI4qCR7S7E0TLLvelN63
KH7g9E3l9MXPrAVvEgAWoLVLKYpeNA70xXGzN/9E9H5I9zGx2BOK7uKw8/+I
6FPn9U3t/TAsXfZ8+EKghqZeOIpG8sv2AyUpJTBMMMA+cTwlIM17cLus/+F0
xQ53qr1pxCK6LkWK5QcemJMNJNIkFj+zFmQSABagtUspll40DhGL47Tej4C7
xmJPKL2L40yF/PNI/4+rkVReL03qPPd1B2YqVZ4ueuC3RXHvq3fcWZBUgH16
zN84J468DO9NIxbfdRmgWH7g3qZy+kSa+iJm1oJMAsACtHYpxdKLxkG3OI7m
/RCvZronVKSL44z6UP3Su2fXSPw/lE3opKnzAq9b4+miT/wNFHKugNINA0Yl
sgGxEzvAPm3i56Gambs3TUADq+6b2Q+cstWaHlexty2SZ5X3E2lqijhvC5kE
gAVo7VI4yCQP5b4bNO+Hfx2jPaGILg5pckh/9Xo4Ut2awOvWe7ri53Sii1K7
DYh9XBHS1rrGKOZZNUuVEso8VCbyUrU3jSbLQdo/cFcdzVnb8ufp7/tyRbPV
mgZK/N6assc18f/i1SCTALAArV0KH5nk4UuOmg+mVO0ZRRyewvuYEPeEMnVx
fF73ZKo7aARet97TFT+nE1Ej+cVoA2JHvS0vJeZZNUuVEonkoZop25tGdF2G
SfUHXt/SocoubhSWT4/fe+31UqlGCnixIJMAsACtXQo3meTjGj5ns8GWatIo
msg9oeLkEEjJav//iZ4uaU6n8o0jNu17MamhXyx0d5nGPRgZ86yZpUqDpPJQ
zezfm0bUSPpYdM0PPOY0mauRIuOF9Nvy+tCXKB6YN0KM7laJMcgkACxAa5fC
VibV791kNDxF7mMixTqHQEqIr9vI09VSOWTvrjHhiT/fO1d/aIbuAVptcaJB
uS2vUDQxzxnn4j52ti4pmeTvTRNwXfq71wVu7b7xgBxKZJrMvQhxlzrKSkai
KykQxXd68Q9UG9BAJgFgAVq7FLYyacvut42Gp4ZPp9rdyCKHQHqIrztZT9f1
m1fLN45IRAlELn+jh0NLY571s1RpcPHysaRkUlP9n0TXZTi1uys5PPHgyaGn
X98iyqFX5+0e/fp78afJXFlFXKQ/tnSHSsJ5ULyaqp2dw3LRAzIJAAvQ2qWw
lUm7d84zGp5aPp5sdyOLHALpIb7uxD1dq+pHJqIEIh13unDo3BKOeY6cpUqD
BDWkmChek9r9dMU9i8teCIoWQlJr4jQZxZUUXt3vSzjxUpFeTY1G8ktgAxrI
JAAsQGuXwlYmffL+TKMMiqcax1nfyzSHQHoEXneyni56Jk990W9A7BiGQ/sx
z/na99YjEQ0p7k0Tc2lYnGmyzq6eyIvMnDpOtSdd4EWYejVVRQwOhEwCwAK0
dil8ZdLutfQMiq6gihNcbZRDIFUCrztxT1dEJk9a0W9AbBoO/emeF64cXHRg
55JYDy42iWhIP2dCzKVhkdNkelsaD56L1Eh0/4/eq6nJKhYo56p+7s/uQSYB
YAFauxS2Mql5f2PzUmpeoK0r7okfXE3MIZAq4dedrKdLl8mTXFQbEHuJu1ta
VxpdzfNNFUI7j6khxb1pjJaGWTiU9Mvf2s9f0c+1qfxIKv8P3atJVFOnF92v
iu42BQMH4ANau5RCGD7ygmu42zlTMihWrvl+gsHVkTkEUiX8utPwdMXJ5CnO
K3mEkyMZlY+OrpYanj1xNGRgbxqj3etMd0ZzS9PRCyorLvf0HjzZNWrSFtW5
deWP0P0/3iq8Cyd20c05vvCu5soh/lzqafWhRP4GwcAB+IDWLqUQho+84Bru
qpTIDIquRnJ73TzGtERitDma6nWn4ekSk4e7hagHArm4XcU1e3Os7Ey7PmnQ
GC5FtTJLv2KLiFRDeknINYfEK5juXjdlxrgx02b9Ycoyukxat/NEoNrhNAKq
EnYlBdSLVMJVz/59+GhAAq15996319/vP5lZ1cNX9aUSlR7ys4wGortNwcAB
+IDWLoWzTHL6p5ykGRT9FIXWwdWJ7+4auHjAx0LZHE3/ulP1dFGmnMR5JYeW
HElfSquHr35vkfsKKO1ctbj+2wv7VYvu/XNN37VmA5rIvWmICa/C4mHauofG
LXnsyTcqI6VOfUuHeEdNtu1gXFPJIr2wCeRIn/LmFO/EUROqt8/6tcoW6S/U
f8VligTv/k84TmPGwAH4MLqffFeksGAuk8Qpp5bKIR8sG1q3ctj2ZUP9fDsW
U052AsYIzayWfnO0PL7uyCmnwLyS+xjLNv7HmDJJeCw/0b8C1eL6PofGnao5
nc7mmWm/6zCUpWEaXTFj/YMvvv2yXu20n7/i306ZbXuC5MOpb06MrICYI31h
2VNjpg94uqTr49xLKd8sYQecmqp7z1X9XPUwNanIMWQAbqC1S2EukzwSnHKy
FjBGt4gcGlSbo+X9dRPnlVzWfvicpSgy32BXtbj+tNYr4o71KiWQ1LuWEpnw
Sqcr+ssrC59SaaQnSrb499Jn23489MlLk+cTK7Bg3f0qT9d/nzL7xO4Fnlez
dd3/qXrI9OKK28AfO/RU5Bg4AB/Q2qXkfdzMF2HDNVNOxKCUOAKGCD0BtXS+
pkBed+S8ksvMmp8kq5FUr0C/uF7pFUlhJ186mqVhrqgj6oox02dJxY+Yizs6
23ZuyspRE6oPVyjVY+Sj8z1dflKC9fW/V16HvAPOvPXDvz691TfKaMdeDByA
D2jtUgpk3MyeOMEq0oXGMQUMEXoCaunmaMXyuqnJkQhaJfIVqBbXn6F5RdJ7
1xo0Ca+qtEsSxPLGmn8WJ7y8Mr6iQbwRMSTJ00vL6o7UNZ5aVa3Vt4RX5nm6
vImwpLZXPvvRbclqumMvBg7AB7R2KcUybiZOpOGanSCk83ExBQwRo1EjHFFc
LK9779Fqo0Fw5er76lYOq1h7P/H74itQvWWdW4bsx1iw9ZcphfGrEl5ZTFH5
E16uRhKjdCjZtsXipRGYvcnKDZhb/lw6dXvz1vauj+JfyiuHmm9tNmSxYy8G
DsAHtHYpxTJuJo7ecMpOEIGFxjEFDAXTBNThzdGK5XVvb9ptZGn90rtNFYL3
CjSL6+luGUpJPLRbmvDq0OK7ImqiduaU1vxTIJ4qMtt2oKzbeSKiiZLlZeJl
T8skx3DHXu8hYOAAfEBrl1Is42biaAwPB6uoEr/4IUzxBQyFY2frjO4S3hyt
WF73qc6uGesfpFv66eK7ohWC7BWoFteftnLLzIySIomHdgd8nnuWDrWrmF/E
eCp9tu1wqW/pMG2iptWzLl6WUYM5xP5ZPwwcgA9o7VKKZdxMHI3hfrBKZOIX
f6FxfAFD4eLlY0Z3CW+OViyv+9r1m5NX/oZoZln18GiFECq7Ds/s6NrffVae
/9lUdBmN9YmHdvurD9qa3oyvKPx4KvctPFGizLYdLq6sMm2iRs8tTlm9Y9vh
U10Wc4gYOAAf0NqlFMu4mTgaw70/z4mJX7zlb/EFDIXrN6+WbxxBv0t4c7Qi
et0lSxYTzfTexae2wmZW9Q8COQ8tRJdpSSm0W9dCyBNeYuDW+IoGoqjw0giY
NtFsyozqB28Fq082yEM+sj8VOQYOwAe0dilFNG4mi8pwL1iFssSppupe95ve
QuP4AobIqvqRxFuEN0fTWF2AHG3rfmXhU5Fmlqz4zfatm/5xZEV384zyDT+K
+L7aZSFKX3vRZSVFkoXeQjTFj51z3wJRVPjr6G0qkFXMEj0P+cj+VOQYOAAf
0NqlFNG4mSwqw79q3UjPPNNcOeRyc6l3YkwBQ6Sjaz/xLtIYmOJ63bVrZ0bu
uFe7aGB/k4hXQMvY7MmkUxV3lsXOaqgvKe1iQ28hmiLGzi3efDBSUYhpBBKp
QAKFkJ0pcg7RwcABOIHWLqW4xs0EURl+tfsIfYnTvPXDe06s9U6MKWDoWGyO
Fml1AeIH0ut33BMD6RMZoP19alwNluo4bhfGT4HSQvTFC9y6vRjw+s1py/f5
4mHU5KpAtqVAGoHLPb3jKp9J9dFFF3J2Jv0cooOBA3ACrV1KEY2byaIy/Lsb
vbNMokm7z+7yz40jYOiYbo5GsboACWR9lO64FwikdzSvwCRjs3dZ9y6pDuV2
YfwUIlsIvfh5DLY3H5yw9N+mrvmpf2jauofGL3ts7c5dgbuXVjU9PrFmwtLf
JfzEZL9Kzy/0fNlEtzIW11TlIRfnEDFwAD6gtUsponEzWVSGx1naH0fAmELf
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
    "], {{0, 356}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 356},
  PlotRange->{{0, 781}, {0, 356}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479088548068*^9},ExpressionUUID->"d443a5e3-831b-4685-bb5f-\
77b4c7705641"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxdkk0vA1EUhhsRurQQ6aILRGhEGuprqqWn36qthYQfUOnSR8UPmIiiQlc2
RISlWotExHZiKawkbErCrmsRzHjPu3GTyckzzz3nnnNnugorc8Uml8sVth8n
YjUi88663BN9IWteq+TtI7vFJqt0s6vcJtW6Ua0LuR1s7ih75KJmr2uyV5xy
1se2cif4nr5bXu1045bcg3qr5F7sPyP7sL+jotwPPqEfwPkBsl8jeRD+if0M
Yb4vcgDRTR5G9JBHEH3kUfR3uKU8Jn/3WSSPo79lsoHYRg4iGqw3gf0t5BDq
LZHDOK/C/Ens99NPYb4afQT32SAL/IbuN5WP6KM471nZjOJ+julj+D8s+hjq
n5bVx8HvymYc9QvMT+j/wvwE/Cfzk/r96JOY944+hXlfWD/17/7T6O+HPo15
3pg/jXke6ZUP6DMSdBpcpM/Ar9PP4PzvTfXKC/RZ9HPO/CzO36fPob9WzpdD
/Wb2n4e/Yn4e/YSYPwt+KMsv/R7/Bg==
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxd0GtIk1Ecx/EpmBolIxxpmzndMjMx85LadP70mbrNSzQMMSK0GAyXZWJk
vWjLVinlrZtmK8vUGWHSLFdvSi1BLSisnJPhytXUKFlYBlaY0f696IHD4Xs+
5xwOT9CeAwqlO4vFSlwaf+a/nzOZP3nl/UiMEK4FWLa78U67U3vB5il5uaAR
uJqNdzPyepOC2hdq9vd8t9vBrvYDE8J/PN9LzYNljmlZfZCaj+K+wrUPhqiD
cVnwbHRbP7UQl/QmznQrdQgEWVWFOhN1KBJq7PE1duowNBkGK8J6qMOR/tO5
P6CaOgK86Lo0wxHqSHhYfVcwaurNsKny3krLqaMQd37QM86fOhqq3tIcTSB1
DPqW7VINrKOOxYTm5kL35yBXb8HMxhPd42PUcRB8vOCttFLHw28V1/awhzoB
WDmQ5x1O921Fy/XnUTo/ahH0kx6MFdSJuJHkJdo5ReeT0OAzVBQbSi7Gjydh
euVX8mToJyq5fDY5YL4r+7VB5motwBuuEPnM0v4UVO0TNqq9yFNQ3zFr6v/n
qTi2wPVvX3S1NhU2xVnGUUXOQFPeWbLYTs6g9tPIrWEzuQTWN2vYI3ZyCZbn
Tu9ef4c8DWNncgOan5KngRM+WlvaRJ4O8asddmMLefp//z8DGlmHw9lFngHp
h657dW3kUsy1VfP7rpFL0RZYPG7RkctwNeJLwXwJuQyJytcvzIfJ5Sg6pBaX
ZZDLwdVdHD+pJs+EcOroKW01eSbyu+yd88fJsyAxbGKFdpNn4ZHlm5FjJM+G
s2FvpeMceTbuWyONzQXkOWjNL5Mpl97/G2OO+Rc=
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 918.6666666666666}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790886887007`*^9},ExpressionUUID->"a4f6893a-8bbd-4b9a-9da5-\
bb9d1a6064be"],

Cell[BoxData["\<\"Pump Light: s+Pump, Energy: 25.0167\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790887043276`*^9},ExpressionUUID->"1cd585f6-26b4-4630-ab9e-\
f284d58d0088"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
bzcVq8Pv/afzVtuKmxaE0rm9fW9Pbbwvji2DQyOPvLBGFUdy2wn1W16gSZrO
ND1ecezLwweNZJJzeeNcCj/0MqcepSeTIi9C/MUUforOcQBgTZGO9jiZJBQs
nqKJ6LfM1gpR1ctzlruAeXGhvG9gYVe/nS5Wvfk4fyH0ntrJ766c0rJmauvK
Kd4mbvRN+lR07DvdUnmfnUa6LvDe/KujS2+WRpliFsd2zHfUI10mqRK06JrH
tMypn5KRScSLkPhiiiwch2/v+Ru8/eQ/UX3At5PZJ+N7zqsPGPi0fC+0wHH8
29p/IqKQHVbegcjDyI9A7kWkCYZdVR0zuj/NM0idLjiKVCalDeUp6q0r979o
rd/co53YGtxw5PCySY6fDW9vEXOtULR6ibG9xS/KtvgvTsyS2nGwq99OFKuO
5BhY8T3vn+583IWPF4W/G2eq1I8jPvWhJM3g0UeZNrz5h/jFsR0dSOyYc0EC
37Uo7W5U5jRAacgk+kVIfDFFVjIp10WPbvQ67mfHNn2deNv/llwmjX7i+qu+
D3uv+t6e+LzvpYn3x3RBhMyRHVbegcjD5JzLecFgZ1uSCaZdzb3wE2+rxGlu
f9RWE76fLyCTpGieoqp15Y5HtjhR+GgLGqbVrbu1e/nk9W/d8kb9dwKv7/eV
3IkZmtCpF1uN9MDsumdqp1c2/lf/xWn48Il5axr1GinxDSzcIM+Bo6uNZJJb
vz1yYbtGcriKyC2EHmeTPilfDX+il22eOoocPOEWv+qjYylRJgVEo6nmsShz
GqAEZJLRRUh8MYW14+j7rN154q1rf9B5ZvaeatF9VOI3vZcU72kcdo6L9j7h
e9X3LTdAcs+MGRPHyTlmZFREdlh5B7TWB/pgEo4hm2DY1dG37kngssh7DJlU
TKieovp15ab5Ucqjyap2B7Jc+mOvFbKpFaCdgHui4vl5G+9WXZy3dr6aaklt
l0DS9d6aSUYyya3frg8lRU5sJSI5pFDSpKXJUeHBI23xFZ1jeGQPP238qf8r
pprHrsxpgGKXSaYXIfHFFHaOY8f+eYEx6Ygl5ac1MknqUj2dFO1wx6MlCi//
SXNzSG75/hEpB6LFQyh2FT6GvA/USSuqCWZddT49o9n/FYpMcmNaoyGoGTNy
g4G+WT3v34U4KweZJEX6FI2/rpx0NLVG8tqmulv6E1orpPkhL22q/b8cjUS5
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
VXvWyv9BvM4vrftv3iIvR7RopLK7DjGgSPWb8fmbKjalWf9F/AOn1JAMzLXR
C2l632pfeG98meSfrNRbLQ0gG8V1BRwH4ARGu5Sik0ku9Jkg+v4mHx+vUwVM
vF+jmlCSRelsDZFqkNICRQycn+Enqr8T6LZp4b6kiPMD3wLVOPdnKYdTtent
/b173APu79sQ+eFtXX/090G1TP6kb2jpY1Oa9V+UP/CIGpLPSV5sqTQopOl9
y5FMMTVSYLJSY7UmgGw0ZQzHAfiA0S6lSGWSC2UmKM7GbeFfo5oSjkals4kG
ah71lBZe6+fc7jRKO9JJ5Ae+Bapx7lV31KRqU9rKbauEiSb3D1d9KCkyNuV+
TBUMpPyBR9aQvD/0CjGU5DZ/Yvz6ivvjyCSipN+8szzyFhDjunAcgA8Y7VKK
WiZRsN64TSNRAiUc3WZUxdooiuJXg3ZVHz3ye7uT+oFvgcpwt7ojJVVb3+p2
vCysNLm+KCVlGtetkaVa/0W546SUpD/ZL+2f8/Icf4ZS64IfS8JE5PS5yF1x
HbFa2fR9yl2gxHXhOAAfMNqllLZMMt3fxNu4LTqdKbeE4/6aSXYnMiXOWj+R
19tNuaTEH/gWaAx/rnpLnDiS29r2rhVWmlxVlPKEyTRud+1k1fqvyDtuWkOy
umnfu28vNZJJNa88Gk7/DsejTlbp9tk50/DPQ1sfouyKGyeAHAaOA/ABo11K
acsk013j3Y3b6FMnXgnH91dMsTiRHXGqPubrdtvNRiWIxvBVOx6NqZFeHZvf
tNPkmqKU9GncxfXTVOu/Iu+4xd67poU0HVEkPdQzL78RmP+Vlms4WT31bOtv
VFOT4eQ6I7F67vN9+tgUHAfgA0a7lNKWSaYVrfd9stJ5Zm764BG6e3Kf1XsN
o0mmO8T5JxriVH3M1+1O9ge+BRrD42R/ua18018LW02uKUppNI07fGqnynD9
VnQWe++aFtJ8cvYS6aH8Ncz9XPqs57Oe5UdbXxzctcQZ9qpqCf7mVUUwFate
0QxVbAqOA/ABo11KUcgk61VRdrvGG7knd3X28aobK0y+pd9IxcNRR8PbH5dO
NNhVfczX7bbOEEsKleGmXlXanGvuDNF9JzYafcuTyuGilIlM47q1Ih9+cWJf
XelWdHZ770r7LG3+rYT9bVZVe/h2hOtb/nbuuqNVweWZ0ubGo0zFasuaHL0X
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
AAAAAAAAAAAAAACQMv8/Nzpbhw==
    "], {{0, 356}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 356},
  PlotRange->{{0, 781}, {0, 356}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479088985594*^9},ExpressionUUID->"f9b2b6b4-5fc2-4fe3-9bd4-\
f66eb3d4b819"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxdkd8rQ2EYx08rtSStEBfnYpNmLclmOGO2d783x1wod3IhtHKhuVCUOsVM
1PJPKOHSHyDKLtz4D9B2jXInF87xfb7K3jo9fc73eb7P8z6vb3Vrcd2laVrM
/pyI85G4urSP61TJD/XL4RNht4rWm0b981jYo7b1RkWvkXuRf0ceUI7c2K0J
68jvJ3uVY9e8IA8ielg/pJacc07drxy7SoscgL+PHER+H3lEtWx7w08eBT8c
CY+BN8ghzL9HDqPfGnkc/F0VjuA+w+QJ+O2QJ8Fx8lSbbmCfJjmKfVjkafRb
Zv8ZxBfqMcz7RZ4FB5kfxz72yQnEMllhfyFhS6H/n55E/2vqScz7yH4p3P9d
2Eoh/4Z6GhxhfbptfxnEM9ZnMG8H9Sz69VDPYn9v1HPyPtRzmN9NPY/8bup5
+G1SL2BfnYeiF5C/IqwV4fd0IHoR+3oV1ubkfVgv3EV/87+fZWJfz/SfR7yl
LhxgfQn9vZy/JPNSX8B97qvqB5Lx+6s=
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxd0m1IU1Ecx/GZipqj1GYsUfNxytLacqtmy/3cdjedd1qmIoqFhvj0YmUx
zIxmueqVpSmWFWgrS9AKCSTpTegSI0sCS1fNHIUW0aJYZAZWdP9CHrgcPvfL
Pefcy40uM+WWr+LxeMo/19/53/iiSugMHbNeigV3A3L9zI96I9kfVaLjPQ0v
YjgHQfaav7C/nyyA9UZT8NIwWYhbdZVD9xhyOMLcE96ijeQo3BUpt3gVkmOg
71E+eXqCHIfpPIG+q4AsguPdBX6AiZyItG8hIfmxZDGKpeVVhyPJSRgqi1q7
Lp68GTVOs4RdiuYsQbf0WYl8miwF6/41VDhL3oqI09V+lilyCrqPNVc4b5Nl
YFROt6qQLMfooDm4pY68De4Bj89gKXn7ir4DY80RV8QVZAXUhoyfcw3kVODN
yd6cSfJOCOsdZdU2shKr8+b3JSyfZxds1bXJNQ/JaXiUU5BS6SKr0PjYq//j
8vsCna8WArQjnC2AuW1+D+Ogno5zJsfUBg/1dIQVFZWLL1NXQx24/qull7oa
eQFtmuct1DWoudaSlm+nrlnx/bRQWmc+BZ6irsWiRS0pNVBncGZUd1GxmzqD
8feu3Hjaj6eDTatO2HuIug7eI31HX2ZR1+N7YmOffzZ1PVRJtQLFEeoZ8Axb
59a4oriegTjbAX64L/VMnPVtZm6OUc/Epobz4vEJzjwD/GSTsyU+tL4B0wqz
zWik57P+X8+ShY72UHt3KnUW1z0P7tuTqbMIelucenX5fzLCd7HpzkA+dSNY
obW1laWejciugx8+d0TjN2mG6CI=
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 864.3333333333334}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479089126229*^9},ExpressionUUID->"e020fcdc-6462-4e8d-80d7-\
cb69eddfb242"],

Cell[BoxData["\<\"Pump Light: s-Pump, Energy: 25.0167\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479089126229*^9},ExpressionUUID->"c3bdb9e9-7ed2-4925-8542-\
e5b0383cf14f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
uCqXq0wy1TEZ1UjKjElVJxpPrFkfL50/TawEd/9j9X7eJHO6p2zB9MEKGM6K
6sokXZmDj7vnq7+gXu9JemYSb9vmbo3fKXFQXRCOdSa3yST78pT+UDdrY4as
X9e+lLiq2Arj2H8Pvx+Ld7r56WZtdFfyUGOLevGVPq7epBBlHZNk3dtS0da+
jVheJPg1RMwhsGvOTX4yyZruKUMwfbAChrOiujJJN1SeWvUP6i8YQrhTyKSK
yCIHmVQZg2Oe0I2HpYQ2qQ9Voa5oUUrJW6G5OfGrGpOEzWOrhkltOeIEkrRV
4qlUWK9zrEEmXUGuYyIXcTMT7hoz7yzLnLauE3c+os5amQx2IrqSwnZP3Yuu
GomS7ilDMH2wAoazoroySd7eEmvqLxjmTW2QtmXClRwayeMYZZLyk4m9Y1Yn
VfwCdEew3wRaUFDi69rlSu3RrpxoTJYlvEmGgKtKv1ksZKvSZsgkI0ktlNw1
FqiR4MfIhbM9eV8MpbxIlPUxuB66Rgrao0886iqTlrXuL7LWG6YPVsBwVlRX
Jn3Y9GPlqHiy8bvqL5jmTfcQbrUbRx3CrThJ+hBuVz+S4ryaU7h8Pfk1y1Vd
OUJSzyUdd6prVXqT4m4xyCQtOi107t3ndC4a85b89NjLi4y2MD5ct9quawue
+mV0hH97qNlylgebfvLwmFPLqdabtxcO0wcrYDgrqiuTgqFbOSqe3fqw+gvm
edM1IYAmHkifEEChAaiLbsrDOgQkaa5BvkRiNLcqvCrhXdIvhNlvi/mjIn4D
xrxwUmiSQjuVi2rJJN0OemXFtFg7035fTldlKS8itTDr4+cDe51kUturs6Nd
eKZ0T7613tJ74TB9sAKGs6K6MumLS0PJopknG797+XNN7CVtw5rs25C+GF/I
SnpDKsJrlAHIsQugp1FUHVZ/AUYqr0GyjOZ4id/DuDNJe1WGnWe6yPbKJFOx
hcaRIz09SVaaV16MYp+uvFhCj1JVZBJlB725mbMYeeNUXqT/7Pm+Dwd65k6g
X/a7nVtiZ1Ske/Kt9WbI3UT3wmH6YAUMZ0XVEwIESunc9qnh77hgsAp+8Go1
EgCloXiZZNhBf5ysN7TL2Sno6x90ihrq3PdBR/fJ9me/T7zmQFDpMiBF6Z5W
bz5456Ov0Vf9IijKk+KFw/TBChjOiqrLJJA1ipChMrpjapziezt9B725Zb79
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
0JxkUh71+y6dP/3WUvt9XtN4bbYrfbGiGwUsRXnjWnnWgMe+AA8wcQA+oLfH
yKqCRuYEPxKJKW7S/EisukzyC1Y3k34TXE5PnJ4pMXJ0HF32fxO/0jN3wt0P
L53y+LSeuer86sqWbartMP6nd/2/6vxIsfbusv+S4dljV1LAUlRK6JVndbju
CzjXNctPKWHiAHxAb1fS9GZ9ygoamRMM8kca7CluwtJs3j8SlTKpyGBX72B1
K2k2weWXI4uSKVHOhU5UVsdf+KtDz1/rNGP2Zle/L7YVvdHYaeU2Z9UNOXUz
+lLUiaV/HyslXDCUyrM6iPsCjsdMdo/OwsQB+DBplGpfSLkI1ULKChoZIv9I
NKS4iT7jHYgryySPeqzpyXu/YfhM1237beY+Kz+smRKTaYsGtvyn4fPHHKVR
hW8hi+Cc5FZ0oispbB8cbEx/DUmclqLCRAphKeG+/sE8rseM7oeJ9QeLdV+A
oXvQo7MwZQBWoLcrqfraU4zkj8RYipv4fOcbiBsZnnfeFQMF7DfMz2flh65S
qvI+G5SVbhI83mDXBpnU70vG/3QvuMrpVu9+6zfpLyOG61JUmEgh242NFHQ/
TD77YDvxB4t5XwBFQhOjszBxAD6gtyspm0zy2Dzud6LQ8OoGuxaw37CcObKU
lVJ1aHTsl3XP67jxaaZJtR1V3FPG/7z14gQnmfTm2//udxmmK3RMUbXgqV/G
AoQWNHVnflUxdD9Mjukfq1JI0/cF6BolOgsTB+ADeruSsskkj83jficK0+6l
D3a1Fqs1U8B+w9LmyHJCVlYfrPtn8/NSOhO8fYPJinvPrL2xcdl1e6TigEHb
7ehN2vXe7MzvkuuvjOlTH0juNfPLBXFucIgS6aT7YUL3/0TrcbroNbNOlhtl
DwgmDsAH9HYlZZNJwn3zuB+B4clg1yhnsnU4dSpWa6CA/YZVzJGVUkPqoIff
HJv7V2c6Hg6U1a7Ni/zOZYiHj4XJHWn48gyX2KQ8HHeuvzJ+98jzSZk0ud4h
jD9QR8+u6PrVtNejrxsineg/THT658SLFdky+xq/6320sFldi5g4AB/Q25WU
UCZ5bB73IDA8GrEDdaTMmSy7C+ThdHjqbPqO2iGz9m88xAY9K6YfBefIykpD
KvGoECd8+zml4t6axrF9dguXX0913K39ZvpboYT+K6Nn7gRd8iLi9jflvn5D
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
yg==
    "], {{0, 356}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 356},
  PlotRange->{{0, 781}, {0, 356}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790894074945`*^9},ExpressionUUID->"190e3e8a-9bcb-45bc-bead-\
068f8f50a490"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxdkD0vQ3EUxm8YWCQkBolKEEFExMvFbVV72rp9byUSX0DSyUvVZJJGqsXQ
hYGNxKAkBovFYOskJmKvDyDBhESv5zxL/8nNye/+7nnOuf++lexSpskwDG/9
cSrOu99VzbmqlUPRF7LlvFgkt8qbVa5Z6QPldvDLvnKn/PeflpS75PqqfnbJ
Lll2jk3uhb8tKveDPfQD4sTlTPIg8jvIw5i/Qx7BvhHyKHiIPIa8e/I4/B3n
T2C/rz3lSXAbv58CZ/i9if4W8jS4xP4Z8BN5FvWMbDXMc+t9kj3wj+Q51AfO
8+p9kudRt8k+3Gec7Mf9VZgn6H9Wzgvu54I+AP6hD6D/nD6IfTfog6hCH0J+
D30I9YR+Qdz19nK37pdX/iiotzHPzX4b/xNkfxj7HdOHUS/pI8g7oldepY9i
/yJ9VBxd26SPIX9N98nH8D+/3C8O/0mvbLI/gXwf8xOY30yfbPBJ5K/Tp1Bf
mZ/C9zecn0bed0H+ACLe70s=
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxd0VtIk2Ecx/EhkXYgJUUcmXO6lk1NnbmpzfbTnZwzpWF6YWZa04jEDA3L
zJXNQ1YYGiKV0WKmIZaKBQXeRKC1gk6eiuhkkV0ogqmQmJE/L3zh5eH7fh6e
/wOvOLfQbHERCASqxfff+v+ZVEuEHrOyk4FY+gChfqBvKoPthtwWUVPTbMBS
e+CQTnov7znbC1dcwm5IzGwfDHUZ57cZ2b54Etyaggi2PyLf20vqZ8RLHYAX
41eLvULpEpicZUKHjC1F0dlx0YbN7CC80/cfKzSwZUizVYVPLZ8fgoA9zaqj
W9jb4RA+Mzdms8ORM9R73zzH+RFoOVLt49LBluPARHpW6ibuj8TP4Mqe0WH6
DmjvhAmCethRkD76cK6wgq3A57Xf55qvs5VQB6oWamvZ0SvmxcDPIhkovcmO
hX96duSXa+ydEAmc9sE/bBVG2hXu3k52HDx+18iNn9i7UPnKrVT5kq2G5Mep
KuslNtCT1D/ty3lWoK1zOD6jjh6PW2WX8z920uNh2zpjS7hAT8Bg5u3Q1BJ6
AhTaPHlRLl2Dp2vmY+PS6BrUyFZrTFV0Lfza1G/3PaZr0edsH3PX0HVIj9YW
jWXTdTjTMJ1fc5Cuh0NUMDpynq7H1zeD4v6LdAPK79rKypfdAHXIca+YYnoi
JsP3u3ryf1kT0d1VHWU5QTfCM6RYsX4d3YiN33RN3gZ6Elpft9oLeF9rEn71
dlQ8yKKbMNE9vephDt2ExvrOBYeRnrzCk9GmrDg9tXy/3XDWqaTdSvpiZ1li
D0vpKdjb6KrJ1IvxF7QW5xo=
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 853.2222222222222}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790895637536`*^9},ExpressionUUID->"266ca6a3-6795-48ab-bd1d-\
6a0cefd50067"],

Cell[BoxData["\<\"Pump Light: noPump, Energy: 15.3426\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790895637536`*^9},ExpressionUUID->"e5e5cbf1-3381-4332-b16f-\
b911a11b2773"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 367}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 367},
  PlotRange->{{0, 781}, {0, 367}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790898293943`*^9},ExpressionUUID->"69b45519-1e24-4864-b725-\
f58a40f4733f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxdk6tPA0EYxC8ogkJAgkAUQghpCOF1PAvdtkDbayFQqCckGAwKvxqPry4a
zz+BR6MweFpmfiR3m1wms/PNfo/dW7h77N1PJElSGX1j1Pquvg5Ha+o6eCP0
x2sWPin+0zOfFn+6MZ8Jf/7nvvmc9A/0eekZvCQ9hS8KP8m3pPgh+ZbFH9BX
hAFeFg6IX7Uffc31XZmvK/8bfEN6Gf+m46lvy/2ibzsePS3MY8d+4ncL/e05
P/q+sAQ/EL7DD4W31FuxDj9Svi/ijz0v9Kowogfl77ueGOynvpqQ+cZaYf51
50evF/pp5M+LDb8n3seJ+3F8hHP+qffxmwf6OcvfXzRP8Tfz9camdepr5c+L
Ld8n9bXdn+8ztuV/4fxMOMCfFebfyf8vsVPI3zVSX9fzufT+uffxmwf8F//3
+wtSMcdD
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQEf7I+qnO6538DjABVwmH7d2ehWB4zP4WDRt6rr
cQGML+Ag/yOOsbCbF8oXcah4vOiYTCAflC/hcGh6EHPRBZi8jEPT32WfJubA
+AoOG31r7MViYXwlh5e/yxSuysH4Kg693w6br7KA2afm0F6tuTf+BIyv4bBn
hfLEdStgfC2HvP+v7s8wgPF1HM6Z59Ws+A7j6zkc/hLAPzmaG8o3cEh8cD70
SA2Mb+gwb2HWOfvrML6Rg1SFX9mVWTD3GDs4Xuf3txGAmWfiEAoGMHlTtPAw
c5jd8dsuXwGm3hzNfxYOdz5cd9zpAJO3dHi8YbGx0HmY/VYOB7jkGY55wOSt
Ha5t4w+ytILJ2zjsmMObxtUK49s67E+y1nqUAVNv58AROW/KZCeYvL1Dw7xn
H8MkYPIODu/Lzdq6d0D5DQ4OV9iXdC5Rg7nPETV8GxzRwt/JIcrSyzOKHaq+
wQnNP86o5jU4O7zf+6tG6h/MfBcoDTPfxYF/d8+OsgMw/a4OnyMTXbRvwORd
HZQvFMhIK8L844Yafw1uDv2/Dp/aswCm3x3VvQ3uDpnbXzBl34fp90A1r8HD
4WC4pbUzLyz9ejq4neX01DoIc7+nw5I0aa13z2Hmezk8m2y6wyAHpt8LLfy9
UfNLgzea/T4OFTWPVz2qgMn7OMg7V51TMuKCyvuixleDr8O/bMvLk5/D9PvB
4xcAK6nqKw==
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 86.16666666666667}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.72847909000128*^9},ExpressionUUID->"58ab9be5-034d-4a18-9d50-\
b515c73db44a"],

Cell[BoxData["\<\"Pump Light: piPump, Energy: 15.3426\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.72847909000128*^9},ExpressionUUID->"53cbbfd7-9b3f-407e-8ec1-\
1d2e996a3e68"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvfl3FteZ7+t7zy/nl7vW/RfuWjcekjjO8e2cHHNvu9Pd7nSf5DpnJbdP
jtdy2mljo5CQkJi0TeJ24pjBGEuY0YwW8wxCCIwsMMJMshgti8mAwQILRJhl
gzEect5bqFCp3qq9d+25dtX+flYtli3prXc/tR/t/VXV932e/2Pwr39U87/e
cccdv/2PwT8/enzk344Y8fjv/7//Pfif/z78tz//2fAhT/7X4f825GdDRvyX
wf8h+OIv/pc77vjfgv+49d8VAAAAAACQEzUAAACAVvLe2QDQRmZWSyS86Ess
vEWZXuLmqJx9iZujcvYlbo7K2Ze4OSo7L6H9PGQSKBmZ+YylxrWXuDkqZ1/i
5qicfYmbo3L2JW6Oys5L9P5xDYCzuCCTJHBz3bD2EgtvUaaXWHgLZ19i4S18
fombo7L2EgunAiB3TMik0oDY/QSxe4vP4UMmAUAE+cxg3759eQ8hNxC7n/gc
e8Xv8DXGjm0FlAnkMwOsmX6C2L3F5/AhkwAggnxmgDXTTxC7t/gcPmQSAESQ
zwywZvoJYvcWn8OHTAKACPKZQQnWzPe6LrXuPR38+/kXfxF6YQlilwaxe4vP
4UMmAUAE+cyguGvmie6rL9S3PfbChvgx8tVtne9f4DxDcWNXB7F7i8/hQyYB
QAT5zKCga+b6HSeeGPtGQiNFx5ymzk8+/TzzJAWNXQuI3Vt8Dh8yCQAiyGcG
RVwz12w9ThNI0VG3ZE/meYoYuy4Qu7f4HD5kEgBEkM8MCrdmnui+yriPFD+2
d3SzT1W42DWC2L3F5/AhkwAggnxmULg187lZO3g0UnAMHb+J/eitcLFrBLF7
i8/hQyYBQAT5zKBYa2Ygezg1Uni813WJcbZixa4XxO4tPocPmQQAEeQzg2Kt
mZ3vXxCSSS3tHzDOVqzY9YLYvcXn8CGTACCCfGZQrDVz/Y4TQjJpTlMn42zF
il0viN1bfA4fMgkAIshnBsVaM/e992chmbSy9SjrbIWKXS+I3Vt8Dh8yCQAi
yGcGxVozL169ISSTAlnFOFuxYtcLYvcWn8OHTAKACPKZQeHWzKHjN/HLpEBW
MU5VuNg1gti9xefwIZMAIFLTT94DcZHCrZmte09zaqT5Gw6yT1W42DWC2L3F
5/C1xI4NBZQP5DODIq6ZdUv2ZGqkEZO3ZHbCLWLsukDs3uJz+LibBAAR5DOD
Iq6Zvdduppvexo9fTdh8+txHmecpYuy6QOze4nP4kEkAEEE+MyjumknrfsvZ
97ZS5NjVQeze4nP4kEkAEEE+Myj0mtlz8Vr7wbMrW4+OW7BrycYj2zu6eW4i
RRBj7764t7NrVfDvF3/5TN9InaPQ866Iz7FX/A4fMgkAIshnBlgzQ3quHFi+
/bGJTf8pfixo/WHX+bYcR2gOzLu3+Bw+ZBIARJDPDLBmBuw5Pnfq+m8nNFJ0
bOx4/ubnH+c7VO1g3r3F5/AhkwAggnxmgDWz/ehMmkCKjsb2YXkPVjOYd2/x
OXzIJACIIJ8ZeL5m9lw5wLiPFD8On27Ke7w68Xze8x6CDWguO0/CJwKZBAAR
5DMDz9fMxVsf4dFIwTG9+cEyPXrzfN7zHoJBMl125Q6fDWQSAESQzwx8XjN3
7dnOqZHCI/jDPO8ha8PneS9x7DwuuxKHnwlkEgBEkM8MfF4zN+2cLyST3jmx
OO8ha8PneS9r7Jwuu7KGzwNkEgBEkM8MfF4zG98aLSSTgj/G8x6yNnye91LG
zu+y27Btct6DzQ3IJACIIJ8ZlHLL4GTjjjlCMmnnkSl5D1kbPs97KWPnd9lN
Xf9/l8llJwRkEgBEkM8MSrllcLJzV4uQTDrRsyXvIWvD53kvX+yB7PHWZScE
ZBIARJDPDMq3ZfATxD69+UH+zeWjT87mPWRteD7veQ9BM13n27x12QkBmQQA
EeQzg/JtGfwEsXd2reLcWVo7x+Y9Xp14Pu95D0Eze47P9dZlJwRkEgBEkM8M
yrdl8BPG3tg+LHNbqX/z+yXrhIt5LxMnerZ467ITAjIJACLIZwbl2zL4CWO/
fvNSuhxf/Jjd8tCF3qN5D1YzmPcy8dEnZ7112QkBmQQAEeQzg/JtGfzEY6fV
5Stl39sK5r10eOuyEwIyCQAiNf3kPRAXKeWWwUki9svXuo6eadl5ZMqqtiFb
D9UdPt1UvptIEZj3ksHvslu++Td5DzY3tEw9NhRQPpDPDEq5ZXCC2P2krLFz
uuz27NuV90hzA3eTACCCfGZQ1i2DB8TuJ2WNndNlV9bweYBMAoAI8pkB1kw/
QexlJdNlV+7w2UAmAUAE+cwAa6afIPYSw3bZlT58BpBJABBBPjPAmukniN1b
fA4fMgkAIshnBlgz/QSxe4vP4UMmAUAE+cwAa6afIHZv8Tl8yCQAiCCfGZRg
zfy0Z9fHR5YG//7PL28KvbAEsUuD2L3F5/AhkwAggnxmUNw18+b5jj+v++fT
r/2f8aNn9XdvdG/jPENxY1cHsXuLz+FDJgFABPnMoKBrZu+7Mz+c97WERoqO
y9tH/uWzjzJPUtDYtYDYvcXn8CGTACCCfGZQxDWzd/9kmkCKjgstgzPPU8TY
dYHYvcXn8CGTACCCfGZQuDXz5vkOxn2k+HHteAP7VIWLXSOI3Vt8Dh8yCZSA
jvqamvqO5FfPNb8QtRskfPvWi+jfRT6zKNyaea7xYR6NFBzdC+9nP3orXOwa
Qeze4nP4kEmg6NxWQwmlU6WRQl5oPsf4blIpIZ8ZFGvNDGQPp0YKj097WF0+
ixW7XhC7t/gcPmQSKDQDt4SqZU749ehroSyKdFL4Xdr/hiCfGRRrzbzRvU1I
Jn10cB7jbMWKXS+I3Vt8Dh8yCRSW2xKpvqPvP9IyqUr3xH+m77+rvtsno6p1
EvKZQbHWzN53ZwrJpMvbRzLOVqzY9YLYvcXn8CGTQGHpqI/LnmqZFN4+It9N
Imii8GtVp0A+MyjWmvnJqU1CMql3by3jbMWKXS+I3Vt8Dh8yCRQfgkyqVFu0
00/gSFamKumEfGZQrDXzi2tnhGRSIKsYZytW7HpB7N7ic/iQSaD4EGVSUiUN
/ATpxyGThCjcmtm98H5+mRTIKsapChe7RhC7t/gcPmQSKD5p3ZOwbFd/gftu
Upx9IEZDQ0PeQxDjUMtLnBrp2Nqh7FMVLnaNIHZv0R5+a9uS9dsmBP/u2bdL
75m1ox57fCsxvBsCQCQlk6juo76vwZukzL4C/ml5oWVwpkY6u+I7mZ1wixi7
LhC7t+gKv+fKgeXbH5vY9J/ix4LWH3adb9NyfhNonHpsKyAnBGUSPummTBG3
jC9vXEg3vY0fZ5Y88NmlI5nnKWLsukDs3qIl/D3H505d/+2ERoqOjR3P3/z8
Y/V30Q5kEig+6YduqUpI1TUoUTdJkeJuGbTut5x9bytFjl0dxO4t6uG3H51J
E0jR0dg+TMto9QKZBIoPtSBAggEhhCrcahR6y/j86snrJ9f37q09v+HRq7vG
XDvewHMTKSLf2Lsv7u3sWhX8+8VfPrP/7oWed0V8jr2iHH7PlQOM+0jx4/Dp
Jl1j1gVkEig+5IIA1Vooca+ogp5uKvi8ZeQSuyOODsy7tyiGv3jrIzwaKTim
Nz/o2qM3yCQAiCCfGfi8ZdiP3R1HB+bdW1TCD/KTUyOFR/fFvRpHrg5kEgBE
kM8MfN4yLMfulKMD8+4tKuF3nW8TkknvnFisceTqQCYBQAT5zMDnLcNm7K45
OtyZ9097dn18ZGnwb2YBB124E3suqIS/5/hcIZm0seN5fQPXAGQSAESQzwx8
3jJsxu6aoyP3eb95viNd1aFn9XdvdG8z/da5x54vKuGf6NkiJJN2HpmiceTq
QCYBQAT5zMDnLcNa7A46OvKdd1oxB9GSDnL4nPMVtfA/+uSsUCYHskrjyNWB
TAKACPKZgc9bhrXYHXR05DjvvfsnZxZRv9Ay2NwAfM75inL405sf5M/kQFbp
GrYWIJMAIOJ+PudYQsfnLcNa7A46OvKa95vnOxj3keLHteMNhsbgc85XlMMP
VirONG7tHKtrzLqATAKAiLP57EIJHZ+3DGuxO+joyGvezzU+zNm5uHvh/YYe
vfmc8xUd4Te2D8vM4fo3v59L3VQ2kEkAEHEznx0poePzlmEtdgcdHbnMeyB7
ODVSeHzas8vEMHzO+YqO8K/fvJT++y5+zG556ELvUS2j1QtkEgBEHMxnd0ro
+Lxl2IzdNUdHLvN+o3ubkEz66OA8E8PwOecr+sKn/aHnbN/bCmQSABRcy2en
Suj4vGXYjN01R0cu89777kwhmXR5+0jaqVSqLfmc8xWt4V++1nX0TMvOI1NW
tQ3ZeqguWK/4byLZr5dVgUwCgIJr+exUCR2ftwzLsTvl6Mhl3j85tUlIJvXu
rU2cQUu1JZ9zvpJ3+DnWy6pAJgFAwal8dq2Ejs9bhuXYnXJ05DLvX1w7IyST
AlkVf7muaks+53wl31oQudbLqkAmAUDBqXx2rYSOz1tGLrE74ujIa967F97P
L5MCWRW9UGO1JZ9zvpJf+LnXy6pAJgFAoaYfC++VWQHJtRI6Pm8ZecWu4ujQ
RV6xf3xkKadGutL2h+hVeqst+ZzzlZzCd6FeVkVT7DY3FADsYCGf+SsguVZC
x+ctA7HnwoWWwZl75dkV34k7e/VWW/J53is5he9CvawK7iYBQMF0PgtVQHKt
hI7PWwZiz4Uvb1xIm3jjx5klD3x26Uj089qrLfk875U8wnekXlYFMgkACkbz
WaICklMldHzeMhB7jtDcvGkfr/ZqS7nHni/2w3ekXlYFMgkACubyWa4CklMl
dHzeMhC7HO91XWrdezr49/Mv/qIyhs+vnrx+cn3v3trzGx69umvMteMN8ZtI
ERqrLYX4PO+VPMLXPoPSQCYBQMRcPktXQHKnhI7PWwZiF+JE99UX6tsee2FD
/Bj56rbO9y+YGGGEerWlBD7PeyWP8LXPoDSQSQAQMZTPKhWQ3Cmh4/OWgdj5
Wb/jxBNj30hopOiY09T5yaefGxqqYrWlND7PeyWP8LXPoDSQSQAQMZTP6hWQ
XCih4/OWkW/suTRriBCKfc3W4zSBFB11S/ZoH2R0iaSrLRHxOecrOYWvdwal
gUwCgIihfNZSASn3Ejo+bxl5FZDJsVlDBH/sJ7qvMu4jxY/tHd1axpa+RKfm
8O6w8WpLNHzO+UpO4cvVy9IOZBIARAzls2sVkOTwecvIxcuab7OGCP7Yn5u1
g0cjBcfQ8ZvUH73RLtGHHDtsotoSDZ9zvpJf+BL1srQDmQQAEUP57FoFJDl8
3jIsx+5Cs4YIztgD2cOpkcLjva5LKqPiuUS0I1FtST32spJX+KL1skwAmQQA
EXP57FQFJDl83jJsxu5Is4YIztg7378gJJNa2j+QHhLPJTql40aczzlfyTt8
/npZJoBMAoCIuXx2qgKSHD5vGTZjd6RZQwRn7Ot3nBCSSXOaOqWHxH+JPpx/
79VdY9jVlhj4nPMVB8LnrJdlAsgkAIgYzWd3KiDJkfuamSPWYnenWUMEZ+z7
3vuzkExa2Sr5AQSbl8jnnK/4HT5kEgBEjOazOxWQ5MCaaQF3mjVEcMZ+8eoN
IZkUyCq58di8RD7nfMXv8CGTACBiIZ9dqIAkB9ZMC7jTrCGCP/ah4zfxy6RA
VsmNR+Mlyuyl4nPOV/wOHzIJACJ28jn3CkhyYM20gDvNGiL4Yw8kB6dGmr/h
oPR41C8Rfy8Vn3O+4nf4kEkAEEE+M8CaaQF3mjVECMVet2RPpkYaMXmLSidc
xUsk1EvF55yv+B0+ZBIARJDPDLBm2sGRZg0RQrH3XruZvlETP341YfPpc6qf
zpO+RKK9VHzO+Yrf4UMmAUCkph/id/NtrRWS6aYwB9ZMOzjSrCFCInbaHRtd
fW/lLpFELxVd8959cW9n16rgX2c/x0oEv/LqMDYUAIoIMZ9daK3F76YwB9ZM
a7jQrCFCLvaei9faD55d2Xp03IJdSzYeCYSH+k2kOBKXSKKXiuK891w5kP5w
64LWH3adb1ON3wr4ldcCZBIoE+l8dqG1lpCbwhxYM63hQrOGCDfnXfQSyfVS
UYmd9pnWonyyteLq1NsBMgkAIol8dqG1lqibwhxYMy2Tb7OGCJfnnf8SyfVS
kY69/ejMzFqyje3DNFwCk7g89aaBTAKASDyfXWitJeGmMAfWTPvk2KwhwvF5
57xEcr1UJB84XjnAuI8UPw6fblKNvxq9/knHp94okEkAEInnswuttSTcFObA
mukn5YhdrpeKXOyLtz7C2cBxevODWh69GfJPlmPq5YBMAoBIlM8utNaSc1OY
A2umn5QjdrleKhKxB7KHUyOFR/fFvYqhmfNPlmPq5YBMAoBIlM8utNaSc1OY
A2umn5QmdoleKhKxd51vE5JJ75xYrBKUUf9kaaZeAsgkAIhE+exCay05N4U5
sGb6if3YDRUHk+ilIhH7nuNzhWTSxo7npSMy7Z90P+3N1ZGDTAKASJTPLrTW
knNTmMP9NdMciN0CFoqDifZSkYj9RM8WIZm088gU6XBM+yedTXsLqQKZBACR
KJ9daK0l56Ywh7NrpgUQu2nsFAcT7aUiEftHn5wVkkmBrJKLxYJ/0s20t5Mq
kEkAEInnswuttSTcFOZwc820A2I3iuXiYPy9VORin978IL9MCmSVXBQW/JMO
pr21VIFMAoBIPJ9daK0l4aYwB8+6Ya13leUmWcTY9daocaFjIBHTe2UuxcE4
e6nIxR5kJqdGau0cKx2CBf+kazLJZqpAJgFAJJHPLrTWEnVTmIOxbljrXZVX
k6x47Hpr1LjQMZCN6b3SqeJgCaRjb2wflqmR6t/8vorIt+CfdE0m2UwVyCQA
iCTy2YXWWqJuCnPQ1g1rvatybJIVxa63Ro0LHQMzMbpXulYcLIF07NdvXkrr
+fgxu+WhC71Kn7mw4J90SiZZThXIJACIEPPZhdZa/G4KcxDXDWu9q/JtkhXG
rrdGjQsdA3kwule6VhwsgWLsNGGvS9Kb9k86JZMspwpkEgBEaPnsQmstTjeF
OdLrhrXeVTk2yQoJYtdbo8aFjoGcZO4XKrVr8i0OlulwU98rL1/rOnqmZeeR
Kavahmw9VBfkZ+ImkoonzbR/0imZZDlVIJMAIIJ8ZpBeN6z1rrLfJCtBELve
GjUudAzkhLZfaKldk0txMH6HmzmdoMuTZtQ/6ZRMspwqkEkAEEE+M0isG9Z6
V9lvkpVm/26xD1+za9S40DGQH+J+oat2jf3iYEION0M6QaMnzah/0imZZDlV
IJMAIIJ8ZpBYN6z1rrLcJItI55bXhIQNu0aNCx0D+UnvF3pr19gsDibqcDOh
E0x40gz5J52SSRW7qQKZBACRmn7yHoiLJNYNa72rLLwRw10TWkeONv5MSNgw
atQEJzy/6ee6zmaBxLxrr11jrTiYhMNNu04w50kz4Z90TSaZTpX4OqAldmwo
oHwgnxkkt0tbvavMvRHDXZOwjpwSUTWnSTVq4idUP5tNEvNuonaNneJgEg43
7TqhQJ60insyqWImVYjrwK8nbNTVIQ7bCigTyGcGiTXTWu8qQ2/EcNfMmfBU
V/1XhZRM4kjUqGF7UUTPZpn4vBuqXWOhOJicw02vTiiWJ63ipEzSnioWOsRh
WwFlAvnMIL1m2uldZeKNGO6a+a/8UkUghUe8Rg2PF4X/bPaJz7vR2jVGi4PJ
Odz06oRiedIqTsqkEF2pYqdDHLYVUCaQzwzSa6ad3lXa34jhrnl23Ksn59xD
3LNOzeHd3eI1amheFLmz5UJ83k3XrjFXHEzO4aZXJ1jowqYXZ2VSRUeqWOsQ
h20FlAnkMwPimmmhd5X2N2K4a3bP+BvGtvUhx9aWqFHD8KJInC0X4vOeS5kj
Lcg53PTqBAtd2PTiskxSx1qHOGwroEwgnxkQ10wLvav0vhHDXVMzerXQLpY+
EjVqRL0o7LPlRXze7Zc50oWcw02vTrDQhU0vJZZJNjvEYVsBZQL5zICxZpru
XaXxjRjumlHj63g2L9rn1NI1ani8KPxny4vEvNusXaMXCYebdp1gugubXkos
k2x2iMO2AsoE8pkBe83M7F2lC8U3Yrhr5kx4in8LC+TNn9d8n12jht+Lcqrv
GdyZpQ/k1TGQQWLerZU50o6Qwy1s99batkT9eXEc013Y9BJMvUTDPpUuddaw
2SEO2wooE8hnBuX405Lhrhn38jihZyKZ1pHCeVGIpOfdTpkjE/A43Kas/8+J
rxDbvUljtAubLiQa9unqUmcHmy47bCugTCCfGZRDJjHcNcPHLhJSNZnWkcJ5
UYik591CmSNDZDrcJtG/pesJstEubFqQKCWksUudHWy67LCtgDKBfGZQDplU
Ybprjs2+l1/V8FhHiuVFIUKbd6NljozC7n7LOOLt3hQx1IVNHYlSQia61FnA
mssO2wooE8hnBqWRSQx3zdTaZzklDad1pFheFCKMeTdX5sg0CYdb23uvpp+1
EY+o3Zs6JrqwKSJRSkhXlzoJE5Qi1lx22FZAXnTU19TUd6S+fK75hajfYPr7
t15E/SbymUlpZFKF6a5pnZbddUvIOlIILwqDMs07DYl2b6VEopSQYpc6CROU
Ruy47LCtgFy4LYYSSqdKIqXEEOG7SaWEfGZQpu2S4a75xZhlbdMfYqz2otYR
970obMo070Tk2r2VD4lSQopd6iz0U2Njx2WHbQXYZ+CWULXMCb8e+1rfF15o
Phf7bv//Jf83BPnMoHzbJcNdc3Hfq3qtI856UTIp37wnkGv3Vj4kSgmpdKmz
00+NB9MuO2wrwC63JVJ9R99/VMmkKlFEfmHVd/vuLlX/PPKZQVG2SyGTA8Nd
E7eOHFs3XN064qAXhYeizLs0cu3eyodoKaGZTSt27Ri+f8FdH9R/hVMmRV3q
rPVT4yS9DrRs2ZX9Mj6wrQC7dNTflkYpmZTWTXEImij8WtUrkM8MHN8ujZoc
HI/dKKWPXa7dW/ngLCU0tG7m2KU/SFyT1xru273w7kyZFFUGs9ZPTf5q6Et7
bCsgJ4gy6ZYOiluQEsYkkpWpSjohnxm4vF2aNjm4HLtpSh+7XLu38sFTSujp
GSNfafwW7cqsWXnvCeadpbAymM1+atJAJoHik5RJoeZ5IeXSvi2DSPeaIJOE
cHa7tGBycDZ2C/gQu0S7t1LCLiU0ctZvMy/OslWsymNhZTCb/dSkgUwCxYco
k0jP4cKvcN9NirMPxGhoaDBx2qaNb89r2BH8u3uPzMtff7P98dFci+3Cxh3S
gzQUexzF62AOC7HnzvptEzg10sKN/xr8cGvbkj37duU9av0EGch41sa4jxQ/
ti8iP307tnZo+C4zl28Tkkkvzd1i/1Kop318KzG8GwJAhPrQLc6AEII3SZl9
Wu8q6LIS2TE56I09Tr51Y3gwF7tT8LR7Sxx6e705Aq2U0IvLv8d5Waat/Wb6
0Vu8MpjNfmrSaEx7bCsgJ1IyKeN+ET7pporGdUOXlciaycGQVMi9bgwPnsik
zHZvtENXrzdHIJYSenxMg9A12b/gLkZlMJv91KSBTALFJ202Ch+7pR66oW6S
JnStGxqtRNZMDiakgjt1Y9h4IpNC5Nq9aez15ggJAT9s4iShC9K6+B52ZTBr
/dSkgUwCxYfqyaYW2s6jCrf9RkXm0LJu6K2XIlrpZU5Tp9ywibGrTK5rdWMY
qMz7pz27Pj6yNPjX2VYsacJ2b1v3/G75m/9tyRuPTFn3VzzCQGOvN0fouXht
6bqdYSmh2RteEpJJTev/ll0ZzHQ/NfXEg0wCxYdWJinetS1da9JSTzf3DScS
aFk39FqJrJkc4rFrmVz368ZESMz7zfMd6f4sPau/e6N7m4kRaiQx8rkN93EK
g1L2eoum3kRpKRP91DQmHmQSAES05HMhDCcSqK8b2q1E1kwOUexaJrcQdWMi
ROed1pbF/eYsiZGfqP+KkDYoX6+3aOpNlJbS3k9Nb+JBJgFARD2fi2I4kUB9
3TBhJbJjcghj1zW5hagbEyE07737J2eWYr7QMtjcaKVJj3z3wruFtEH5er3F
p95QaSld/dS0Jx5kEgBEFPNZl+FEzvRi2geivm6YsBKZNjmEBLFrnNxJy/Zp
vw7m4J/3m+c7GH/Ox49rxxv0DlLRBEgc+aalXxWSSeXr9RZMfbSqvHtyGed1
aO0cK/QujL6KnJhIPMgkAIgo5rOi4UTO9GLNB6K+bhiyEpkwOSRHvm+ficnV
ex0MwT/v5xof5tmqgqN74f1aHr3pMgESR94ueDepTL3eiKvK8rXZnwGsf/P7
X/zlM8ujNZF4kEkAEFHJZ0XDiZzpxaYPRH3dMGQl0m5ySNPWnq3EpCdX13Uw
BOe8B5nGuVWFx6c9qh3YdZkAaSN/b66YN6k0vd5oq8qxuXcuWP0NxhWY3fLQ
hV7bkt5Q4hVMJr0/adAdCQZNep/2AzXNVV+P/S/p5xM/nfwa8TwDL68eRsbo
iWcgjo92GvIZuEcRfytSDMRzRl+sehfua0WmuYZr0Dmgks8qhhM504tlH4iW
dcOclUiXyYHI6maxG0Gik6vxOmiHc95vdG8T2q0+OjhPZVQaTYCMkU9b+00T
hhyXyVxVNi396pSm+4nPHHP5rJ+hxCugTKreeYNtNtpnb/137Nvxb5G37Fs/
cfursR+Ovhr79sDPx7408P0+rZAhCUinJQ8g8zRV7xV8gVdgEV4+8La3Yohd
yeQ5q3+w/7vc14oxHnrUXELLFCr5LGq8Cdbw0E1x9NRlCdOLfR+IlnXDqJVI
3eRAQ7QLVeQmojqa/sR7KhVLlRY457333ZlCu1Ug4KWtdHqrTjFG/tbiewwZ
ciJcKK0WjeF6z36eVeXQ/Dvf3Tdq55Epq9qGbD1Ud/h0E+dNJBPBEqdv/4K7
grkL/v0g1Tbl8vaRPKd1QSYFf3pPb+gIVrPJK/YFKxvrRwn7ZvQlyvfSW3tE
1RYd/UTsq7FXhTdNBtXUDJyn6pyZd0VIpyUPgBl9Ygwit2NILye/mvBVcrDc
14pKOWWSqPFG4oibXuz7QHStGxasRNpZ8brY3aTITcRwNP2U4zwuXAfOef/k
1CYhmRQ/RK10eqtOsUe+bNW9Jgw5LpRWS49h94y/MbGqGA02Pn0dC+5KPxZ8
reG+3QsHuvH27q3lOW3uMin4Qy9xxQKxRP1phkwibqmRTsrecPtvh1DEz/vN
zSm5FfufTLGSralS92PS5yCPgfehFeHl5MtCOidx/ALXqprwVtOtu001NdU3
A2MPIKP/z+epnIpM4jLecN9DoB2h6cW+D6Sib92wYCXSzpbtu4WmKXQTidrV
3LwOnPP+xbUzmXl4ivldTiud9qpT7JGbMOS4UFotPYaa0atNrCqmg42m79bT
QPpD0jUr7w0b8gayiue0+cqk9oNniZeLWhuE/NAtfWcm9e0smUS575Q6Kc3Y
k7mTZ8mk+COvDFKnGkTyDHG9vG8gzUl3EfGciSeMLElJGmecxKmiG1Op54+F
vZtUETTehMe/CP58+Gti2QcSore3l1ErkXaC2CVcVVx2NYpyduc68M9798L7
pW8ohQePlc5E1anMkdO2YAlDjgul1YhjGDW+TvuqYifYYPpaln0t86bfslX3
BsMOZBXPOfOVSZNXkGuGPDdrB/kFDAu3gkyqchYJbP3Vdh32hs48LY+1iXyq
KnXF51JKWovilqxInJDOOSAJm0l38LhlUtUP0m6sFVgmhdVF3n5r3eBRa8WU
kuD9pdD0YuhxPBvtLVDNWYm0E8Qu4aoSsKsFaTBqw/AJmx28DvzzHvwKKMqk
031Wuu6Lezu7VgX/Ep9kEa/qLyZMGzHt+eDfn45uIv7KqI/80Pw7dy66Z/Ob
/13UkBPHhV5+tDHMmfCU0ExlrirWgj3xzgTGfaT4saf1XznPma9M+tWEzbRr
RX4BY9+kmrQzNtzYDY30eZhbP/En40+O4jqOftrkAGhnyL4IfDal1N0kpjmK
X8bwyqTq+2YJd1N1zIWSScTqIvtnDgr+LhMTS9xHaHox9DiejVed4hOEsYu6
qqy1nDOK0LxfaBksLZCImbyg9Ydd59uqxhO7qkPrZo5d+oPES15a8Q/DJk4S
vao8Iz+74juKtVtd6OVHG8O4l8cJzVfmqmIt2MVbH+F02vO33stXJgV/OdKW
F/ILWPumuIWbfBuHbEsmvIm6hVv0PhLhfSlvwflymtWKfc6BH+S+VtRTxhVX
/BZWwWQSu2bR2qmP1oxerV0mhaYXQ4/j2UAmibqqrLWcM4rQvH9540L6Dwee
g53J8Wdb0VV9esbIVxq/RXvJc/OfeHxMA/9VzRz5mSUP0Prdc+JCLz/GGIaP
XSQ0ZexVxVqwQWJwaqTw4Gy9l69Mot2IXrKRkoHsfVO0IADFD0T/kDtBV/A+
dCOeVsCQRBlDfIicbu7qSzGgWYhhD5yT8IO0FxHfKAbJm5SwJhG0k23485mn
ZlHrtIfD3BY1IDGOqISOicfxbCCTQoRcVXZazhlFYt4Tf0GwndvBwZPJje3D
ovMHV3XkrN9mvmTUoh+LXlXa3z5aKrW60MuPPYZjs+/ll0nsVcVasF3n24Rk
EmfrvXxl0udf/CX9F9mIyVuo99z4PrAW/7hU7IXJB1npp1tVlp3EGYgDGDgt
f8mjO6r1AHEATKrHEIuM78YLzYV+R7X+S5+T/Mkz3muVftDYd6ZJNXGlefuL
/d6n/i/mckepph/2j/HXLNrS9Oq4BbtGz32btURIldAx8TieTYllEtsMU0nF
numqiurDbNp9SmJynUJu3j+/evL6yfW9e2vPb3j0z+v/B+N3pGPBXZyZvHn/
kvCqrt25iXEfKX7MXj9dZeTH1g2/drxB8SZShImehnrHMLX2WU6NdKXtD44E
u+f4XCGZxNl6T8tyx7mhEAmUUrDChCal4O+CYH1w5DMdwHM481m0ZlGmR0Wi
hI6Jx/FsyieTeq4cWL79scTlSpthKtyxE+vD1IxrEZ1cp1Cfd3ZhorkN93Fm
ct2aB8LnaC8u/56d5Neb8y541TLH0Dote3Hj8WhZC/ZEzxYhmcTZei/3uklA
N+l7VDndjik4PPksUbNI1KOSPhKmF0OP49mUTCYFf4ROXU9t5Zn4oDdP7NKN
2xypj0RDfd4ZhYlO1Iv1TfvFhGmBUrKW/Hpz3gWvWuYYfjFmWdv0hxgLGqdH
y1qwH31yVigfOFvvQSYBQIQnn+VqFnF5VLhL6Bh6HM+mTDKp/ejMzIsWN8Nk
xp5dH+ZPG346imtyXUPLvNMKE+1eeLdQJv/bq/8+bOIka8mvPedd8KrxjGHO
hKdOzrknPV9CHi1rwU5vfpA/Hzhb70EmAUCEJ59Fe1eF1UX4q+6MX7Qrs5SQ
ocfxbKJ1I9PJowtDb9Rz5QDjPlL8OHy6KXwJe83krw8z7/WDeutEhQW75Dqj
caJlv0gXJgrLfK1d/nWhTH5u/hNPzxhpLfnTsSt2JTPa05BzeJxjGDF23vJ5
L4Uerau7xkh4tEwHGxGsEpzJwN96DzIJACI8+Szau+pi+/jwhRp7mRl6HM9m
y9srOZ08ivBbhuSQsHWx10z7xXCIBbtEO6Nxomu/CAsTJYsjrRVI4+D43Zxf
D59Uay35o9g1diUz0dNQdHicY9i9R3XqrTVwbGwflpkJQq33IJMAIMKTzx9f
OiUkk47vaQhfqLGXmaHH8Qz2HJ87uYn62SKJlg2MN+K3DEkgZ+tirJn2i+Gw
C3Zp+eh6HF37xZc3Lmxp+nvOD7XRjkAjPTlusbXkD2PX25VMe09DieFxjkF9
6q01cLx+81L6b6v4Idp6DzIJACI8+Rz8gSZUXaR1e3v85bp6mZl4HE9D1Mnj
8hvJ2boYa6blYjg8Bbt4OqPxo2u/4JnczCPQSME1rFvzgJ3kD2I31JVM1zqg
MrzMMeiaemsNHGl/ZEn8eQWZBAARnnwOfuX5q4usnvLTdD2QzKo7PJ4cLY/j
eZwtEk4eOey8kZyti7Fm2iyGw1+w69rxBul3SZC5X/CkK//kso6FPwyv4Yhp
z6snPw+vv9luriuZek9D9aZp7DFolArWGjhevtZ19EzLziNTaK33ON1lidhV
TICQSaBM8ORzWA+Ep7pI56xvDx61lr8eiKgnR/pxvJCzxVqBJjtvJGfrYuwX
NovhiBbskn6jqgApsQulK//k0o5Zjd88MucbUQOgUYt+LJf8QoyYuJFzWs21
YGNg2hRXpg+3itq3wti1mAAhk0CZ4MnnsB5IZnWRw7Puf+bF2Y9x1wOR8OTI
PY4XcrZYK9Bk7Y3kbF2M/cJafRiJgl1yb5SAGLtQuopObvqY0Xjfgfl3BkH9
8aXJ4WUc/OKKdNPbzOQXwoUWbPkOrzQyScK+FcSuywQImQTKBGc+R/VAaNVF
4n1veeqBqHhyhB7HizpbrBVoslkJSsLWxd4v7NSHkSvYpU46dtF0FZ3cxBF1
cA6OGXXPxC8mrfutls8UuNCCLd/hlUMmydm33nv9d0JLJQPIJFAmOPM5Xg9k
xNh5tS+PXjxp6LZX/2n55Ccm1j4f3kQKD556IOqenPBxfFP7+Nkt/7Lm7TEH
utYS/46WcLZYK9Ck8Y0yrTISti72fmGnPoxcwS51kv3sxNNVdHLnrrlv0epv
rF/x9e2L7g5vIsX/AElc0iHjF8x+fQ7DiyKNCy3Y8h1eMPXWiqQZQs6+FSyV
p+oJf/8ylkoGkEmgTPDns8Z6IIqeHP5n7hLOFmsFmtTfSMgqI2rryvyz2kJ9
GNGCXb17a6XfK04idol0FZ3c5mVUMR/8PaL3qrICd6AFW17DM127zBpy9i29
JkAbMinWuv6OqJ/8+7QfiHUyq+5WT/z5xE/zdL2vamv/fiUL0mnJA8g8DfkM
3KPof3mq/9vtEwx8PXZG4hsRxy9wWYJ34hl0DvDns656IIqeHP5n7nLOFmsF
mhTfSNTZJWrrypRJFurDMDqjEY9AVqm8XUQ8drl0FZ3c9oV304Ia9/I4vVeV
gQst2HIZnunaZdaQs29pNwHakknVauLWht6/z/Zt7gPfjn+LLJNu/cTtr8Z+
OPpq7NsDPx/70sD3+3RBhswhnZY8gMzTVL1X8AWBzrapl6fHdyuY+CWNaark
64jjF7osTJlEE7dWEM1n9XogKp4coWfu0s4WawWapN9I2tnFb+viNGmYrg9D
64xGPAJZpf6OlerYpdNVaHLfm/sVWlDDxy7SflUZDHlRoJexoRZsDEyY4qwV
SbOAnH1LuwlQWiYFI7m05TfnNzx68c2fXz+5nvWjhH0z+hLle+EmTNxwq7bo
6CdiX429KrxBMqimZuA8VefMvCtCOi15AMzoE2MQuR1DfHnsNDTxNKAek29E
HL/0ZSGP2FGZRHxMr1gPRNqTI/TMPRjzrh3D9y+464N66gaUOCJni65+SZkm
h/0HJnK+Ucv2Jweuv5qzK7R1bd3zu+Vv/rfNu//tUFcD0dnC72U1Wh8m3RmN
dlxp+4OuN43HLp2u/FnUtOLrtKD2rvyV6ao7CeY18D6yUexKJod2U5y1Iml2
kLNvaTcBysmkq7vGJN4oEEvUn2bIJOKWGumk7A23XydQdvn3m5tTciv2P5ly
IFs80IRK7BzkMfA+tCK9PDY60mliX898o6q7URmXJXqoFyRN9c3A2AO86P/z
eSpHzGejj+mlPTk8z9yH1s1Mf2j6tYb7dtMfakRH3Nmi0i+J/+qda3x42ap7
M99oVuM3Ty0a8AOoOLv4i6K485GfsDMa+zi74jsaO+HGY1exkPFkUTC5NCWv
Nyj+2K11JZND7/CsFUmzg5x9S7sJUEImXT+5XuzOFfmhW/rOTOrbWTKJct8p
ddLkefpdOJk7eZZMogkVnlMNGiQiJ1h35BJfi58z442qx8++LImncslHdQPP
7xy7m2T6Mb2cJ4fnmTvts9LhEf+QNfGIO1uk+yXxX73QD3Bs7p1VfVFTR1Q/
J/QDqDi7hIqiuCOTvrxxIS3t4seZJQ+IdnJnE49dxUKWmUXR5FoIij92a13J
5NA4PGu1y6whZ9/SbgKUkEkX3/w58b2CvyXJL2BYuBVkUpWFRkAmDdhxsk04
zNPyWJvIp6pSJ3wupfSlYFwcomEp9UbV48+6LFXR026sOSeT7Dyml/DkZD5z
Hznrt5mnWraK1Zku7WxpfGu0UL8koasX9wNsWvpVYoPUuLQL/6qStsqI1o9y
RyaF0DSe9r63lVTsil41hh/swjuTrQXFSRS7ta5kcmgZns3aZdaQs2/pNQFK
yKTg7wLa25FfwNg3qSbtjA03dkMjfR6mTCL+ZOqzY5k3qZIDoJ0h+yLw2ZRS
L2eKEaaMIY5f7L5ZwrJVHXPeMimkYvExvYT5h/3MfWjdTMZ9pPixfRH56duV
tj+krUTBlpHZLylC9Ool/ACH5t+5c9E9zcu+RqufE2iYj48sfXv/C0ILe2iV
kagf5ZpMCvj86snrJ9f37q09v+HRq7vGBENN3G/h7F2VSSJ2da8aI4syg5JA
pfJPPHZrXcnkUB+etSJpoqjMoJx9S5cJML6hCBHkP/Htzq74DvkFrH1T3MJN
vt1BtnAT3kTdwi16H4nwvpS3EHk582UZMokw/szLQryblLxb5YRMiv7b5mN6
4TI+zGfuLy7/HufIp639ZuLRW8eCuxY2/lXix0IrkZBUEL16on6A8GhfeLfQ
wh5aZSSKojgok2iI9q7KJB27ilfNGloshQWad3WsFUnjRJcpVM6+dWIl69F2
JFp4/HISMolmIw/+diC/gL1vihYEoPiB6AUBCBZu3oduxNMKGJIoY4gPkdPN
TbJXpcoepM5J/CJ5/JmXheRNSliTCNrJNlE+W35ML2r+YTxzf3xMg9DI9y+4
K/od7HvaRf3JpZt/yakGJa4ejx/gVOor7839itAbBRuBXFGUomyXEr2rMknH
Lu1Vs4YuS2FR5l0L1oqk8aDRFCpn33pn12ZdJkAJmRSor/S7B6qM+vSZ7wNr
6XqHaVNTsPumn27FxUfyDMQBCNRRJJyWPgAm1WMg1nfkfzn1uVjqnOkvUsdP
uizpB3V9355UE5dUt7/YHC/ywB2YZqJ8zuUxvVB3Ntoz92ETJwmNvHXx7Zr8
Lcu+lvnDnEYsuasn5AeIjmkkFxPtCDYCuaIohdgu5XpXZUKLXShdbaLRUliI
edeItSJpbEyYQkXtW+HUazEByhUECJRS797a0KQUrI1X2v6Ql0MPgDhRPlt4
TP9pz66PjywN/o3ftuU3/9CeuT89Y6TQyJvW/+3VXWNOdk6Zuu4/8/x8MKRM
04vc1TvZVi8hk95afA/nu4TVlkSLonzQ/Jsg2KaNb+f1iW9O5HpXpSF60mg/
zJ+u1hAyxRF/B+M4K5N0Gc8S6CqSRiPzgldMmkKF7FvR1Gf65TKtU+jp5gbp
ezw53Y4pOFE+m3tMz1+rJxPiM/fhk2olRs5vJapb88DjYxrYphe5q/fcrB2t
03hdQ/FDqNqSqAkq3kRMxeFjGrneVREMH4izUoEIfyYnjHmO18sK0W48S2PC
eCa06DlSuylz6vmtU5BJoExE+WzoMb1QrZ7ss5GeuT85brHoyEWtRL+YMI19
41ri6oWVoH4xZlnb9IdEZZJQtSXRoiiJJmLSDh+jyPWuimD7QPg9abkjmslx
Yx7xd9ApmWTCeJZGu/FMaNFzp3YTe+qFrFOQSaBMxPNZ+2N60Vo9nKQXz7o1
DwiNXNRK9G+v/num6UX06sUrQc2Z8NTJOfdE1yTt3CZ+i7/akpAJKt5ETMXh
YxS53lUhZerhJZrJkTGP9jvojkwyZDyjoct4JrrouVO7iTH1or8ykEmgTMTz
efM7Czl/VRe3Ppt5ZolaPfwknrk37JjNu030GQxErUTPzX8i0/QianJIVIIa
MXZe7cujF08auu3Vf9o+/R94ZNJpjmpLYfcl/qIoq6f8lLYlsR0+J48u3N3+
TPDv56k9RaUIDA1iHa0/vjR5au2zwb+DR61N33m4nTncPpB3OydmukpyRzST
AwnN/h10RCbpMp4Jcfla1xs7ZqgYzyQWPXdqN9GmXsI6BZkEykQ8n5+btWPU
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
AAAAAAAAAAAAAAAAAAAAAAAAoIn/H8PU8mc=
    "], {{0, 362}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 362},
  PlotRange->{{0, 781}, {0, 362}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.728479090282547*^9},ExpressionUUID->"9e99ed4d-4ad0-474d-bdc0-\
82ef0adb4ed0"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxdUz1PAlEQvFgZKgtNLCjAGGOIMSAgyoc8vuFAgiA9IbGhsaJ/tT8Fantr
entrKxt7kZkhuX3JZTI3u7O7b++S89fxy0EQBOXt8484P9Xp7kwcXwA/xuSH
wIT4kVuvtmej+GMTf+rg90weR3xK8Qnov0/kZ8CZ+DniF+IX9JP/Jf3EU9Df
FX9l4q9Nf2nkf4tnwGPq74b1p+RZ9ic9B/TKz6NeXvG3yH+TXjD5d8wXv2c/
4kX4LTVPCfxEfmWgG5FXiIp/YP/Sq8yXv+N9kHtyJ/8a8lfSay76fdR5X9yv
r5v9NojSG6Z+M3r/vklU/63o/n3LzN8ml942+Z3oPJ58/311gV+ar8v7Vn89
8E/595iv+qGZL0S/ofQ+Uf59s8+B0Qfmf3ikn+qTx6QP9/v9A/60vPI=
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQEf7N+Xm7V17+BxgAo4HOCSZzjmAeNzODzesNhY
6Dw3lC/g8KXxD6MBPy+UL4KmXsJha+/jfT4lMHkZh9PVKedPzIDJKzh8OCQz
33kdzDwlh2vb+IMsrWB8FQeOyHlTJjvB+GoOM603+t/7DuNrOMxbmHXO/jqM
r+WQ+OB86JEaGF8HTb0emvsMHPYnWWs9yoDxDR2Oqpzuud8A4xs5KJ6Mv9lv
xQflGzvw7+7ZUXYAJm/i0DDv2ccwCRjf1KHz1c89V0Rg6s0cZnf8tstXgMmb
o+m3cPgcmeiifQPGt3S4wr6kc4kaLLysHP4eP+nx2gvmfmuHgMBSg0fHYHwb
h69PPwqcDuGC8m0dfqg6ZM14B+PbObx97vnRtRzGt3eYft3Z6FYHzD4HhyhL
L88odqh9DQ4O/7ItL09+DjPf0eGceV7Niu9Q9Q2ODqjpw8nh81dxRzY7mH4n
tPh1dth/x0PC1gwm74xmvwtq+De4OPAkvSxwCIbZ74oa/w2uaP53c9j7faVq
5X+o/xrc0PS7o/qnwR0tfXk4vPxdpnBVDuY+D4f//Demul2Auc/TIT55qUj/
VJh+T6g4TN4LzX9eDq6qpY673sPM93aoqHm86lEFzH/eaPHpgybvg5YffB2S
YyMlajVh9vs6/JnAJMX1HRaffvD4BQCP1vA+
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 85.66666666666667}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.72847909042318*^9},ExpressionUUID->"58148fd3-f25b-4d97-bd77-\
e677d1311b7d"],

Cell[BoxData["\<\"Pump Light: s+Pump, Energy: 15.3426\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.72847909042318*^9},ExpressionUUID->"0a8e5b3a-087a-44af-9041-\
560fc205d227"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Kt+84S9maxuKZioDXwtqbpCPB07G4xfmjZlR+V1WnYPLhQWazig2QmUStS32
zHtY8MvuRviEVqO4/FHBZppWMZRcepNa+JNNaeJ0bjnVhF2hxLbwzXlEt44m
rPy2fh0gk0CW8Pmz2ZnzNBxtwMmXO37lb0I74QUV3/wooDTIcrBxXXSVD2Ik
lYHXgjFvkFeD04JjFjwfWufgcmEhpjOKDb5MorZF0YQNUmLjem8zvw6O7JFy
y8ZDte6Fst2XbEoTR1a5Fyok7OIT28I35xHVrLnPVB0gk0CWIP1Zdm9sKFEf
bRC6es7Plzti8tpJq3/B6RPmVTzgzqHxet3THcr1DxIaTWEqlYHbgolskJeC
04IjS+YLrsv4lgtDA/DmVj2svBPN+Eb4mAnKJO9bduzjPmpbjJ9aIiU2Lh9a
yq9DXWu1lFuurp2ZU+2+WClNqMWRVe5Vsgm7+MS28M15RK3L75616Zum6gCZ
BLIE6c+ye2MFP8L40Qbiq+ci+XInLiyauYnSG2xcd39wxcpXmtaYCWwWj6Yw
lcrAbcGkNsiLw2nByW//TLDa1OVCTlaZ5r0NsvU0vhE+KTyZRP2Wvb72n0ZN
n+FriEXTnpOSSW6ED4cV24ul3HL25mdyqt0XK6VJsFxsfMVXT/GEXXxiW/jm
PKIl5Q8YrANkEsgSnj8r7I0V/xSDRxuIr+CL5Mt1evjORfeyArH45dCi7xk5
CVcqmsJgKgOnBVO+QZ7TgsMnlkvVnLpcyMoqI7sz2vhG+ARxbed/y15e9oTz
/L22mPLGFKmuw43w4bCtZaNU4y7e+ppO96UTGyCYsItDbAvfnEfk/D1otg6Q
SSBLeP6ssDc2/tpKreCH5std9uYfpUwmS/vCb3cfMxCoIxtNIbulfVvZ199b
de/+5XcHI6ycFkz5BnlOC46aPkOq5lLLhVIySbwFU74e51avbeeKpiNzQ5/n
+JW/8drimUkrpb47XoQPi5NnOuWcvGWjbPd1on6Ol8og6tgAPrEtfHMe0Z4V
95itA2QSyBKeP6vtjY0T2RV8fr7cl6bM7VwUsoWZlSTT1Lm3atEUUlvaybK4
/IE9RAIotwXTvEGe04IvzBsjN5LKLBeKyyTxFvSV9KzH+ZYLxWNUnps1wWuO
Ywvpa7vU4kX4cJhWMVS8cR1ZJdt9kWn/3bQSxmMDBIlt4ZvziLav/rrZOsQh
kwaPkffIP90+7w3ESWbEufasG/reTT8LzXcf8lj7E7kwaLelVyD0NvQ7CNfi
zuWB899u32Dw9Tt3ZL2TWiWJ5+LcV6TSCeD5s9re2DiRXcHn58sV38LcteS+
Peufbyl9tGnt6P07FhuZRHJRi6YQ39JOLV7MlduCad4gz2nBZ2bIha9ILReK
y6TQFuSno098PS6oDcRjVEo2Pugtvc0ufknQk4MRPlTW7Vwg+mWvej4n330F
0/4vqmy78smxQztmGYkNECe2hW/OI2qSnE0KrUNcMilfTdwavvOG8sFfk7+i
y6Rb77j9KvFm71Xi14PvJ14a/P2ALAiRObTb0isQepu8z3JekDjZNnB5sH63
jCEfaeDN9OdCe/DkrZj1Yb+BJW5jwfNn5b2x8aCwgs/Jl2t8C7MCOtEUIlva
OWXN+vvJFkztBnlOC/5+yiopk6WWCwVlkmwLUotUYmqzBJcLZWNUnp42x2uR
2jnhml8q+8f0jb8LrUBx+T+6J+HKdl/BtP9OKSnba/DADkFiW/jmPKIjS+Ta
PbQOyjLpWk/9+bp/d2TquXf/8GlnFe+tlHHTe4nxu8HxmjbcDw7R3juIV4mr
3PmRoUVFg/fJu2forAjttvQKcK331UFmOoZ6OXEblnjy3Z4mkoYOlXkU/Pv7
apy8TMqp7o2NGnc/csuJZVJfZHf1nJUv1/gWZgV0gsFCt7SHloaV93gtKH5C
DeegkIjgZDx+c6PQCqxbpJYLBcdK2RZkFcH0GmahLhfKxqj8dfHI0XPGOmLp
8QmVT09c0/jWIxwzZSN8ei/0Bg+9JUtJ+UMHO/d775fqvnxp/72yomJX/E4e
28I35xHNEVtpFayDmky61DzRVytHLDHfzZFJ1CHV00nhA+6d0Z8hfk5UVwfk
FvGfUGkQrqlYQoW4B70OopqEdjlRO9ptgq8HXnFeKKom7ymibbwlPMdpqOt6
t27g/T+ZVTnSn3X2xhqHuh9ZvLir56x8uca3MCugHwzG347EL3M3f9e3q5ez
Qf7IyR7WQSHGH4sPTsbjyuWix81sXv8tqbUtQZkk24KsIpVewxTU5ULZGBWy
uLkC3K2jVO9Vs5F1+m3w3Fvx7mvDrMc5y/HxO3lsC9+cR/TeqnsN1kFBJn3a
WUWtGPNPVPqiW3BmJvDrsLGbMe8UuCkrCCd0JA+TSeHLU+xbDR0qIyd4M3K+
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
JwqPTeLeViS0iX6rPHUlFqUkboLvnZzlSymZlPcaS0dFK5NMZeHOGd2yrTxj
LHhg/ehJS6vL3wpdtRHc0v7k1OUvzCt+7+CM9Y1PrmsY/9ysCU+9sdj7INaS
hFtkt0tHh9d8zqAQPJNrcfkDe+7s1/Oaj99nKpyVEMUWZhayh3T4eHdnM2vf
uj77jnwyc+HvBKu3qOyRmL2IbHfO/v1EUM5MwvG9JeUP0B++jJSdPrB0q7MY
7SKeR854Do1c0jJpYc0jrGdLv4AzbjKDtEMGXGJCI3gfrkyivpNcOSJ1HPu2
/gqw7hD+EMTClMQlTf6KHBGkpSWT8ufNfIFM+TZHJ5O8FxkaKSfjz6a2bOvM
GJuKHlHb0h7ntnHjOM3HOorLLRvX3X9y7cNe84X2mVJnJUS0hZmD1CEdPgyO
F0FcL1q8NjzZ4LyNQ56YuCFmL4rUdk3UMpNwfK+j9G/155Hc0tFbp9k/yOaR
M34EUrIyyfk7lPUlpV/AGzflQ7jp0zjcCGTZIJyw28rNI1E+l/ERgpeLyqSg
dMuvAes+4ZHzpI4lp8WkZFIkiPuzwS3byjPGpqImlKMIYts2bpzdH74Z2tWX
NzzuvT+0z5Q6KyGiLcwcpA7p8BG1VHC86E9TFy9aT1nP9cpbG7/11zcnO15U
2dARehKHQdIsk9Qyk3Cu2rPiHlMyyV26Ve4fFML2jB+BlKxMYh1/sPPDEvoF
/HFTNiEAIx6It589EP8suuhGva1EQBKjDmQVBaO5xU0QSpFEeTEsIQAtNskX
mkTRTnEj689GTtzQnDHWj5pQjiIQXPh7TOZg7hgQP7zDywDD7zNlA42UA9I0
ETykw0fUUsHzorlLfk2d31u0+r//YfIqn0eFnsRhhDTLJDUv4ly1ffXXjWgk
b+lWrX/QCdszeARSsjLpi68+D/5dU/ruz5nfU7ENa5QJj0BQkzP6BqdISPER
nDKhVGDwtuIpj+7K1wPsKRoWgchqqaslTFCVSdQHGFxoHPjIGUWkTLv9YvWd
291+MZEZJQV/NnLihuaMsWbUhE4UQTzbxs0ifnjHW9UPcQ638pANNIpoC7MI
Iod0+IhBKnhe9GLJmyXznlqw4ueL1v3DwlU/mb5g+F+nTeYr9kgjqNMsk9S8
iHNVk4nZJN/SrUL/oBm2Z+oIpMQTAjiP0fmeukFKTkfkiE+poxIBiIg40qXS
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
AAAAAAAAAAAAAAAAAAAAAAAAAACAIf5/uFzM2Q==
    "], {{0, 362}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 362},
  PlotRange->{{0, 781}, {0, 362}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790907044473`*^9},ExpressionUUID->"2c3f756d-4b55-4370-805b-\
f41bef34fd0b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxdkj1MAkEUhC9UxooCEwoLNIYYQoh/qCjIU/5PVDy4npDY0FjZb01vb421
vbU9vbWVjT3gzBS3m1wm383Oe/f2dmfyHD2lgiCorp61Yv3W3+erNXs0vrB/
/orIG1AbktMWr1d5RM5Q5WeRn4u3oWPVyzEv3sX+mXgP/pY4Dz8U78P/G5AL
ZH1/kSq/BD8WH0DfVO8Q/of4CJoTH6P/VHwC/dZ8ZeRfdR6nrK9+Z5Y833Ps
f5FfAS/kX9BX/UuoU/8q1JSvMS//yutf5zyqZzx/sjOv/zX7kx05ln+T/L+O
HGr+BlX5BvxN5Zs8P/lNb74W55Pf8v5fO1nPtblf+Q7vL/e7jud3oZ/Kd737
02Nefo8qP2Re84fJeYJbnh/7OXKs/n1vvj7vu/J36P/zQJ9c0Pz3vG+RLQGH
O7qx
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQEf7A9/CeCfHM3tABVw4JvSV3IhgAfK53DYs0J5
4roVML6Aw0bfGnuxWF4oX8ShoubxqkcVMHkJh3PmeTUrvsP4MlAaxldwyNz+
gin7Psw+JYfZHb/t8hVg8ioOAYGlBo+OweTVHFxVSx13vYfxNRxu/XkqrPKM
C8rXcvhwSGa+8zqYvI6DnQ5PwV4FmLyeg6S0vRJfGoxv4JD3/9X9GQYw+wwd
7ny47rjTAcY3cni8YbGx0HmYecYOfocKQuQ5YPImDi9/lylclYP539RBJWKF
YfMiGN/M4ct87SMKi2D2mTughq+FQ+HKS8vu1sPkLR3ik5eK9E+FyVs5/Oe/
MdXtAsw+a4eGec8+hknA+DYOX59+FDgdAtNv6zBXVHLhjQiYvB2a/fYO55x1
516aAJN3cOj/dfjUngVQfoMDmv2ODn+Pn/R47QXlNzg6zHt1qO6OIUzeCTV+
G5wcmv4u+zQxB+Z/Z4cfqg5ZM95B7W9wdvgzgUmK6zvMPS4OIenF28/OhZnv
guY/VwflCwUy0ooweVe0+HNDNa/BzeFftuXlyc9h7nN3MNvuzmZxBCbvjibv
4bBjDm8aVyvMfA+09OPpsPOpwy/fXpi8pwNP0ssCh2CYvJdDlKWXZxQ71L8N
Xqj+YfB2cLzO728jAAsfb4eZ1hv9732Hyfug+c/HYe/3laqV/2H+83WQW1uT
ziYBc7+vw01Z/eU1zjB5P4fXMkEWrRo8DgD2Quk+
       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 82.33333333333333}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.72847909084508*^9},ExpressionUUID->"f10d3fd1-f9ba-4dde-a316-\
95312c2e53e7"],

Cell[BoxData["\<\"Pump Light: s-Pump, Energy: 15.3426\"\>"], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.72847909084508*^9},ExpressionUUID->"18e9c282-724d-4ab5-b0e2-\
9646e8f1eca5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
588unuUyk052ZCHZLcdjJp09f5rvb67OTbxOf2KjRBOxF2dIyIERSnGyiige
Jd6s59CYvQ95vjW9Jd/iGnqW5PQc2+B2L3/o2WmbiTWQC9d1SHj6yeP08bX7
21+xft648ZmsAgi8LryJC+YGHXZgKaqYXESdpORLuuNIidOdmF8SZhLIEiz6
3H1q6MQKcmVmYmtqbdfQcw1wHXI0r+YR9snEMqt4nf7+FhpNxFicIQkHRiii
d+Cyv7Qv0aMkkPXMG7NHb/vXjuEa/dDkdJvQwT26/MFXZq6gnE/U2jUgeVTi
o/90dVntX3me5MrNf7Fm+z9RHjV7AQQuF94vZpUHPfOG9jNiArp1kuU4AHcc
adB0J+CXhJkEsgSLPtft6V00dwrjbF9V9MzK2m4NPdcAl5m0cTfr2UxL6n6T
43f6expLNBFXcYYYD4xQRNCZO0SPkkA1ZsaYPb+XjeiPa1x/D5cChCanuwka
3M2LniqYXkU/6nrCnMZsuN5aW56nhH6Vvvvoorq/JD5n9gII7C68P6x+nvLM
hadQRycZjwNwx5EGTXcCfkmYSSBLsOjzgZ6PrW9uU3G4y9vevd/YlJGsYd4j
s+dvCq9/Mrf6H6599WWO3+n/RsVPpq/76R9XT2gtG8MYTdTPWZzBfWDEiS0T
tR0YoYJNu0/SV3+3R0ks65krZs8yli7U/atzEsfHdU943tDOuZtET0734x7c
4b3T5s+dSt9EkuIDSg67d/089JGW1/3ttj1LIxZAYHHhzan8+2em11IeuPAU
ausk+3EA7hIflOmO1y8JMwlkCRZ9Hr58zfrmvvBGRduSx1h27y2zingfxmKw
Ugg9w5rlEl4zafCTwcKqxykzSWH1uEOnbxXRFYtkmDankH1p7o9QnIFX9iTg
BCAdP/sJZR/J41Gy3r95bw3XWNgOryhHnPiLD2xfx7ebRE9Op9N9asj/KF6Y
VzypeKr107+CC/uAEkL/6WrGFMLG+hdYwtgohFbemFv1t8+/uYqulkFTaCiW
TrLnS1p/cLl10vOVd8+HvIXZYSaBLMGozxPmNN7aDZ738umVd9N37y2zyn0t
bzHYKLCfYc1yiZipsLZx7ls1hBIoi7ZM9BTfFohksJ4/19IsXJwhRWYSMQCJ
q/126WQuE8VxeEU84uTk/mlrmbPbPI2enE6nbk/vqE+tcNmM9T/x3Hz2hh+8
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
i6HHARRqJgXFsTuGjd9RwjJMPRvH9XxYRwz6knUYBwtB4seYp68B9uC3STPe
nvvm9H1Vv6ePhTnLCjCBVOuzikPS3RDnTIHccM/W/WuzFy6aO8X66dgDErfu
ZZVQpiyXwnFBoX3zlz13N39ckCxhNZdcFkOPA4huJrUfXxb6N4J9Uo+7Krv0
s+zVoeKMHrmElrsXQHrwW6qXFQA8pFGfPXVi7RbkmokCZc4UyA1vanz3vaWP
eRaIg8se2VS5RvrWffQSyvT1IkpcUFDfNi96qmB6FX1+JsYFRRc2lpLLYqh2
AFHGffDSIco+kru1luXVOLKrsssq662UxJpJ7OXuxZAb/JbGZQWAIFKnzxoO
SXegz5lcBRBUHGRPJ6Krgi57xLggT99KV8ymbCK5W1BcUFRhYyq5LIZSBxBl
3Mt3P8kYmFe8+YFeX26apeTXh7q1uc/ESKaZpGH2kBv8lrplBQAK6dJnzSnb
suZMRQfZO7Qdbtq4e7n189pXX3p+xZKLRCRU9izFBSW25DLFrazC+ZILHvfr
Nz5jz/G02sHSu+QquR4SaCapnj0cXlu6M1TzGYPf0rWsAEAnRfqsP2Vbypyp
7iD7zuPvFVY97lmeCqv+W3NXPVcuEpFQ2TMWF5SokssUt7Jq50vQuPOe1NNU
TkiJElByzSTNTFI3e/hpbeuQFfyWomUFgFCcY3Hj7kg4+lO2pcyZig6yX9s4
962a7wUtUgtqH+TKRfLDKHtm4oKSU3KZ4lZeOe/lvpJ7lDpfgsad96SeTRvJ
J1xwKbl+kmYmKZo9iNiyRw9+S8uCAgAjadHnWFwz0edMRQfZv719JteaRcxF
kiV7ZuKCklBymeJWXvPWrzQ4X4LGnfeknvqKwD0QRiWPhUSZSYpmjyAc2aMH
v6VlWQGAhbTocyyumehzpoqD7DuPv0fZR2JsR/trVcvOSHLigmIvuUxxK0+Z
tZhY2U+68yVo3HlP6mlfOyaKksdFoswkFbMHBYmyp2VZAYCFtOhzLK6Z6POG
ioPs51b/OKKNNH/kyCS6603nepGouCBL04hHpWsouUxxK+9f+qge5wtl3Itr
v8uuYD2ryaewWe3Crt8Kd081iTKTVMweFGAmAUAkLfoci2sm+rwh/SD7y1c/
iW4j2W1guFOp7OwkJy7IZsfuffpLLlPcygXTq7i0KIrzJWjcLdNrV/ndjKpV
u+FeSvdO75wm3D3VJMpMkj570IGZBACRtOgzr2ume9823nRpf/J19HlD4kH2
dgJ4y94iWWbS+73llJ5rXi/Y44JUl17PxbRWUtzK0+YUcmkRxfkS+vSCZLcd
QBWV94Xq1fKaB874iia5297GMilPTAWJMpMkzh4swEwCgEiK9JnFNTNl1mL/
Sdb0dGlK8rWUeSPiQfaeBPDG9ffIMpO2d02ldFvzehEaF/TCmzumLGslDpP0
zsSyVlLcyivnvcy1XPqdL+yF64Nktx1AJ1bfWVp1P0WpltaMPbTmTnr3ymt2
KnmCMkiUmZSLPHtwATMJACIp0udQ10zQAdbO2uGP2aDX9J69ujl6OEqUgtX+
dPv2tWMCF6nNfGbS3mNFlG7HZSoQh+O1FXu1lV7PxSQ7xa08681ZXGaSx/nC
Vbg+SHa3A8iy1Ys2P+DXqE0b7/MX3/a0qqJn4q1hTidpZlLEcvdcwEwCgEi6
9JnimhFIl9ZW01usYDWx+m7P6m/J2k3qHWym9Dmu9cKfjPz2u4f1DJNDLLJT
3MoTZ5RxmUlu5wuvkgfJ7nEAHVlz596yu+srvl1WdX/dhntby8aEbiJZrXv5
Q89O26ythrkASTOTcvLK3YcCMwkAIunS5yDXjEC6tM6a3gIFqynVd4tJf8gL
tE+/OEfps8Q5M0o0kf7S67n41kqKW/nECnK1RmJznC8CT48iO5cDyN+OLn/Q
PrlPbq6i3Fi1BJpJssrdE3EfeeORPcppOOlaVgCgk0Z99jsRBNKl9df05ipY
Tam+y55wRGlN3TPovY2+XrDHw1DQP0y5+NZKilt50dwpjBrudr4IPD2K7CwO
oLMBr29e9FTB9Kqn5eUqStEuPwk0k2yil7t3Qzzy5kz5uGsDLVJOw0njsgJA
ECnVZ7drZsO2Tq6/aq2/j+I6bpWxYHVo9V2WhCNKK9nxo9CTcCOuF1zxMEHE
NUwxrpUUt3JTcfi5FW7ni9jTo8vO4gA6vPwv5s2dWr5gQsvif3pn4XPz5061
N5GellfDXIp2EUmsmZSLXO7eIcjiumXllhDOLOY1yVK6rABAJAP6LFCrNiHH
rQpLFJpwRGkrGh4buhIeQxtlvZAV9KVnmAaGO7v7Kq2fjukYRXb/3bigZPy9
8EaFP4vT3TzOF7GnR5c91AHkeNb8TVYNc6UhhWJDH8U/xUtUBSNFPLI3xtNw
MrCsAOCQAX0WqFWbkONWI0oUlHC0aMvE1iPFi+oe8v+K8dzbXARTQWI0kdJh
Grx06J3Wpz3Pp7Tp8b4LbQKyU+7Ge6sc9fjR4QOLGZ0vYk+PRXaKA6i+5YOI
B6fSUR2rxjX0UvxTjEhRMErEI3tjOQ0nA8sKAA4Z0GeBWrXJOW41okR2wtHG
mp/Nq/63ZVun1OxZc+j0Qfsmn1ztO/5Rw95jRZVt43cfKTzaX8uyieQgbCZJ
jCZSN0wdJ1cTzUi7rd/5K0ZjkuVu7KapG8rxo4zOF7GnxzjulD5EPziVgupY
NXa1p7iuiFZrFGQpGCXikb2xnIaTgWUFAIcM6LNArdrkHLcqSyLpfRAzk+RG
Eykapvbjy0JdkzXtLzKKLPduEhF7ekkOztEQq8YoPovritE/FYosBQuNeGRv
oafhZGBZAcAhG/osUKtW1nGrisISdFbfJSK2XEqPJpJ+Ku7gpUOUP8zd7Wh/
rea7SUfg6fnHXcPpMIxoiFWzxKd8o+24oDOnKvrW0A6tcxqLf4qORAWjRDwG
5ScGNcppODbZWFYAsCm4TdwdiYRArdqIx62qDkvQWX2XiJiZJD2aSPqpuOW7
n2RZdKy2pH5cqC9D7t2kI/D0nHFXlHEfBaWxapRvNDEuaFX12P1rx9C/myz+
KToSFYwS8chrJvlPw3HIxoICgJvM6LNArVr241Y9n6UnLEFb9V0iYmaSimgi
4WHyY60jjIuO3QaGO7XdTRG8T88ed3UZ91FQF6tG+UbfTJSo/W7QmIaezxLq
n6IgV8EoEY+8ZpLnNBw/mVlWAMhlSJ8FatWGHrc6YfY2f/SptrAEpdV3QxEz
k1REE4UOE3umed+FNq515/3ecm13UwTv07PGXdshPrwQteuFecWTiqdaP5+Z
XiugXTnqN7qh4tuhw1pRSSuQfqqlWNhlKVfBeCMeKS00GDIzywoAuczps0Ct
WkrydVu7dy1gz6iNHpYgLJEUhEN5pUcT2VCGiX1no+Pkaq51Z3vXVG13Uwr7
03t3R7v+02HYcbRrQuGyGet/4nnCszf84MX5C7i0i/KN7iq9i1hww99aywK9
b5sXPeX0h9dlKV3BIh4347TQYMiMLSvAcLKnzwK1aoNSmP2mAntGbfSwhCgS
RUfYTJIeTeQQPdO8d7CZa93Ze6xI291Uw/j0Js3fzjh8Ek+HYcfWrt8unfxW
zfeCnvOra577+RvVjNpF+Uavrh7LOLLFmx8Icr2VL5ggbNhLVzBKxOPZlaw2
EkswZPaWFWAy0GcKHlOBN6M2SlhC7ERJDJcYTSSXT784x7XuWOuUtrslgbhO
h+HircrXQh/1rHf+O4t2Ub7RltnDNbgHS8lnfMx6c5awy1KFglEiHj9kmNMY
gyGxrIAsAX2m4DEVBE5FianjEohiJkmMJpLOkvpx7OuOtU7R71b87t9KvFvs
JPwQn5zsCgyUb/T+tWO4TJSm8ruJ95k4oyyKy1KuuuYYIh4pjT0YEssKyBLQ
ZwoeU0HgVJS4eh6d6GUGpUQTSae7r5J14eueEXq36WWzGO82tfSXMUrNSMIP
8cnJrsBA+UY3rr+Hy0zatJEQyF1V9ExEl6VcdXULHhTxePngwujBkFhWQJaA
PlPwmAoCp6LE1fPoSKnGrPTcCmFq2l8MXXRKdvwo9GhR20U1reyJ0LvNqfz7
Z6bXxuKi4iLhh/hIr8BA+Ua3c+4m1Vd4TYvu5Q89O21zdJelLHX14I94/GBP
ddCveIMhsayALAF9puAxFZJwhog2knxoRUQ+v37RXy3Q3RbXPcpy/p3tonp2
5gZ/ypW7za362+ffXBWLi4qXhB/iI70CA+Ub3bOaLzapPb/U5NHlD74yc4UU
l2Wouq5oeIzruMYgJH7lsayALAF9puCfN2I/Q0QbGTaTbIKOE93eNXVfRyvL
HdwuqqDcKzvrKi4XlQDjZzJVA7Abez0HKaiowED5RhezVQOwm2VWORduXvRU
wfQquS5LirrKqu4OMwkAItBnCv55I/YzRLSReTPJ4pOrfcc/ath7rKiybfzu
I4VH+2vtv8oZZfe4qMbPKX1p4ezfrXxp+rqf/r7kxZeLptubSHG5qMR4u3oP
o43EW88hOioqMFC+0bvK72b8oG07n7iw9akT9VPmz50auokkrA9B6ioLmEkA
EIE+UyDOG/GeIaINE8ykIBhlT7iLSgxLdkPqOThQvtEVlfeFfooTF5R2fYCZ
BAAR6DMF4rwR7xki2oCZxAJXyfEjfXu7+yoHhjt5o211YsluTj0HG8o3+sTq
O0ur7mePC1JUgl4PMJMAIAJ9pkCZN+I6Q0QbMJNYYCk5TjxWo7Tp8b4LbUql
EMOR3YR6Dm4o3+j9PUsZ44LUlaDXAMwkAIhAnynQ541YzhDRBswkRuguKvqx
GhLjb2Xhlj3b9Rz8WN/owzuLiN9o9rigxLosQ4GZBAAR6DMFmApmwiU7xUU1
eflvQhd0a9FXJ4gAyR939gT5nr6LTZ391k92myS6+El2WdKBmQQAkYLbxN2R
JJL8JUMdkJ0Lv4tqQuEyyj6Su7Ecq6GNtIw7JUG+5+yA31CZvLil+9RQ6G1l
iZ9MlyUdKbJjQQHZA/pMIS1LhgogOy8eF9XybT9jjKJhOVZDGykad6IjLMg+
YbRSJIqfTJclBewmAUAE+kwhRUuGdCB7FKQfq6GNVI/7pt0nQ+OCCtd1UO6Q
avEjAjMJACLQZwqYMxOIZVGoTquPLrv0YzW0kdhxD6V34DJlH8ndWrsGgm6S
XvGjAzMJACLQZwqYM5PD4KVD/sBdRWn10WVXcayGHpI27uy8upy1fviEOY1B
rrf0ih8dmEkAEIE+U8CcmRCC4nUVpdVHl13FsRp6SNS4s2OZPYw2kt16+i4S
75NS8aUAMwkAItBnCpgz4+LLwX2fHVtv/fzPP19vP75Mc1p9dNkVHauhgZTq
fPepIS4zqaH9DPE+YuJrcASHIlD9wAPMJACIQJ8ppHTJkEIssl+/0OU5NqKr
9K6izUyWhsS0eimyqzhWQwMp1fm6Pb1cZtLK2m7ifbjE1+kIDqJ34LJw9QMP
MJMAIAJ9ppDSJUMK+mUnnhaxunoso6UhMa1eiuzqjtVQSkp1/kDPx1xm0sYm
cg1tdvE1O4KJRKx+4AFmEgBEoM8UUrpkSEGz7FcOLvQfp9Vb8i0u15WstHpZ
sqs7VkMdKdX54cvXuMwky6wi3odRfP2OYD/Rqx94gJkEABG6PifB5x4jLPNG
9JCAZKJzubx+oYt46uj+tWO4zCRZafWyZGc/ViM5pNRMspgwp5HdTLLMKuJN
WMQfvHSIso+kyBHsQUr1Aw8wk0AG6CopKCjp8r56vv71glF8v795UeAvA/Q5
CT73JECZNySGBCQTncvl+Zof+20kqzWuv4fLTJKVVi9XdsqxGskpvu2QXjPJ
+muF0UZas/Vw0E1YxC/f/SSjQqqrry6l+oEHmEkg7dyyhjyWjtsIus3r9efz
r3HjtZT8+pwEn3tCCJo35IYEJBNty+U3X31KtJGs1s65myQrrV667Ozny8dO
es0ki8J1HaFmw6SFzZSN31Dxk1BfXVb1Aw8wk0CqGbWG8swc2wwaNYtuv+/W
m+z/Ob/2/NfGo89J8LknB+K8IT0kIJloWy6vDbQEmUk9q/lik2Sl1afaVIhI
qmW/cvW6f4/X3X49byf9YLVQ8ZNQX11W9QMPMJNAanFMn5F/uM2kESvJY/a4
3jTyz7xfEy5w63MSfO6Jwj9vqAgJSCbalssrHywLMpOsVrz5AfYlSVZafapN
hYhkQPagzV6Wbd5Q8ZNQX11W9QMPMJNAaukqcW8OEcKLPO++bQiRjKiR1/Ju
4dbnJPjcE4V/3lAREpBMtC2XX5xtpJhJu8rvZtRJiWn1GTAVhMmG7IPDV9sP
n9vYdHxW6b51249Zf7PQN5EcQsVPQn11WdUPvLeFmQRSD4uZNGolEUwikunk
6HMSfO5JwzNvKAoJSCbalsuvr35EMZOsVlF5X6g2rtjyED0ZkytnMxumghgm
y55jED8J9dVlVT/wADMJpJ9QMynfMCK9nWgmuWH/+tfumnUg61RXV7v/W1VP
C3sg7HVvbImr59HxyK6Us2+PpZhJJ1bfWVp1P0UVl9aMPbTmzsON8/x3bn5v
Y8m2n3nev3zrDxv3rqH0R6fsScNk2Q+wib+o7q85dpP2Najo5/iZTK5/uzW3
7me5Z/Shdy8l8hdAAMKhm0k3LSB/IBL7blISfO5J40D+n1eKQgKSyQGNuwqf
HVtP31CyiwMUkeKUNm28r7fkW9YbBtY++M1XeY4V4ZxNnbInDZNlz7GJn4T6
6lKqH3iQOPQwk0BMBJtJJIuINzYpCT73pOGZNxSFBCQTzcvlUMOzoZbSkTV3
7i27u77i22VV99dtuLe1bMyhNXe63/Dl4D7nhlFyNk02FUyWPccsfhLqq0ev
fuABZhJIPwFmkiscifB+5ky3JPjck4Zn3lAUEpBMNC+Xf7425Dn01mpnwwwn
T/v08Nv23SLmbJpsKpgse45Z/CTUV49e/cADzCSQfkhmUqCN5FzAUTcppWea
q8M/b0g5ECEVxLJcek6/5TWTPmmdbN8nYs6myaaCybLnOMVPQn31KNUPPMBM
AunHbyaRanC7a1ByVuFOgs89UfjnDRUhAckkruXyxuXTn5+uu9I598LWp4Ya
C7jMJOuqnIycTZNNBZNlz/GLn4T66sLVDzzATALpx2cmBVlJgW8KP9MtCT73
5ECcN6SHBCSTJCyXobUCPO2Ls405GXWSkyB7XJgsey7N4kc/phxmEgBEPPqc
BJ97ciDOG9JDApJJQtaLgbUPsptJllmVk5GzmRDZY8Fk2XMpFF/iMeUwkwAg
QtTnJPjckwBl3pAYEpBMErJesNQKsNultj/al0TP2UyI7LFgsuy5tIkv95hy
mEkAEAnS5yT43GOHPm/ICglIJslZL1hqBZzb8P3//PN1+/3RczaTI7t+TJY9
lyrxpR9TDjMJACLQZwopmjOlkxzZibUC3O2jdQ9/dfGY+5KIOZvJkV0/Jsue
S4/4Ko4ph5kEABHoM4W0zJkqSJrsnloB7iIAnuLbucg5m0mTXScmy55Lj/gq
jimHmQQAEegzhbTMmSpIoOzuWgGX971x9WS1ZxPJTZSczQTKrg2TZc+lRHxF
x5TDTAKACPSZQirmTEWkXfYoOZtplz0KJsueS4n40UteEIGZBAAR6DOFVMyZ
isiG7GI5m9mQXQyTZc+lRHxFx5TDTAKACPSZQirmTEVkRnaBnM3MyC6AybLn
UiK+omPKYSYBQAT6TCEVc6YiILuZmCx7LiXiKzqmHGYSAESgzxRSMWcqArKb
icmy59IjvopjymEmAUDEOe8t7o4kkbTMmSqA7GZisuy59Iiv4phyKbJjQQHZ
A/pMIS1zpgogu5mYLHsuVeJLP6Ycu0kAEIE+U0jRnCkdyG4m8cre03exqbPf
+nnj629i6UCKhl76MeUwkwAgAn2mkKI5UzqQ3Uxikb134PLrJW2eU6QnL27p
PjWkuSepG3qJx5TDTAKACPSZQurmTIlAdjPRL3vdnt7nZmzz2EhOW1nb/cWX
N7R1Jo1DL+uYcphJABCBPlNI45wpC8huJppl37T7ZJCB5LTCdR3a+oOhlwKW
FZAloM8UMGeaCWTXQ+/AZco+kru1dg3o6RKGXgpYVkCWgD5TwJxpJpBdD68u
38NiI1ltwpxGPa43DL0UsKyALAF9poA500wguwYss4fRRrJbT99FDb3C0EsB
ywrIEtBnCpgzzQSya6D71BCXmdTQfkZDrzD0UsCyArIE9JkC5kwzgewaqNvT
y2Umrazt1tArDL0UsKyALAF9poA500wgu44P6vmYy0za2CSS5M7dKwy9DLCs
gCwBfaaAOdNMILsGhi9f4zKTLLNKQ68w9FLAsgKyBPSZAuZMM4Hsepgwp5Hd
TLLMKg1dwtBLAcsKyBLQZwqYM80EsuuhqbOf0UZas/Wwni5h6KWAZQVkCegz
BcyZZgLZtVG4riPURpq0sFnbSbgYeilgWQFZAvpMAXOmmUB2bVy5et1/6K27
/Xrezv7zn2rrD4ZeClhWQJYouE3cHUkimDPNBLJrJuj0W83n3uYw9JHBggKy
B/SZAuZMM4Hs+hkcvtp++NzGpuOzSvet236stWtA5yaSA4ZeClhWQJaAPlPA
nGkmkN1YTBYfZhIARKDPFDBnmglkNxaTxYeZBAAR6DMFzJlmAtmNxWTxYSYB
QAT6TAFzpplAdmMxWXyYSQAQgT5TwJxpJpDdWEwWH2YSAESgzxQwZ5oJZDcW
k8WHmQQAEegzBcyZZgLZjcVk8WEmAUAE+kwBc6aZQHZjMU38geHO7r5K6+fX
33wFMwkAItBnCqbNmW4gu5mYLHvOGPEHLx16p/Xp+bXfcbflW3/Yd6FNyv2x
rIAsAX2mYMicSQSym4nJsufMEL/j5OpFdQ95bCSnbe+aev3GZxE/AssKyBLQ
ZwomzJlBQHYzMVn2nAHitx9fFmQgOa2m/cWIn4JlBWQJ6DOFzM+ZFCC7mZgs
ey7r4g9eOkTZR3K3o/21UT4IywrIEtBnCtmeM+lAdjMxWfZc1sUv3/0ki41k
tSX146K43rCsgCwBfaaQ7TmTDmQ3E5Nlz2VafMvsYbSR7DYw3Cn8WVhWQJaA
PlPI8JwZCmQ3E5Nlz2Va/L4LbVxm0vu95cKfhWUFZImC28TdkSSS4TkzFMhu
JibLnsu0+B0nV3OZSdu7pop9EBYUkDGgzxQyPGeGAtnNxGTZc5kWv3ewmctM
2nusSPizsKyALAF9ppDhOTMUyG4mJsuey7T4n35xjstMsswq4c/CsgKyBPSZ
QobnzFAgu5mYLHsu6+IvqR/HbiZZZpXwB2FZAVkC+kwh23MmHchuJibLnsu6
+N19lYw2UlP3jCgfhGUFZAnoM4Vsz5l0ILuZmCx7zgDxa9pfDLWRSnb86Otv
voryKVhWQJaAPlPI/JxJAbKbicmy5wwQ//PrF/2H3rrbiobHhq4cj/gpWFZA
loA+U8j8nEkBspuJybLnjBE/6PRbKefe5rCsgGwBfaZgyJxJBLKbicmy50wS
/5Orfcc/ath7rKiybfzuI4VH+2tb2mtk3RzLCsgS0GcK5syZfiC7mZgse85s
8SXKjmUFZAnoMwXMmWYC2Y3FZPFhJgFABPpMAXOmmUB2YzFZfJhJABCBPlPA
nGkmkN1YTBYfZhIAREL12WSFh+xmYrLsJtsJObPFh5kEABGYSRQgu5lAdmMx
WXyJspv8GEH2UGEm8V6i4SOydEkye5XYS5LZq8ReksxeJfaSZPZKzyWU98NM
AlkCZlLqLklmrxJ7STJ7ldhLktmrxF6SzF7puQRmEjCEAgAAAEAqca9sAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZpqtkNLOzpCvu3sTC
zUdgoOjn618vMHXs3Vr/ev35uLsTEyNPwaSBdw+7eYOf94U3adgBiED+Qmnm
t+fWMzBNbv+CYcySQdB644b/JrdUwCDRCSNviM5D6QEQw54nnYnC818TGDUW
zJoy7EnTNdQGLZkjovpEN0FyN6PLpjmSj8hsjrhufEru/RYAAEj4vykj84gp
3x3HMjDO9UAcZ/Oewm2M0nqbWwaDYWN+U1yzxvk2MIoAEIK0Opj091ZXyS1B
DVssAjB2DTFvCXEU3izNd9uGRjncDBtnAORBMokM/MMak8gIBlpJjt/JLLld
I22W5pPC8cyQ/vaQuwOUjBAcgIiQ5kiYSUZi0ibiKEZmu+WZw0Zpvi8ez5jZ
zpbzdWPD1wEQBrtJtzBqsfBzc8xNG/J8jHG7eb/ehmu+KdPd7U0k90ibmbgA
ACemxyY5GLxYGDnefgxbLv1kX3Yihow70aNuiuwARMLwTDcHU80kA8ORcpS/
DrL/KIw2k0z+qxCOAwBEQd2kEYw0k8y0kW5iGws+B4SJD8MozQ8YdyPEh84D
IAqqcN/EnNnSgZj0Y8xTIEhv5oJhmOabPO6owg2AODjTzbDFIhdsJZnzFHC8
1U3M03yjx93I1E4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AEn8/3f22IY=
    "], {{0, 362}, {781, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{616.0000000000002, Automatic},
  ImageSizeRaw->{781, 362},
  PlotRange->{{0, 781}, {0, 362}}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.7284790911263466`*^9},ExpressionUUID->"488337c8-8267-4883-93ec-\
c2d47c3e707d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxdUylMQ0EU/EEhKyBBIFpCCGkIoZRylnZ73xyFogkJBoPCP43HVxeNR+Px
aBQGT+nMNNm3yc9kdt4x+3Z/5u5xeL+QJElx+v0j1k95BmEYuBFGsyW+GF4n
0/VwRZ6C/it9CZi+IV9BfHZEvgocKz8NtEvyNeDtNfk6ufQN1le/TfRfviDP
gr9J3wJ+KX+bKH0H/r6l55BfEN91/fKMl/89+pffAvQPxe+zv/iB83PIfOlH
nJf0Y+I58QT+nhRfJCr+FPqneInzUXwZ+C49MJ7zs+D8VeJ5WoX7qlfleRlv
VTePGvM5L6u591MHf1Z+3flrcB7q32A96U3nvwmcv99WfJ/WiuslbfCJ/LWB
Y9XvxP2sw/novXX5/qV3ua/z9+L7sh77qX4f+gvv1/rufxtwXjrfwL2Ps/l9
/wFQJLi/
       "]],
      FontSize->18]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQEf7P9lW16e/JzbASrgMNN6o/+97zA+h0N7tebe
+BM8UL6Ag0Xfqq7HBTC+iMPtedGudTv5oHwJh4PhltbOvDC+jMPCMxdTzryH
qVdw4El6WeAQDDNfyeHn4pgW1hpeKF/F4do2/iBLK5i8msPjDYuNhc7D+BoO
8s5V55SMuKB8LYc7H6477nSAma/jEJJevP3sXJh6PYdVPhEvqrbB+AYOzz7f
f8K5DMY3dHgevLhjmwSMb4Rmn7HDFfYlnUvUYO4zcVgRLLBHeTKMb+rAN6Wv
5EIAzH4zhwNh69rvJcD45mjusXBomPfsY5gETN7S4Yhje5S/AEzeymH1xmny
ads5oXxrB8fr/P42AjD1Ng4/VB2yZryD+d/WIT55qUj/VJh+O4eAwFKDR8dg
fHuHHXN407haYXwHh2mP9AS2n4Hqb3BAc58jang2OKKFn5PDzqcOv3x7ofwG
J7TwcHaoal1b1PQfpt8ZLf24OBz+EsA/ORqm3wXNfa4O8xZmnbO/DpN3dUh8
cD70SA1M3g3N/W4OqOnXHTU+G9xRzWPwcDhnnlez4jvMfR4Ozyab7jDIgcl7
otrX4Onw511ypvFVWHh7OXw4JDPfeR1M3sth/x0PCVszmP+9UeOrwdshYbXH
8eoSmPk+DoV7DzLxfoXGb4MPWn7zdXj73POjaznMf75o6cMPHt8A05TzDQ==

       "]],
      FontSize->18]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontSize -> 18, 
    PointSize[Large]},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->{781, 353},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 88.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7280572702942734`*^9, 3.7280572895297923`*^9}, 
   3.7280882774989476`*^9, 3.728098423345604*^9, 3.7281255605034666`*^9, 
   3.728127424488126*^9, 3.7281300407472687`*^9, 3.7281320684715233`*^9, 
   3.728135045788927*^9, 
   3.72847909126698*^9},ExpressionUUID->"5df289e1-fe1b-4b2b-9c2b-\
bae2f67a061f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show representative Background Subtraction", "Section",
 CellChangeTimes->{{3.725763684461254*^9, 3.725763685685671*^9}, {
   3.726672421746993*^9, 3.726672434576843*^9}, 
   3.7266724934394293`*^9},ExpressionUUID->"ebaf347c-5e30-4607-a606-\
77b875b52f2f"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      RowBox[{"pumpStyle", "=", "1"}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"energy", "=", "1"}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"runNumber", "=", "2"}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xAxisLabel", "=", "\"\<Retarder Position (60=1 Rev)\>\""}], 
      ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imageRes", "=", "100"}], ";"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"averageDarkCounts", "=", 
       RowBox[{"GetAverageCountRateFromFileNames", "[", 
        RowBox[{
         RowBox[{"darkFiles", "[", 
          RowBox[{"[", "pumpStyle", "]"}], "]"}], "[", 
         RowBox[{"[", "energy", "]"}], "]"}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"molyFileNames", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"molyFiles", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#cat2", "\[Equal]", 
              RowBox[{"pumpLights", "[", 
               RowBox[{"[", "pumpStyle", "]"}], "]"}]}], "&"}], "]"}], "]"}], 
          "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#cat1", "\[Equal]", 
              RowBox[{"energies", "[", 
               RowBox[{"[", "energy", "]"}], "]"}]}], "&"}], "]"}], ",", 
           "\"\<fileNames\>\""}], "]"}], "]"}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"molyFile", "=", 
       RowBox[{"ImportFile", "[", 
        RowBox[{"molyFileNames", "[", 
         RowBox[{"[", "runNumber", "]"}], "]"}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dwell", "=", 
       RowBox[{
        RowBox[{"molyFile", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#DWELL(s):\>\"", "]"}]}], 
      ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"currentScale", "=", 
       RowBox[{
        RowBox[{"molyFile", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#SCALE:\>\"", "]"}]}], 
      ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"countRateData", "=", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"molyFile", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}], "]"}], "/", 
        "dwell"}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"currentData", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{"molyFile", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "\"\<CURRENT\>\""}], "]"}], "]"}], "]"}], "*", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "currentScale"}], ")"}]}], "/", "nA"}]}], "]"}]}], 
      ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"molyMinusDark", "=", 
       RowBox[{"countRateData", "-", 
        RowBox[{"averageDarkCounts", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"molyMinusDarkPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Legended", "[", 
            RowBox[{
             RowBox[{"averageDarkCounts", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             "\"\<Dark Counts\\n(4 run average)\>\""}], "]"}], ",", 
           RowBox[{"Legended", "[", 
            RowBox[{
            "countRateData", ",", 
             "\"\<Representative\\nMoly Count Rate\>\""}], "]"}], ",", 
           RowBox[{"Legended", "[", 
            RowBox[{"molyMinusDark", ",", "\"\<Moly Minus Dark\>\""}], 
            "]"}]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Moly Count Dark Subtraction\>\""}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"xAxisLabel", ",", "\"\<Count Rate\>\""}], "}"}]}]}], 
        "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"molyCurrentPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"currentData", ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Representative Moly Current\>\""}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"xAxisLabel", ",", "\"\<Current (nA)\>\""}], "}"}]}]}], 
        "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"molyMinusDarkCurrentNorm", "=", 
       RowBox[{"molyMinusDark", "/", "currentData"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"molyMinusDarkCurrentNormPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"molyMinusDarkCurrentNorm", ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<Moly Minus Dark, Current Normalized\>\""}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "xAxisLabel", ",", 
            "\"\<Count Rate, Current Normalized (Hz/nA)\>\""}], "}"}]}]}], 
        "]"}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"signalFileNames", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"signalFiles", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#cat2", "\[Equal]", 
              RowBox[{"pumpLights", "[", 
               RowBox[{"[", "pumpStyle", "]"}], "]"}]}], "&"}], "]"}], "]"}], 
          "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#cat1", "\[Equal]", 
              RowBox[{"energies", "[", 
               RowBox[{"[", "energy", "]"}], "]"}]}], "&"}], "]"}], ",", 
           "\"\<fileNames\>\""}], "]"}], "]"}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"signalFile", "=", 
       RowBox[{"ImportFile", "[", 
        RowBox[{"signalFileNames", "[", 
         RowBox[{"[", "runNumber", "]"}], "]"}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dwell", "=", 
       RowBox[{
        RowBox[{"signalFile", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#DWELL(s):\>\"", "]"}]}], 
      ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"currentScale", "=", 
       RowBox[{
        RowBox[{"signalFile", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#SCALE:\>\"", "]"}]}], 
      ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mTorrHe", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"signalFile", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#CVGauge(He)(Torr):\>\"", 
         "]"}], "/", "mTorr"}]}], ";"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"countRateData", "=", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"signalFile", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}], "]"}], "/", 
        "dwell"}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"currentData", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{"signalFile", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "\"\<CURRENT\>\""}], "]"}], "]"}], "]"}], "*", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "currentScale"}], ")"}]}], "/", "nA"}]}], "]"}]}], 
      ";"}], "\[IndentingNewLine]", "20.5", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"signalMinusDark", "=", 
       RowBox[{"countRateData", "-", 
        RowBox[{"averageDarkCounts", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"signalMinusDarkPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Legended", "[", 
            RowBox[{"countRateData", ",", "\"\<Raw Signal\\nCounts\>\""}], 
            "]"}], ",", 
           RowBox[{"Legended", "[", 
            RowBox[{
            "signalMinusDark", ",", "\"\<Raw Signal\\nMinus Dark\>\""}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Signal Minus Dark Counts\>\""}],
          ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"xAxisLabel", ",", "\"\<Count Rate (Hz)\>\""}], "}"}]}]}], 
        "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"signalCurrentPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"currentData", ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Representative Signal Current\>\""}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"xAxisLabel", ",", "\"\<Current (nA)\>\""}], "}"}]}]}], 
        "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"signalMinusMoly", "=", 
       RowBox[{
        RowBox[{"signalMinusDark", "/", "currentData"}], "-", 
        "molyMinusDarkCurrentNorm"}]}], " ", ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"signalCurrentNormSubtractionPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Legended", "[", 
            RowBox[{
             RowBox[{"signalMinusDark", "/", "currentData"}], ",", 
             "\"\<Signal Minus Dark,\\nCurrent Normalized\>\""}], "]"}], ",", 
           RowBox[{"Legended", "[", 
            RowBox[{
            "molyMinusDarkCurrentNorm", ",", 
             "\"\<Moly Counts,\\nCurrent Normalized\>\""}], "]"}], ",", 
           RowBox[{"Legended", "[", 
            RowBox[{
            "signalMinusMoly", ",", 
             "\"\<Signal Minus Moly,\\nCurrent Normalized\>\""}], "]"}]}], 
          "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Signal Background Subtraction\>\""}], 
         ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "xAxisLabel", ",", 
            "\"\<Count Rate, Current Normalized (Hz/nA)\>\""}], "}"}]}]}], 
        "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"grid", "=", 
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"molyMinusDarkPlot", ",", "signalMinusDarkPlot"}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"molyCurrentPlot", ",", "signalCurrentPlot"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
           "molyMinusDarkCurrentNormPlot", ",", 
            "signalCurrentNormSubtractionPlot"}], "}"}]}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1510", ",", "Automatic"}], "}"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"signalMinusMolyHeNormalized", "=", 
       RowBox[{"signalMinusMoly", "/", "mTorrHe"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{"finalPlot", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"Legended", "[", 
        RowBox[{
        "signalMinusMolyHeNormalized", ",", 
         "\"\<Signal Counts, background subtracted,\\n helium pressure \
normalized.\>\""}], "]"}], "]"}]}], "\[IndentingNewLine]", 
     RowBox[{"fc", "=", 
      RowBox[{"DFT", "[", "signalMinusMolyHeNormalized", "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sine", "=", "1"}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cosine", "=", "2"}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"signal", "=", "1"}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"error", "=", "2"}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sin", "=", 
       RowBox[{
        RowBox[{"fc", "[", 
         RowBox[{"[", "sine", "]"}], "]"}], "[", 
        RowBox[{"[", "signal", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cos", "=", 
       RowBox[{
        RowBox[{"fc", "[", 
         RowBox[{"[", "cosine", "]"}], "]"}], "[", 
        RowBox[{"[", "signal", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sinBar", "=", 
       RowBox[{"BarChart", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"sin", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "11"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Sin Fourier Coefficients\>\""}],
          ",", 
         RowBox[{"ChartLabels", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(S\), \(1\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(S\), \(2\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(S\), \(3\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(S\), \(4\)]\)\>\"", ",", 
            "\"\<etc.\>\""}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cosBar", "=", 
       RowBox[{"BarChart", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"cos", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "11"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Cos Fourier Coefficients\>\""}],
          ",", 
         RowBox[{"ChartLabels", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(C\), \(1\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(C\), \(2\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(C\), \(3\)]\)\>\"", ",", 
            "\"\<\!\(\*SubscriptBox[\(C\), \(4\)]\)\>\"", ",", 
            "\"\<etc.\>\""}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{"fcPlot", "=", 
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "sinBar", "}"}], ",", 
         RowBox[{"{", "cosBar", "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"recreation", "[", "\[Theta]_", "]"}], ":=", 
       RowBox[{
        RowBox[{"cos", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"cos", "[", 
          RowBox[{"[", "3", "]"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"\[Theta]", "*", 
             RowBox[{"\[Pi]", "/", "30"}]}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"sin", "[", 
          RowBox[{"[", "3", "]"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"\[Theta]", "*", 
             RowBox[{"\[Pi]", "/", "30"}]}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"cos", "[", 
          RowBox[{"[", "5", "]"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"4", 
           RowBox[{"(", 
            RowBox[{"\[Theta]", "*", 
             RowBox[{"\[Pi]", "/", "30"}]}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"sin", "[", 
          RowBox[{"[", "5", "]"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"4", 
           RowBox[{"(", 
            RowBox[{"\[Theta]", "*", 
             RowBox[{"\[Pi]", "/", "30"}]}], ")"}]}], "]"}]}]}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{"simulation", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"recreation", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "60"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"samplePol", "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"finalPlot", ",", "simulation"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Example Polarization Data\>\""}],
         ",", 
        RowBox[{"FrameLabel", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Polarimeter Position (60= 1 rev)\>\"", ",", 
           "\"\<BS, Normalized Count Rate \
(Hz/nA/\!\(\*SubscriptBox[\(mTorr\), \(He\)]\))\>\""}], "}"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"SetDirectory", "[", 
      RowBox[{
       RowBox[{"ParentDirectory", "[", "]"}], "<>", "\"\</analysis\>\""}], 
      "]"}], "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<samplePolarization.png\>\"", ",", "samplePol", ",", 
       RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<sampleFC.png\>\"", ",", "fcPlot", ",", 
       RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<backGroundSubtractionSample.png\>\"", ",", "grid", ",", 
       RowBox[{"ImageResolution", "\[Rule]", "100"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"SetDirectory", "[", 
      RowBox[{
       RowBox[{"ParentDirectory", "[", "]"}], "<>", "\"\</data\>\""}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"PlotRawPolFromFileName", "[", 
          RowBox[{
           RowBox[{"molyFiles", "[", "\"\<noPump\>\"", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
         "molyExample"}], "=", 
        RowBox[{"GetCurrentNormalizedMolyCountRateFromFileNames", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"molyFiles", "[", "\"\<noPump\>\"", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "darkCounts"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"molyExample", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Example set of Moly Counts\>\""}]}], 
        "]"}]}], "\[IndentingNewLine]", "*)"}]}], "\[Placeholder]"}
  }]], "Input",
 CellChangeTimes->{{3.7266724951587095`*^9, 3.7266725312952604`*^9}, {
   3.7266727488727117`*^9, 3.726673056259226*^9}, {3.726673104932276*^9, 
   3.7266731548601785`*^9}, {3.726673197155734*^9, 3.7266732086179304`*^9}, {
   3.7266732528647056`*^9, 3.7266734763739777`*^9}, {3.7266736013820715`*^9, 
   3.7266739121331124`*^9}, {3.72667395461569*^9, 3.726674065565534*^9}, {
   3.726674940534373*^9, 3.726675102902626*^9}, {3.726675206601018*^9, 
   3.7266752144482965`*^9}, {3.726675299815723*^9, 3.7266754808244877`*^9}, {
   3.7266755786554637`*^9, 3.726675620367405*^9}, {3.7266757031371064`*^9, 
   3.72667574922323*^9}, {3.7266759181758785`*^9, 3.726676108688486*^9}, {
   3.726683645526003*^9, 3.726683648378813*^9}, {3.726684446857433*^9, 
   3.726684592307459*^9}, {3.726684638571123*^9, 3.7266846414590015`*^9}, {
   3.726684723700914*^9, 3.7266847326042747`*^9}, {3.726684786195927*^9, 
   3.7266849304857693`*^9}, {3.7266850163500137`*^9, 3.726685066566268*^9}, {
   3.7266857293879128`*^9, 3.7266858070908117`*^9}, {3.726685838316329*^9, 
   3.7266858615797386`*^9}, {3.726685914545969*^9, 3.7266859410183725`*^9}, {
   3.726686015042138*^9, 3.7266860628271523`*^9}, {3.7266860957375956`*^9, 
   3.72668635478604*^9}, {3.726686386451869*^9, 3.7266863941227283`*^9}, {
   3.726686430460265*^9, 3.726686454162905*^9}, {3.7266865182127905`*^9, 
   3.72668655384307*^9}, {3.726686622741869*^9, 3.726686622885934*^9}, {
   3.726686715860382*^9, 3.72668672123577*^9}, {3.7266867666997414`*^9, 
   3.7266867802352037`*^9}, 3.726686833837055*^9, {3.7266869634022555`*^9, 
   3.7266870317067566`*^9}, {3.7266871199237747`*^9, 
   3.7266871310017753`*^9}, {3.726687239395609*^9, 3.7266872768022566`*^9}, {
   3.726687515310354*^9, 3.7266875314416804`*^9}, {3.726687574139863*^9, 
   3.7266876944417906`*^9}, {3.7266888401887627`*^9, 3.726688840313633*^9}, {
   3.7266889288990583`*^9, 3.726688940680721*^9}, {3.7266895169388995`*^9, 
   3.7266895174886427`*^9}, {3.726832506955655*^9, 3.726832640987732*^9}, 
   3.7268326843339663`*^9, {3.7268327718873935`*^9, 3.7268328028581376`*^9}, {
   3.7268329513512893`*^9, 3.7268329645865116`*^9}, {3.726833045988769*^9, 
   3.726833050926586*^9}, {3.726838568944766*^9, 3.7268386456488495`*^9}, {
   3.7268387672814417`*^9, 3.7268388714181547`*^9}, {3.7268389053001614`*^9, 
   3.7268389116014414`*^9}, {3.726839013019945*^9, 3.7268390439471207`*^9}, {
   3.7268390799082375`*^9, 3.7268391425586586`*^9}, {3.7268392500629272`*^9, 
   3.72683925795665*^9}, {3.726839314350801*^9, 3.726839320598029*^9}, {
   3.7268398036086597`*^9, 3.7268398558889184`*^9}, {3.7268398907632494`*^9, 
   3.7268399508021297`*^9}, {3.7268400635717897`*^9, 
   3.7268401126096087`*^9}, {3.72684017894862*^9, 3.7268402000167427`*^9}, {
   3.7268402397381086`*^9, 3.726840302680776*^9}, {3.7268403496777983`*^9, 
   3.7268405703958654`*^9}, {3.726840817853302*^9, 3.7268408284927497`*^9}, {
   3.7268408681758504`*^9, 3.7268408811325226`*^9}, {3.726840999960122*^9, 
   3.726841019228114*^9}, {3.726841109845543*^9, 3.726841192491678*^9}, {
   3.7268412750451717`*^9, 3.726841298397957*^9}, {3.726841442888298*^9, 
   3.72684146828638*^9}, {3.726841539832131*^9, 3.7268416268871193`*^9}, {
   3.7268416888410254`*^9, 3.7268417016074257`*^9}, 3.7268417701686506`*^9, {
   3.7268420838119507`*^9, 3.7268421608808813`*^9}, {3.7268422081353865`*^9, 
   3.726842247527932*^9}, {3.7268423127776995`*^9, 3.726842322224825*^9}, {
   3.7268423926605663`*^9, 3.726842528986407*^9}, {3.726842602765038*^9, 
   3.7268426430012136`*^9}, {3.726844642813402*^9, 3.7268446509702826`*^9}, {
   3.7268447343662925`*^9, 3.72684473462665*^9}, {3.7280575164339075`*^9, 
   3.728057568186984*^9}, {3.728057615892952*^9, 3.7280576887723017`*^9}, 
   3.7280578189675245`*^9, {3.728057867329937*^9, 
   3.7280578675330696`*^9}},ExpressionUUID->"51edf456-7627-4835-9398-\
436572c52737"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"colorBlindPallete", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"230", "/", "255"}], ",", 
       RowBox[{"159", "/", "255"}], ",", "0"}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"86", "/", "255"}], ",", 
       RowBox[{"180", "/", "255"}], ",", 
       RowBox[{"233", "/", "255"}]}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"0", "/", "255"}], ",", 
       RowBox[{"158", "/", "255"}], ",", 
       RowBox[{"115", "/", "255"}]}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"240", "/", "255"}], ",", 
       RowBox[{"228", "/", "255"}], ",", 
       RowBox[{"66", "/", "255"}]}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"0", "/", "255"}], ",", 
       RowBox[{"114", "/", "255"}], ",", 
       RowBox[{"178", "/", "255"}]}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"213", "/", "255"}], ",", 
       RowBox[{"94", "/", "255"}], ",", 
       RowBox[{"0", "/", "255"}]}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"204", "/", "255"}], ",", 
       RowBox[{"121", "/", "255"}], ",", 
       RowBox[{"167", "/", "255"}]}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"0", "/", "255"}], ",", 
       RowBox[{"0", "/", "255"}], ",", 
       RowBox[{"0", "/", "255"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
       RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"BarChart", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
       RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stokesNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<p0\>\"", ",", "\"\<p1\>\"", ",", "\"\<p2\>\"", ",", "\"\<p3_mag\>\"",
      ",", "\"\<p3_c2\>\"", ",", "\"\<p3_s2\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stokesErrNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<p0err\>\"", ",", "\"\<p1err\>\"", ",", "\"\<p2err\>\"", ",", 
     "\"\<p3_magerr\>\"", ",", "\"\<p3_c2err\>\"", ",", "\"\<p3_s2err\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nA", "=", "1*^-9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mTorr", "=", "1*^-3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha", "=", 
   RowBox[{"20.4", "*", 
    RowBox[{"\[Pi]", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta", "=", 
   RowBox[{"68.7", "*", 
    RowBox[{"\[Pi]", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deltaAB", "=", 
   RowBox[{"alpha", "-", "beta"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"delta", "=", 
    RowBox[{"94.54", "*", 
     RowBox[{"\[Pi]", "/", "180"}]}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Munir", "'"}], "s", " ", "reported", " ", "1.66", " ", "plus", 
     " ", "or", " ", "minus", " ", ".01"}], "*)"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaOld", "=", 
   RowBox[{"3.2", "*", 
    RowBox[{"\[Pi]", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"betaOld", "=", 
   RowBox[{
    RowBox[{"-", "6.95"}], "*", 
    RowBox[{"\[Pi]", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rev", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenerateListOfFileNames", "[", 
     RowBox[{"prefix_", ",", "date_", ",", "runtimes_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"j", ",", "fileNames"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fileNames", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "runtimes", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"fileNames", ",", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"prefix", ",", "date", ",", "\"\<_\>\"", ",", 
             RowBox[{"ToString", "[", 
              RowBox[{"runtimes", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", "\"\<.dat\>\""}], 
            "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "fileNames"}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "If", " ", "given", " ", "a", " ", "list", " ", "of", " ", "files"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
    RowBox[{"files_", ",", "timestamp_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "index"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "files", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringContainsQ", "[", " ", 
           RowBox[{
            RowBox[{"files", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "timestamp"}], "]"}], ",", 
          RowBox[{"index", "=", "i"}]}], "]"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "index"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFileHeaderInfo", "[", "dataFileName_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rawFile", ",", "data", ",", "association", ",", "k"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rawFile", "=", 
       RowBox[{"Import", "[", "dataFileName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"data", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"association", "=", 
       RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringPart", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"rawFile", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "\[Equal]", 
         "\"\<#\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"rawFile", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], ">", " ", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"association", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"association", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"rawFile", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"DeleteCases", "[", 
                   RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"rawFile", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "Null"}], 
                   "]"}], "]"}], "]"}]}]}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"association", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"association", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"rawFile", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
                RowBox[{
                 RowBox[{"rawFile", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "association"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFileDataset", "[", "dataFileName_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawFile", ",", "headerStrippedData", ",", "columnHeaderLineNumber", 
       ",", "lastColumnToImport", ",", "j", ",", "k", ",", "ass", ",", 
       "tabularData", ",", "ds", ",", "rbAbsorptionRef", ",", 
       "rbAbsorptionPro"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rawFile", "=", 
       RowBox[{"Import", "[", "dataFileName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringPart", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"rawFile", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "\[Equal]", 
         "\"\<#\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"headerStrippedData", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"rawFile", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", "All"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tabularData", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "2"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "headerStrippedData", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"headerStrippedData", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ass", "=", 
            RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k", "=", "1"}], ",", 
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", 
               RowBox[{"headerStrippedData", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ass", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"ass", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"headerStrippedData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
                  RowBox[{
                   RowBox[{"headerStrippedData", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"tabularData", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"tabularData", ",", "ass"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ds", " ", "=", 
       RowBox[{"Dataset", "[", "tabularData", "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImportFile", "[", "dataFileName_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"GetFileHeaderInfo", "[", "dataFileName", "]"}], ",", 
    RowBox[{"GetFileDataset", "[", "dataFileName", "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"GetFileDataset", ",", "Listable"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"GetFileHeaderInfo", ",", "Listable"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"ImportFile", ",", "Listable"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FourierFit", "[", 
     RowBox[{"list_", ",", "rev_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "fit", ",", "function", ",", "dataPts", ",", "stepSize", ",", 
        "dataPtsPerRev", ",", "angles", ",", "data"}], 
       RowBox[{"(*", 
        RowBox[{",", "C0", ",", "C2", ",", "C4", ",", "S2", ",", "S4"}], 
        "*)"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"function", "[", "\[Theta]_", "]"}], "=", " ", 
        RowBox[{"C0", "+", 
         RowBox[{"C2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"C4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", 
            RowBox[{"(", 
             RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"S2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"S4", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"4", 
            RowBox[{"(", 
             RowBox[{"\[Theta]", "+", "\[Theta]o"}], ")"}]}], "]"}]}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"dataPts", "=", 
        RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dataPtsPerRev", "=", 
        RowBox[{"dataPts", "/", "rev"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"angles", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "\[Pi]", "*", "rev"}], ")"}], "-", 
           RowBox[{"2", 
            RowBox[{"\[Pi]", "/", "dataPtsPerRev"}]}]}], ",", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "dataPtsPerRev"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"list", ",", "angles"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fit", "=", 
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{"data", ",", 
          RowBox[{"function", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"C0", ",", "1000"}], "}"}], ",", "C2", ",", "C4", ",", 
            "S2", ",", "S4", ",", "\[Theta]o"}], "}"}], ",", "\[Theta]"}], 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DFT", "[", 
     RowBox[{"list_", ",", 
      RowBox[{"rev_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "numItems", ",", "i", ",", "k", ",", "j", ",", "reconstructionCos", 
        ",", "reconstructionSin", ",", "returnCos", ",", "errorsCos", ",", 
        "returnSin", ",", "errorsSin", ",", "intensity"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"returnCos", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"errorsCos", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"returnSin", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"errorsSin", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"reconstructionCos", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"reconstructionSin", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"numItems", "=", 
        RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "0"}], ",", 
         RowBox[{"j", "<", 
          RowBox[{"numItems", "/", "2"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"returnCos", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"returnSin", ",", "0"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<=", "numItems"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"intensity", "=", 
           RowBox[{"list", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", " ", "[", 
           RowBox[{
            RowBox[{"k", "=", "0"}], ",", 
            RowBox[{"k", "<", 
             RowBox[{"numItems", "/", "2"}]}], ",", 
            RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"k", "\[Equal]", "0"}], " ", "||", 
                RowBox[{"k", "\[Equal]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"numItems", "/", "2"}], "-", "1"}], ")"}]}]}], ",",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"returnCos", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                 RowBox[{"N", "[", 
                  RowBox[{
                   RowBox[{"returnCos", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                   RowBox[{
                    FractionBox["1", "numItems"], "*", "intensity", "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    "2", "*", "\[Pi]", " ", "*", "k", " ", "*", "rev", "*", 
                    " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], "]"}]}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"returnSin", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                 RowBox[{"N", "[", 
                  RowBox[{
                   RowBox[{"returnSin", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                   RowBox[{
                    FractionBox["1", "numItems"], "*", "intensity", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    "2", "*", "\[Pi]", " ", "*", "k", " ", "*", "rev", "*", 
                    " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], "]"}]}]}], 
                  "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"returnCos", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                 RowBox[{"N", "[", 
                  RowBox[{
                   RowBox[{"returnCos", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                   RowBox[{
                    FractionBox["2", "numItems"], "*", "intensity", "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    "2", "*", "\[Pi]", " ", "*", "k", "*", " ", "rev", " ", 
                    "*", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], "]"}]}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"returnSin", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], "=", 
                 RowBox[{"N", "[", 
                  RowBox[{
                   RowBox[{"returnSin", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}], "+", 
                   RowBox[{
                    FractionBox["2", "numItems"], "*", "intensity", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    "2", "*", "\[Pi]", " ", "*", "k", "*", " ", "rev", " ", 
                    "*", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "numItems"]}], "]"}]}]}], 
                  "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "0"}], ",", 
           RowBox[{"j", "<", 
            RowBox[{"numItems", "/", "2"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"errorsSin", ",", "0"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"errorsCos", ",", "0"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<=", "numItems"}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"intensity", "=", 
                RowBox[{"list", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"reconstructionCos", ",", "0"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"reconstructionSin", ",", "0"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"reconstructionCos", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"intensity", "/", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", "*", "\[Pi]", "*", "j", "*", "rev", "*", 
                   FractionBox[
                    RowBox[{"(", "i", ")"}], "numItems"]}], "]"}]}]}], " ", 
               ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"j", "\[Equal]", "0"}], ",", 
                 RowBox[{
                  RowBox[{"reconstructionSin", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "=", "0"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"reconstructionSin", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                   RowBox[{"intensity", "/", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    "2", "*", "\[Pi]", "*", "1.0001", "*", "j", "*", "rev", 
                    "*", 
                    FractionBox[
                    RowBox[{"(", "i", ")"}], "numItems"]}], "]"}]}]}], 
                  ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", " ", "[", 
                RowBox[{
                 RowBox[{"k", "=", "0"}], ",", 
                 RowBox[{"k", "<", 
                  RowBox[{"numItems", "/", "2"}]}], ",", 
                 RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"k", "\[NotEqual]", "j"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"reconstructionCos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"returnCos", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "*", "\[Pi]", "*", "k", "*", "rev", "*", 
                    FractionBox[
                    RowBox[{"(", "i", ")"}], "numItems"]}], "]"}]}], " ", "+", 
                    RowBox[{
                    RowBox[{"returnSin", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", "*", "\[Pi]", "*", "k", "*", "rev", "*", 
                    FractionBox[
                    RowBox[{"(", "i", ")"}], "numItems"]}], "]"}]}]}], " ", 
                    ")"}], "/", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "*", "\[Pi]", "*", "j", "*", "rev", "*", 
                    FractionBox[
                    RowBox[{"(", "i", ")"}], "numItems"]}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"j", "\[Equal]", "0"}], ",", 
                    RowBox[{
                    RowBox[{"reconstructionSin", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", "0"}], ",", 
                    RowBox[{
                    RowBox[{"reconstructionSin", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"returnCos", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "*", "\[Pi]", "*", "k", "*", "rev", "*", 
                    FractionBox[
                    RowBox[{"(", "i", ")"}], "numItems"]}], "]"}]}], " ", "+", 
                    RowBox[{
                    RowBox[{"returnSin", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", "*", "\[Pi]", "*", "k", "*", "rev", "*", 
                    FractionBox[
                    RowBox[{"(", "1", ")"}], "numItems"]}], "]"}]}]}], " ", 
                    ")"}], "/", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    "2", "*", "\[Pi]", "*", "1.0001", "*", "j", "*", "rev", 
                    "*", 
                    FractionBox[
                    RowBox[{"(", "i", ")"}], "numItems"]}], "]"}]}]}]}], 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"errorsSin", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", "+", "1"}], "]"}], "]"}], "+=", 
                RowBox[{"Power", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"reconstructionSin", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                   RowBox[{"returnSin", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"errorsCos", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", "+", "1"}], "]"}], "]"}], "+=", 
                RowBox[{"Power", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"reconstructionCos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                   RowBox[{"returnCos", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ",", "2"}], 
                 "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"errorsSin", "[", 
              RowBox[{"[", 
               RowBox[{"j", "+", "1"}], "]"}], "]"}], "=", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"errorsSin", "[", 
                RowBox[{"[", 
                 RowBox[{"j", "+", "1"}], "]"}], "]"}], "/", "numItems"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"errorsCos", "[", 
              RowBox[{"[", 
               RowBox[{"j", "+", "1"}], "]"}], "]"}], "=", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"errorsCos", "[", 
                RowBox[{"[", 
                 RowBox[{"j", "+", "1"}], "]"}], "]"}], "/", "numItems"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"returnSin", ",", "errorsSin"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"returnCos", ",", "errorsCos"}], "}"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StokesParametersFromFourierCoefficients", "[", 
     RowBox[{"fc_", 
      RowBox[{"(*", 
       RowBox[{"Fourrier", " ", "Coefficients"}], "*)"}], ",", 
      RowBox[{"rev_:", "rev"}], ",", 
      RowBox[{"alpha_:", "alpha"}], ",", 
      RowBox[{"beta0_:", "beta"}], ",", 
      RowBox[{"delta_:", "delta"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c0", ",", "c2", ",", "c4", ",", "s2", ",", "s4", ",", "stokes"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stokes", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c0", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"fc", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c2", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"fc", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c4", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"fc", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"s2", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"fc", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"s4", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"fc", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stokes", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{"c0", "-", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", "delta", "]"}]}], 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "delta", "]"}]}]], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"c4", "*", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"4", " ", "alpha"}], "+", 
               RowBox[{"4", " ", "beta0"}]}], "]"}]}], "+", 
            RowBox[{"s4", "*", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"4", " ", "alpha"}], "+", 
               RowBox[{"4", " ", "beta0"}]}], "]"}]}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stokes", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{
         FractionBox["2", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "delta", "]"}]}], ")"}]], "*", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"c4", "*", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", "alpha"}], " ", "+", " ", 
               RowBox[{"4", " ", "beta0"}]}], "]"}]}], "+", 
            RowBox[{"s4", "*", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", "alpha"}], " ", "+", " ", 
               RowBox[{"4", " ", "beta0"}]}], "]"}]}]}], ")"}], 
          RowBox[{"stokes", "[", 
           RowBox[{"[", "1", "]"}], "]"}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stokes", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "=", 
        RowBox[{
         FractionBox["2", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "delta", "]"}]}], ")"}]], "*", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s4", "*", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", "alpha"}], " ", "+", " ", 
               RowBox[{"4", " ", "beta0"}]}], "]"}]}], "-", 
            RowBox[{"c4", "*", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", "alpha"}], " ", "+", " ", 
               RowBox[{"4", " ", "beta0"}]}], "]"}]}]}], ")"}], 
          RowBox[{"stokes", "[", 
           RowBox[{"[", "1", "]"}], "]"}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stokes", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "=", 
        FractionBox[
         RowBox[{"Sqrt", "[", 
          RowBox[{
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["s2", "2"]}], "]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", "delta", "]"}], "2"], 
          RowBox[{"stokes", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stokes", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "=", 
        FractionBox["c2", 
         RowBox[{
          RowBox[{"Sin", "[", "delta", "]"}], 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", " ", "alpha"}], " ", "+", " ", 
            RowBox[{"4", " ", "beta0"}]}], "]"}], 
          RowBox[{"stokes", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stokes", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "=", 
        FractionBox[
         RowBox[{"-", "s2"}], 
         RowBox[{
          RowBox[{"Sin", "[", "delta", "]"}], 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", " ", "alpha"}], " ", "+", " ", 
            RowBox[{"4", " ", "beta0"}]}], "]"}], 
          RowBox[{"stokes", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]]}], ";", "\[IndentingNewLine]", 
       "stokes"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StokesParametersFromRawFourierData", "[", 
     RowBox[{"intensityArray_", ",", 
      RowBox[{"rev_:", "rev"}], ",", 
      RowBox[{"alpha_:", "alpha"}], ",", 
      RowBox[{"beta0_:", "beta"}], ",", 
      RowBox[{"delta_:", "delta"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fc", 
        RowBox[{"(*", 
         RowBox[{"Fourrier", " ", "Coefficients"}], "*)"}], ",", "c0", ",", 
        "c2", ",", "c4", ",", "s2", ",", "s4", ",", "stokes"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fc", "=", 
        RowBox[{"DFT", "[", 
         RowBox[{"intensityArray", ",", "rev"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"StokesParametersFromFourierCoefficients", "[", 
        RowBox[{"fc", ",", "rev", ",", "alpha", ",", "beta0", ",", "delta"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StokesParametersFromPolFile", "[", 
     RowBox[{
     "polFile_", ",", "alpha_", ",", "beta0_", ",", "delta_", ",", "rev_"}], 
     "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"intensityArray", ",", "f"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"intensityArray", "=", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"polFile", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"StokesParametersFromRawFourierData", "[", 
        RowBox[{
        "intensityArray", ",", "rev", ",", "alpha", ",", "beta0", ",", 
         "delta"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StokesParametersFromPolFileName", "[", 
     RowBox[{"polFileName_", ",", "alpha_", ",", "beta0_", ",", "delta_"}], 
     "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"intensityArray", ",", "f", ",", "rev"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "=", 
        RowBox[{"ImportFile", "[", "polFileName", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"intensityArray", "=", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rev", "=", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#REV:\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"StokesParametersFromPolFile", "[", 
        RowBox[{"f", ",", "alpha", ",", "beta0", ",", "delta", ",", "rev_"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetLinearPolarizationFraction", "[", "fileName_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "data", ",", "angle", ",", "intensityArray", ",", "angleRAD", ",", "fc",
        ",", "intensity", ",", "linearPolarization", ",", 
       "linearPolarizationFraction"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"GetFileDataset", "[", "fileName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intensityArray", "=", 
       RowBox[{
        RowBox[{"Transpose", "[", "data", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fc", "=", 
       RowBox[{"DFT", "[", 
        RowBox[{"intensityArray", ",", "1"}], "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{"fc", "=", 
        RowBox[{"fourier", " ", "coefficients"}]}], "*)"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intensity", "=", 
       RowBox[{
        RowBox[{"fc", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"linearPolarization", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"fc", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           RowBox[{"fc", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "2"]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"linearPolarizationFraction", "=", 
       RowBox[{"linearPolarization", "/", "intensity"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"GetLinearPolarizationFraction", ",", "Listable"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetAngle", "[", "fileName_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "data", ",", "intensityArray", ",", "angleRAD", ",", "fc", ",", 
       "intensity", ",", "linearPolarization", ",", 
       "linearPolarizationFraction"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"GetFileDataset", "[", "fileName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intensityArray", "=", 
       RowBox[{
        RowBox[{"Transpose", "[", "data", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fc", "=", 
       RowBox[{"DFT", "[", 
        RowBox[{"intensityArray", ",", "1"}], "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{"fc", "=", 
        RowBox[{"fourier", " ", "coefficients"}]}], "*)"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{".5", "*", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"fc", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fc", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"GetAngle", ",", "Listable"}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetAverageCountRateFromFileNames", "[", "fileNames_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "files", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"files", "=", 
        RowBox[{"ImportFile", "[", "fileNames", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"GetAverageCountRateFromFiles", "[", "files", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"See", " ", "Nate", " ", 
    RowBox[{"Clayburn", "'"}], "s", " ", "explanation", " ", "on", " ", 
    "Background", " ", "Subtraction", " ", 
    RowBox[{"p", ".", " ", "129"}], " ", 
    RowBox[{"eq", ".", " ", "93"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Returns", " ", "a", " ", "list", " ", "of", " ", "two", " ", 
    RowBox[{"items", ".", "\[IndentingNewLine]", "\t", "the"}], " ", "first", 
    " ", "item", " ", "is", " ", "a", " ", "list", " ", "of", " ", "the", " ",
     "intensity", " ", "reaching", " ", "the", " ", "PMT", " ", "at", " ", 
    "each", " ", "step", " ", "of", " ", "the", " ", 
    RowBox[{"polarimeter", ".", "\[IndentingNewLine]", "\t", "the"}], " ", 
    "second", " ", "item", " ", "is", " ", "the", " ", "standard", " ", 
    "deviation", " ", "of", " ", "these", " ", "counts"}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetAverageCountRateFromFiles", "[", "files_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "sum", ",", "counts", ",", "dwell", ",", "current", ",", 
        "nCycles", ",", "errorSum", ",", " ", "error", ",", "nDataPts", ",", 
        "j"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nDataPts", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"files", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sum", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"errorSum", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"sum", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"errorSum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"errorSum", ",", "0"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "files", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"counts", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"current", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<CURRENT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dwell", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#DWELL(s):\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"nCycles", "=", 
           RowBox[{"Length", "[", "files", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "nDataPts"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"sum", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{
                RowBox[{"counts", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "/", "nCycles"}], "/", 
               "dwell"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"errorSum", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{"counts", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["nCycles", "2"], "*", 
                 SuperscriptBox["dwell", "2"]}], ")"}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"errorSum", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"errorSum", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"sum", ",", "errorSum"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "GetCurrentNormalizedAverageCountRateFromFiles", "[", "files_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "t", ",", "scale", ",", "darkCountsRate", ",", "i", ",", "sum", ",", 
        "counts", ",", "dwell", ",", "current", ",", "nCycles", ",", 
        "errorSum", ",", " ", "error", ",", "nDataPts", ",", "j", ",", 
        "rev"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nDataPts", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"files", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#DATAPPR:\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"rev", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"files", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#REV:\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"This", " ", 
          RowBox[{"hasn", "'"}], "t", " ", "yet", " ", "been", " ", 
          "implemented", " ", "in", " ", "the", " ", "data", " ", 
          "collection", " ", 
          RowBox[{"files", ".", " ", "As"}], " ", "soon", " ", "as", " ", 
          "it", " ", "is"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"you", " ", "can", " ", "uncomment", " ", 
            RowBox[{"it", ".", "\[IndentingNewLine]", "scale"}]}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#SCALE:\>\"", "]"}]}], 
          ";"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"scale", "=", "6"}], ";", "\[IndentingNewLine]", 
       RowBox[{"darkCountsRate", "=", "10"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sum", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"errorSum", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"sum", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"errorSum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"errorSum", ",", "0"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "files", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"counts", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"current", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<CURRENT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dwell", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#DWELL(s):\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"nCycles", "=", 
           RowBox[{
            RowBox[{"Length", "[", "files", "]"}], "*", "rev"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"t", "=", 
           RowBox[{"dwell", "*", "nCycles"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "nDataPts"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"sum", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"counts", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "-", 
                  RowBox[{"darkCountsRate", "*", "dwell"}]}], ")"}], "/", 
                "t"}], "/", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"current", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "*", 
                 RowBox[{
                  RowBox[{"10", "^", 
                   RowBox[{"(", 
                    RowBox[{"-", "scale"}], ")"}]}], "/", 
                  RowBox[{"(", "1*^-9", ")"}]}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"errorSum", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"counts", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "-", 
                 RowBox[{"darkCountsRate", "*", "dwell"}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["t", "2"], "*", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"current", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "*", 
                    RowBox[{
                    RowBox[{"10", "^", 
                    RowBox[{"(", 
                    RowBox[{"-", "scale"}], ")"}]}], "/", 
                    RowBox[{"(", "1*^-9", ")"}]}]}], ")"}], "2"]}], ")"}]}]}],
              ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"errorSum", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"errorSum", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"sum", ",", "errorSum"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "GetCurrentNormalizedAverageCountRateFromFileNames", "[", "fileNames_", 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "filesPass", ",", "darkCountsRate", ",", "i", ",", "sum", ",", 
        "counts", ",", "dwell", ",", "current", ",", "nCycles", ",", 
        "errorSum", ",", " ", "error", ",", "nDataPts", ",", "j"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"filesPass", "=", 
        RowBox[{"ImportFile", "[", "fileNames", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
       "GetCurrentNormalizedAverageCountRateFromFiles", "[", "filesPass", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetCurrentNormalizedMolyCountRateFromFileNames", "[", 
     RowBox[{"fileNames_", ",", "darkCountsRate_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "files", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"files", "=", 
        RowBox[{"ImportFile", "[", "fileNames", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"GetCurrentNormalizedMolyCountRateFromFiles", "[", 
        RowBox[{"files", ",", "darkCountsRate"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetCurrentNormalizedMolyCountRateFromFiles", "[", 
     RowBox[{"files_", ",", "darkCountsRate_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "currentnA", ",", "i", ",", "sum", ",", "counts", ",", "dwell", ",", 
        "current", ",", "nCycles", ",", "errorSum", ",", " ", "error", ",", 
        "nDataPts", ",", "j", ",", "currentScale"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nDataPts", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"darkCountsRate", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sum", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"errorSum", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"sum", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"errorSum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"errorSum", ",", "0"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "files", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"currentScale", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#SCALE:\>\"", "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"counts", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"current", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<CURRENT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"currentnA", "=", 
           RowBox[{"current", "*", 
            RowBox[{
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"-", "currentScale"}], ")"}]}], "/", "nA"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dwell", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#DWELL(s):\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"nCycles", "=", 
           RowBox[{"Length", "[", "files", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "nDataPts"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"sum", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+=", 
              FractionBox[
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"counts", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "dwell"], "-", 
                 RowBox[{
                  RowBox[{"darkCountsRate", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ")"}], 
               RowBox[{"nCycles", "*", 
                RowBox[{"Abs", "[", 
                 RowBox[{"currentnA", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}]}]]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"errorSum", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{
                RowBox[{"counts", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["nCycles", "2"], "*", 
                  SuperscriptBox["dwell", "2"], "*", 
                  SuperscriptBox[
                   RowBox[{"currentnA", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "2"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{
                 RowBox[{"darkCountsRate", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["nCycles", "2"], "*", 
                  SuperscriptBox[
                   RowBox[{"currentnA", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "2"]}], ")"}]}]}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"errorSum", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"errorSum", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"sum", ",", "errorSum"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BackgroundRateCurrentNorm", "[", 
     RowBox[{"files_", ",", "darkCountsFiles_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "darkCountsRate", ",", "i", ",", "sum", ",", "counts", ",", "dwell", 
        ",", "current", ",", "nCycles", ",", "errorSum", ",", " ", "error", 
        ",", "nDataPts", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"darkCountsRate", "=", 
        RowBox[{
        "GetAverageCountRateFromFiles", "[", "darkCountsFiles", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"nDataPts", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"darkCountsRate", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sum", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"errorSum", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"sum", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"errorSum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"errorSum", ",", "0"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "files", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"counts", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"current", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<CURRENT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dwell", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#DWELL(s):\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"nCycles", "=", 
           RowBox[{"Length", "[", "files", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "nDataPts"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"sum", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"counts", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "/", "nCycles"}], "/", 
                 "dwell"}], "/", 
                RowBox[{"Abs", "[", 
                 RowBox[{"current", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"darkCountsRate", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "/", "nCycles"}], "/", 
                RowBox[{"Abs", "[", 
                 RowBox[{"current", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}]}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"errorSum", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{
                RowBox[{"counts", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["nCycles", "2"], "*", 
                  SuperscriptBox["dwell", "2"], "*", 
                  SuperscriptBox[
                   RowBox[{"current", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "2"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{
                 RowBox[{"darkCountsRate", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["nCycles", "2"], "*", 
                  SuperscriptBox[
                   RowBox[{"current", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "2"]}], ")"}]}]}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"errorSum", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"errorSum", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"sum", ",", "errorSum"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AverageSignalRateCurrentNorm", "[", 
     RowBox[{"files_", ",", "molyCountsRate_", ",", "darkCountsFiles_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "darkCountsRate", ",", "i", ",", "sum", ",", "counts", ",", "dwell", 
        ",", "current", ",", "nCycles", ",", "errorSum", ",", " ", "error", 
        ",", "nDataPts", ",", "rev", ",", "j"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"darkCountsRate", "=", 
        RowBox[{
        "GetAverageCountRateFromFiles", "[", "darkCountsFiles", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"nDataPts", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"darkCountsRate", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sum", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"errorSum", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"sum", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"errorSum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"errorSum", ",", "0"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "files", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"counts", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"current", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<CURRENT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dwell", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#DWELL(s):\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rev", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#REV:\>\"", "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"nCycles", "=", 
           RowBox[{"Length", "[", "files", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "nDataPts"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"sum", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"counts", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "/", "nCycles"}], "/", 
                  "rev"}], "/", "dwell"}], "/", 
                RowBox[{"Abs", "[", 
                 RowBox[{"current", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"darkCountsRate", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "/", "rev"}], "/", 
                 "nCycles"}], "/", 
                RowBox[{"Abs", "[", 
                 RowBox[{"current", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"molyCountsRate", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "/", "rev"}], "/", 
                "nCycles"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"errorSum", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{
                RowBox[{"counts", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["nCycles", "2"], "*", 
                  SuperscriptBox["dwell", "2"], "*", 
                  SuperscriptBox["rev", "2"], "*", 
                  SuperscriptBox[
                   RowBox[{"current", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "2"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{
                 RowBox[{"darkCountsRate", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["nCycles", "2"], "*", 
                  SuperscriptBox["rev", "2"], "*", 
                  SuperscriptBox[
                   RowBox[{"current", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "2"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{
                 RowBox[{"molyCountsRate", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["nCycles", "2"], "*", 
                  SuperscriptBox["rev", "2"]}], ")"}]}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"errorSum", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"errorSum", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"sum", ",", "errorSum"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SignalRateCurrentNormFromFiles", "[", 
    RowBox[{"file_", ",", "molyCountFiles_", ",", "darkCountsFiles_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "molyCountsRate", ",", "darkCountsRate", ",", "i", ",", "sum", ",", 
       "counts", ",", "dwell", ",", "current", ",", "nCycles", ",", 
       "errorSum", ",", " ", "error", ",", "nDataPts", ",", "j"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"darkCountsRate", "=", 
       RowBox[{
       "AverageGetAverageCountRateFromFiles", "[", "darkCountsFiles", "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"molyCountsRate", "=", 
       RowBox[{"AverageBackgroundRateCurrentNorm", "[", 
        RowBox[{"molyCountFiles", ",", "darkCountsFiles"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SignalRateCurrentNormFromRates", "[", 
       RowBox[{"file", ",", "molyCountFiles", ",", "darkCountsFiles"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SignalRateCurrentNormFromRates", "::", "usage"}], " ", "=", 
  "\"\<SignalRateCurrentNormFromRates takes three arguments. First, the file \
you wish to background subtract, second, the fourier data for the current \
dependent background, third, the fourier data for the current independent \
background.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SignalRateCurrentNormFromRates", "[", 
     RowBox[{"fileName_", ",", "molyCountsRate_", ",", "darkCountsRate_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "file", ",", "i", ",", "sum", ",", "counts", ",", "dwell", ",", 
        "current", ",", "nCycles", ",", "errorSum", ",", " ", "error", ",", 
        "nDataPts", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"file", "=", 
        RowBox[{"ImportFile", "[", "fileName", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"nDataPts", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{"file", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sum", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"errorSum", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"sum", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"errorSum", "=", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"errorSum", ",", "0"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"counts", "=", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"file", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"current", "=", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"file", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"All", ",", "\"\<CURRENT\>\""}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dwell", "=", 
        RowBox[{
         RowBox[{"file", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#DWELL(s):\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"nCycles", "=", 
        RowBox[{
         RowBox[{"file", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#REV:\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"mTorrHe", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"file", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#CVGauge(He)(Torr):\>\"",
           "]"}], "/", "mTorr"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"sum", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "+=", 
           FractionBox[
            RowBox[{
             FractionBox[
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{"counts", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "dwell"], "-", 
                RowBox[{
                 RowBox[{"darkCountsRate", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ")"}], 
              RowBox[{"Abs", "[", 
               RowBox[{"current", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}]], "-", 
             RowBox[{
              RowBox[{"molyCountsRate", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], 
            RowBox[{"nCycles", "*", "mTorrHe"}]]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"errorSum", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "+=", 
           RowBox[{
            RowBox[{
             RowBox[{"counts", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["nCycles", "2"], "*", 
               SuperscriptBox["dwell", "2"], "*", 
               SuperscriptBox[
                RowBox[{"current", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "2"], "*", 
               SuperscriptBox["mTorrHe", "2"]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{
               RowBox[{"darkCountsRate", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "2"], "/", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["nCycles", "2"], "*", 
               SuperscriptBox[
                RowBox[{"current", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "2"], "*", 
               SuperscriptBox["mTorrHe", "2"]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{
               RowBox[{"molyCountsRate", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "2"], "/", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["nCycles", "2"], "*", 
               SuperscriptBox["mTorrHe", "2"]}], ")"}]}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", "nDataPts"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"errorSum", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"errorSum", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"sum", ",", "errorSum"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CalculateOneFileStokes", "[", 
     RowBox[{
     "polFileName_", ",", "molyCountRate_", ",", "darkCountRate_", ",", 
      "alpha_", ",", "beta_", ",", "delta_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"signal", ",", "stokes", ",", "file", ",", "rev"}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"file", "=", 
        RowBox[{"ImportFile", "[", "polFileName", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rev", "=", 
        RowBox[{
         RowBox[{"file", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#REV:\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"signal", "=", 
        RowBox[{"SignalRateCurrentNormFromRates", "[", 
         RowBox[{"polFileName", ",", "molyCountRate", ",", "darkCountRate"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"StokesParametersFromRawFourierData", "[", 
        RowBox[{
         RowBox[{"signal", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "rev", ",", "alpha", ",", 
         "beta", ",", "delta"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AverageStokes", "[", "stokesVectors_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "transposedValues", ",", "stokes", ",", "stokesStdDev"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stokes", "=", 
        RowBox[{"stokesVectors", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"stokesStdDev", "=", "stokes"}], ";", "\[IndentingNewLine]", 
       RowBox[{"transposedValues", "=", 
        RowBox[{"Transpose", "[", "stokesVectors", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", 
           RowBox[{"stokesVectors", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"stokes", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"stokesNames", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "->", 
            RowBox[{"Mean", "[", 
             RowBox[{"transposedValues", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"stokesStdDev", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"stokesErrNames", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "->", 
            RowBox[{
             RowBox[{"StandardDeviation", "[", 
              RowBox[{"transposedValues", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"Length", "[", "transposedValues", "]"}], "]"}]}]}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Association", "[", "stokes", "]"}], ",", 
         RowBox[{"Association", "[", "stokesStdDev", "]"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateAverageStokesFromFilesAndCountRates", "[", 
    RowBox[{
    "polFileNames_", ",", "molyCountRate_", ",", "darkCountRate_", ",", 
     RowBox[{"alpha_:", "alpha"}], ",", 
     RowBox[{"beta_:", "beta"}], ",", 
     RowBox[{"delta_:", "delta"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "signal", ",", "stokes", ",", "stokesStdDev", ",", "file", ",", "rev", 
       ",", "j", ",", "stokesValues", ",", "transposedValues"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"stokes", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<p0\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<p1\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<p2\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<p3_mag\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<p3_c2\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<p3_s2\>\"", "->", "0"}]}], "|>"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stokesStdDev", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stokesValues", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", "polFileNames", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"stokes", "=", 
          RowBox[{"CalculateOneFileStokes", "[", 
           RowBox[{
            RowBox[{"polFileNames", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "molyCountRate", ",", 
            "darkCountRate", ",", "alpha", ",", "beta", ",", "delta"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stokesValues", ",", "stokes"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AverageStokes", "[", "stokesValues", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NormalizeStokes", "[", "stokesVector_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"intensity", ",", "newVector", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newVector", "=", "stokesVector"}], ";", "\[IndentingNewLine]", 
       RowBox[{"intensity", "=", 
        RowBox[{"stokesVector", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "2"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "stokesVector", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"newVector", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"stokesVector", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "/", "intensity"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "newVector"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UnNormalizeStokes", "[", "stokesVector_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"intensity", ",", "newVector", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newVector", "=", "stokesVector"}], ";", "\[IndentingNewLine]", 
       RowBox[{"intensity", "=", 
        RowBox[{"stokesVector", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "2"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "stokesVector", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"newVector", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"stokesVector", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", "intensity"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "newVector"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SubtractStokes", "[", 
     RowBox[{"addedStokes_", ",", "subtractedStokes_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"unNormAdd", ",", "unNormSub"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"unNormAdd", "=", 
        RowBox[{"UnNormalizeStokes", "[", "addedStokes", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"unNormSub", "=", 
        RowBox[{"UnNormalizeStokes", "[", "subtractedStokes", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"NormalizeStokes", "[", 
        RowBox[{"unNormAdd", "-", "unNormSub"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetIntensityArrayFromFileName", "[", "fileName_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f", ",", "intensityArray"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "=", 
        RowBox[{"ImportFile", "[", "fileName", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"intensityArray", "=", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<ANGLE\>\"", ",", "\"\<COUNT\>\""}], "}"}]}], "]"}], 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotRawPolFromFileName", "[", "fileName_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "intensityArray"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "=", 
       RowBox[{"ImportFile", "[", "fileName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intensityArray", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", "intensityArray", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"PlotRawPolFromFileName", ",", "Listable"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotListOfPolFileNames", "[", 
     RowBox[{"fileNames_", ",", 
      RowBox[{"plotRange_:", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"intensityArrays", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"intensityArrays", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "fileNames", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"intensityArrays", ",", 
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{"GetIntensityArrayFromFileName", "[", 
               RowBox[{"fileNames", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"fileNames", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"intensityArrays", ",", 
         RowBox[{"PlotRange", "\[Rule]", "plotRange"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetStokesFromFileNames", "[", 
    RowBox[{"fileNames_", ",", 
     RowBox[{"alpha_:", "alpha"}], ",", 
     RowBox[{"beta_:", "beta"}], ",", 
     RowBox[{"delta_:", "delta"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "stokes", ",", "signal", ",", "stokesData"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"stokesData", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"signal", "=", 
       RowBox[{"ImportFile", "[", "fileNames", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "fileNames", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"stokes", "=", 
          RowBox[{"StokesParametersFromPolFile", "[", 
           RowBox[{
            RowBox[{"signal", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "alpha", ",", "beta", ",", 
            "delta", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"signal", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#REV:\>\"", "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stokesData", ",", "stokes"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "stokesData"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "GetAverageFourierCoefficientsFromFileNames", "[", "fileNames", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "fc", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"fc", "=", 
       RowBox[{
       "GetFourierCoefficientsFromFileNames", "[", "fileNames", "]"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetFourierCoefficientsFromFileNames", "[", "fileNames_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "files", ",", "i", ",", "coefficientsList", ",", "intensityArray", ",",
         "revs"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"files", "=", 
        RowBox[{"ImportFile", "[", "fileNames", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"coefficientsList", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "files", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"revs", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"files", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<#REV:\>\"", "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"intensityArray", "=", 
           RowBox[{"Normal", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"files", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"All", ",", "\"\<COUNT\>\""}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"coefficientsList", ",", 
            RowBox[{"DFT", "[", 
             RowBox[{"intensityArray", ",", "revs"}], "]"}]}], "]"}], ";"}]}],
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "coefficientsList"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetAoutToEnergyModelFromExcitationFunctionTimeStamp", "[", 
     RowBox[{"excitationFileNames_", ",", "timeStamp_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "exFileIndex", ",", "exFile", ",", "aoutToElectronEnergyData", ",", 
        "x"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"exFileIndex", "=", 
        RowBox[{"GetIndexOfFilenameFromTimestamp", "[", 
         RowBox[{"excitationFileNames", ",", "timeStamp"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"exFile", "=", 
        RowBox[{"ImportFile", "[", 
         RowBox[{"excitationFileNames", "[", 
          RowBox[{"[", "exFileIndex", "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"aoutToElectronEnergyData", "=", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"exFile", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Aout\>\"", ",", "\"\<SecondaryElectronEnergy\>\""}],
              "}"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "Values"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearModelFit", "[", 
        RowBox[{"aoutToElectronEnergyData", ",", "x", ",", "x"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetListOfPropertiesFromHeadersOfListOfFileNames", "[", 
     RowBox[{"fileName_", ",", "property_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "=", 
        RowBox[{"ImportFile", "[", "fileName", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "property", "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{
    "GetListOfPropertiesFromHeadersOfListOfFileNames", ",", "Listable"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OrganizeFilesByCategories", "[", 
    RowBox[{
    "fileNames_", ",", "startFile_", ",", "category1_", ",", "category2_", 
     ",", "runs_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "allFiles", ",", "j", ",", "i", ",", "listOfNames", ",", "subsetFiles", 
       ",", "firstFile", ",", "lastFile", ",", "files"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"allFiles", "=", 
       RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"subsetFiles", "=", 
       RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"files", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "<=", 
         RowBox[{"Length", "[", "category1", "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "<=", 
            RowBox[{"Length", "[", "category2", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"firstFile", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"startFile", "-", "1"}], ")"}], "+", "i"}], ")"}], 
              "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"j", "-", "1"}], ")"}], "*", 
               RowBox[{"Length", "[", "category2", "]"}]}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"lastFile", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"startFile", "-", "1"}], ")"}], "+", "i", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", 
                 RowBox[{"Length", "[", "category2", "]"}]}]}], ")"}], "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "[", "category2", "]"}], "*", 
                RowBox[{"Length", "[", "category1", "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"runs", "-", "1"}], ")"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"listOfNames", "=", 
             RowBox[{"Take", "[", 
              RowBox[{"fileNames", ",", 
               RowBox[{"{", 
                RowBox[{"firstFile", ",", "lastFile", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "category1", "]"}], "*", 
                  RowBox[{"Length", "[", "category2", "]"}]}]}], "}"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"subsetFiles", ",", 
              RowBox[{
               RowBox[{"category2", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "listOfNames"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"files", ",", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<cat1\>\"", "\[Rule]", " ", 
                 RowBox[{"category1", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                RowBox[{"\"\<cat2\>\"", "\[Rule]", 
                 RowBox[{"category2", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{
                "\"\<fileNames\>\"", "\[Rule]", " ", "listOfNames"}]}], 
               "|>"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"allFiles", ",", 
           RowBox[{
            RowBox[{"category1", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "\[Rule]", "subsetFiles"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "allFiles", ";", "\[IndentingNewLine]", 
      "files"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7150122777567425`*^9, 3.7150122840119996`*^9}, {
   3.7150123261726923`*^9, 3.7150123303405285`*^9}, {3.7150124359734163`*^9, 
   3.715012479646136*^9}, {3.7150128069518833`*^9, 3.715012818751912*^9}, {
   3.7150129667449007`*^9, 3.7150129819452457`*^9}, {3.7150130364173155`*^9, 
   3.7150131715294724`*^9}, {3.7150133166513133`*^9, 
   3.7150133179692016`*^9}, {3.7150133480254803`*^9, 3.715013381257094*^9}, {
   3.715013414513726*^9, 3.715013414978044*^9}, {3.7150135356901937`*^9, 
   3.715013558972037*^9}, {3.7150136509316206`*^9, 3.7150136664751987`*^9}, {
   3.715013710956468*^9, 3.715013751796263*^9}, {3.7150138363427997`*^9, 
   3.715013845285886*^9}, {3.7150139033013687`*^9, 3.715013907556264*^9}, {
   3.7150146812816114`*^9, 3.7150146815527964`*^9}, {3.7150164533544197`*^9, 
   3.7150165176511755`*^9}, {3.7150165661391735`*^9, 3.715016634939995*^9}, {
   3.7150167998842473`*^9, 3.715016921549045*^9}, {3.7150169518296175`*^9, 
   3.715016979725424*^9}, {3.7150170467736287`*^9, 3.715017105548256*^9}, {
   3.7150948951139283`*^9, 3.715094911169752*^9}, {3.7150953668023195`*^9, 
   3.7150953669304056`*^9}, {3.71509547147389*^9, 3.7150954720903053`*^9}, {
   3.7182251437153063`*^9, 3.7182251496754575`*^9}, {3.718357112618618*^9, 
   3.718357131721839*^9}, {3.718358280651499*^9, 3.718358291571581*^9}, {
   3.7183587752690325`*^9, 3.7183588555331583`*^9}, {3.718536357841588*^9, 
   3.718536366223791*^9}, 3.7185374424102783`*^9, {3.718537487264779*^9, 
   3.7185375048093243`*^9}, {3.7186257944026575`*^9, 
   3.7186258398480296`*^9}, {3.7186260420988913`*^9, 
   3.7186260462573795`*^9}, {3.7186261747312527`*^9, 3.718626238675158*^9}, {
   3.7186262981771984`*^9, 3.7186263020087233`*^9}, {3.7186278687087107`*^9, 
   3.7186278869409957`*^9}, {3.71862988018147*^9, 3.7186299331641417`*^9}, {
   3.718629966259931*^9, 3.718630023020313*^9}, {3.7186301098601665`*^9, 
   3.718630121956868*^9}, {3.7186301534850197`*^9, 3.718630230116749*^9}, {
   3.718630275405334*^9, 3.7186303079177303`*^9}, {3.718630630682119*^9, 
   3.7186306604797077`*^9}, {3.7186364645717545`*^9, 3.718636503828915*^9}, {
   3.7186369941469374`*^9, 3.718636999178377*^9}, {3.718637181270069*^9, 
   3.71863722120669*^9}, {3.718637286656125*^9, 3.7186373487418346`*^9}, {
   3.718637434364954*^9, 3.718637436037042*^9}, {3.718638333077673*^9, 
   3.718638584590866*^9}, {3.71863862427777*^9, 3.7186386291094046`*^9}, {
   3.71863870442287*^9, 3.71863881646154*^9}, {3.7186389757345586`*^9, 
   3.7186390898551702`*^9}, {3.7186391549751325`*^9, 3.718639293623472*^9}, 
   3.7186404883858066`*^9, 3.718807283599803*^9, {3.7191687952426605`*^9, 
   3.7191688118469987`*^9}, {3.719169330880847*^9, 3.719169333246519*^9}, {
   3.719170978878663*^9, 3.7191709811972003`*^9}, {3.7191729754777555`*^9, 
   3.7191729786428833`*^9}, {3.7196569306100197`*^9, 
   3.7196569392326803`*^9}, {3.7196572119282494`*^9, 
   3.7196572614849744`*^9}, {3.719657310984816*^9, 3.719657501219633*^9}, {
   3.719658535931945*^9, 3.719658567669435*^9}, {3.71965861104198*^9, 
   3.719658627514229*^9}, {3.719658702207617*^9, 3.719658799854063*^9}, {
   3.7196588327302527`*^9, 3.719658851107474*^9}, {3.7196610864587636`*^9, 
   3.7196611054034476`*^9}, {3.7196612437227564`*^9, 
   3.7196612673185477`*^9}, {3.7196614702365026`*^9, 3.719661470392771*^9}, {
   3.719661538263246*^9, 3.7196615606819563`*^9}, {3.7196618404470344`*^9, 
   3.719661841704336*^9}, {3.7196789731842527`*^9, 3.719678973512398*^9}, {
   3.7196793636437483`*^9, 3.7196793881766105`*^9}, {3.7196794399548683`*^9, 
   3.7196795993682504`*^9}, 3.7196799412181425`*^9, {3.71968023671253*^9, 
   3.7196802495057297`*^9}, {3.719680321044595*^9, 3.719680328750995*^9}, {
   3.7196804173552775`*^9, 3.719680490007141*^9}, {3.7196805200927167`*^9, 
   3.7196805555805473`*^9}, {3.724130705254901*^9, 3.7241307146366367`*^9}, {
   3.7241372564314623`*^9, 3.7241372756174006`*^9}, {3.7241381200124474`*^9, 
   3.724138425009313*^9}, {3.7241385096518908`*^9, 3.724138552419983*^9}, {
   3.725156692096414*^9, 3.725156721320167*^9}, {3.725159952383012*^9, 
   3.725159988483403*^9}, {3.725361270093484*^9, 3.7253612771723337`*^9}, {
   3.725361363764244*^9, 3.7253614655214157`*^9}, {3.725361505754155*^9, 
   3.725361506289722*^9}, {3.725361567131859*^9, 3.7253615732602158`*^9}, {
   3.725361643589486*^9, 3.725361654609209*^9}, {3.725369678054991*^9, 
   3.72536968084339*^9}, {3.725373175650379*^9, 3.725373193421525*^9}, {
   3.725373498119879*^9, 3.725373504135483*^9}, {3.7253735425872726`*^9, 
   3.725373578307466*^9}, {3.7253736927301598`*^9, 3.7253737052914333`*^9}, {
   3.725376994575294*^9, 3.725376997207756*^9}, {3.7253770297724237`*^9, 
   3.725377066082608*^9}, {3.725377099093182*^9, 3.72537710687241*^9}, {
   3.725377171602428*^9, 3.7253772512706747`*^9}, {3.725377377184339*^9, 
   3.725377409370453*^9}, {3.7256251652411504`*^9, 3.725625205568283*^9}, {
   3.7256252679379168`*^9, 3.7256253697225947`*^9}, {3.7256254652986746`*^9, 
   3.7256254785785613`*^9}, {3.725625844980381*^9, 3.725625913606907*^9}, {
   3.7256259497507286`*^9, 3.725625950398236*^9}, {3.7256259817089944`*^9, 
   3.725626067046221*^9}, {3.725626129622053*^9, 3.7256262146059203`*^9}, {
   3.72562705154838*^9, 3.72562705453741*^9}, {3.725627190763912*^9, 
   3.7256272018184195`*^9}, {3.725627234348508*^9, 3.725627250515486*^9}, {
   3.725627402888579*^9, 3.725627462874071*^9}, {3.7256275384813685`*^9, 
   3.725627555075847*^9}, {3.725627640656625*^9, 3.725627720497345*^9}, {
   3.725628164261633*^9, 3.7256281792290783`*^9}, {3.7256282716709747`*^9, 
   3.725628281954458*^9}, {3.7256286265938253`*^9, 3.725628632137954*^9}, {
   3.7256286725563016`*^9, 3.7256286743813114`*^9}, {3.725628760035572*^9, 
   3.7256287921460037`*^9}, {3.725628822674121*^9, 3.725628838850105*^9}, 
   3.725628899829816*^9, {3.7256291156997876`*^9, 3.725629293713046*^9}, {
   3.7256534541614637`*^9, 3.7256534831451454`*^9}, {3.72565353032218*^9, 
   3.725653596394046*^9}, {3.7257109887492657`*^9, 3.725711196993899*^9}, {
   3.7257140714859676`*^9, 3.7257140717258635`*^9}, {3.725717151594884*^9, 
   3.7257172317713795`*^9}, {3.7257173764473825`*^9, 
   3.7257175396648684`*^9}, {3.7257175820917087`*^9, 
   3.7257175937052307`*^9}, {3.725717696040263*^9, 3.7257177279194756`*^9}, {
   3.7257178257631865`*^9, 3.7257178587527947`*^9}, {3.7257179924131985`*^9, 
   3.7257180274453225`*^9}, {3.725718067723214*^9, 3.725718156657661*^9}, {
   3.7257191784623833`*^9, 3.725719327703453*^9}, {3.725719386963732*^9, 
   3.725719414542586*^9}, {3.725719446962509*^9, 3.7257194938065825`*^9}, {
   3.725719556985587*^9, 3.7257195826474543`*^9}, {3.725721222913952*^9, 
   3.725721242126998*^9}, {3.7257213470249147`*^9, 3.7257214179935255`*^9}, {
   3.725721541506644*^9, 3.725721573184244*^9}, {3.725721717036337*^9, 
   3.7257217171847057`*^9}, {3.7257217533393946`*^9, 
   3.7257217540971484`*^9}, {3.725721988979336*^9, 3.725721995970769*^9}, {
   3.7257220286609793`*^9, 3.7257220416124573`*^9}, {3.725722209295404*^9, 
   3.725722258205493*^9}, {3.7257224084087915`*^9, 3.7257224438933535`*^9}, {
   3.725722526557171*^9, 3.725722575285695*^9}, 3.7257226127660513`*^9, {
   3.7257265283385525`*^9, 3.7257266161690826`*^9}, {3.725726657021805*^9, 
   3.725726674731352*^9}, {3.725726759965147*^9, 3.7257267638428216`*^9}, {
   3.7257268223662567`*^9, 3.7257268329598136`*^9}, {3.7257270049792385`*^9, 
   3.725727134495313*^9}, {3.725727759614582*^9, 3.72572781168793*^9}, {
   3.7257284281936626`*^9, 3.725728452632845*^9}, 3.7257285556833563`*^9, {
   3.725729234306243*^9, 3.7257292344813476`*^9}, {3.7257294242080917`*^9, 
   3.7257294245753746`*^9}, {3.7257296875582137`*^9, 
   3.7257297222772284`*^9}, {3.725730360788712*^9, 3.725730469717002*^9}, {
   3.7257340807293367`*^9, 3.725734083536483*^9}, {3.7257346865086255`*^9, 
   3.725734686740314*^9}, {3.725762666521338*^9, 3.72576266706021*^9}, {
   3.725762913156508*^9, 3.725762918314403*^9}, {3.725763112138493*^9, 
   3.725763150476066*^9}, {3.725763217356783*^9, 3.725763218727353*^9}, {
   3.725763434592802*^9, 3.725763435492338*^9}, {3.7257640284964533`*^9, 
   3.725764060536249*^9}, {3.725764194367964*^9, 3.72576442299879*^9}, {
   3.725764510840143*^9, 3.7257645620459843`*^9}, {3.725764942636063*^9, 
   3.725765010443756*^9}, {3.725765066611475*^9, 3.725765075427355*^9}, 
   3.725765126244788*^9, {3.725765763277134*^9, 3.725765831229218*^9}, {
   3.72576586831892*^9, 3.725765877344068*^9}, {3.725765915520934*^9, 
   3.7257659157182417`*^9}, {3.7258031745049324`*^9, 3.725803278553584*^9}, {
   3.7258034122573833`*^9, 3.7258034299153647`*^9}, {3.7259744143014827`*^9, 
   3.7259745357589564`*^9}, {3.7259809693432035`*^9, 3.725980994615141*^9}, {
   3.7259810704882226`*^9, 3.7259811145679626`*^9}, {3.7259814803929977`*^9, 
   3.7259814939598646`*^9}, {3.725981550987812*^9, 3.7259815530522237`*^9}, {
   3.7259815954364395`*^9, 3.7259816304324822`*^9}, {3.7259816753828783`*^9, 
   3.7259818058417687`*^9}, 3.725981886192144*^9, {3.725981918105219*^9, 
   3.725981934382265*^9}, {3.726316867110964*^9, 3.726316922175006*^9}, {
   3.726316960993117*^9, 3.726316963380725*^9}, {3.726343523601181*^9, 
   3.7263437280347214`*^9}, {3.726343940624771*^9, 3.7263439578110747`*^9}, {
   3.7263455273297377`*^9, 3.726345561001912*^9}, {3.7263456562440677`*^9, 
   3.72634581996395*^9}, {3.7264037973680367`*^9, 3.7264038944089317`*^9}, {
   3.726577111566964*^9, 3.7265771516462793`*^9}, {3.726577263786563*^9, 
   3.726577301478941*^9}, {3.7265773474356527`*^9, 3.7265773881415906`*^9}, {
   3.7265775451149254`*^9, 3.726577547792158*^9}, {3.7265776687541747`*^9, 
   3.726577670392644*^9}, {3.726577763865817*^9, 3.7265777643613853`*^9}, {
   3.7265997824115515`*^9, 3.726599997845849*^9}, 3.7266017447625885`*^9, {
   3.726602074155616*^9, 3.726602155851307*^9}, {3.7266023175858507`*^9, 
   3.7266025001040025`*^9}, {3.726614915265176*^9, 3.726614938695759*^9}, {
   3.7266212407424555`*^9, 3.7266212424095345`*^9}, {3.726622643323842*^9, 
   3.7266227251671915`*^9}, {3.7266228762160873`*^9, 
   3.7266229468771906`*^9}, {3.7266230326897397`*^9, 3.726623055897396*^9}, 
   3.726623163746276*^9, {3.726623360412195*^9, 3.7266233777077055`*^9}, {
   3.7266241380598555`*^9, 3.7266241684342895`*^9}, {3.7266243046719265`*^9, 
   3.726624305319645*^9}, {3.7266735211691113`*^9, 3.726673562847148*^9}, {
   3.7266757991479406`*^9, 3.7266758006208916`*^9}, {3.726683842601447*^9, 
   3.7266838508082*^9}, {3.7266838970760164`*^9, 3.726683922165495*^9}, {
   3.7266839648202705`*^9, 3.7266841790255375`*^9}, {3.726685954043635*^9, 
   3.7266859550744886`*^9}, {3.7268327196640964`*^9, 3.726832726727*^9}, {
   3.728042390758366*^9, 3.728042424088662*^9}, {3.728042647874691*^9, 
   3.728042790039465*^9}, {3.728042826932293*^9, 3.728042840136204*^9}, {
   3.728042891967393*^9, 3.7280429045931396`*^9}, {3.728043429134473*^9, 
   3.7280434363746047`*^9}, {3.728043471730895*^9, 3.7280434719281435`*^9}, {
   3.7280437401867757`*^9, 3.7280438633287516`*^9}, {3.7280440612352734`*^9, 
   3.7280442033350954`*^9}, {3.7280442511361685`*^9, 3.728044254638239*^9}, {
   3.728044337285161*^9, 3.728044340940213*^9}, {3.7280443994062986`*^9, 
   3.728044420907921*^9}, {3.7280524334908504`*^9, 3.7280524569141173`*^9}, {
   3.728052598828785*^9, 3.7280527243675003`*^9}, {3.728052857474166*^9, 
   3.7280528578335648`*^9}, {3.728089004864294*^9, 3.728089009239246*^9}, {
   3.7284813733587894`*^9, 
   3.728481374015078*^9}},ExpressionUUID->"b4a694ff-3028-4385-b5fd-\
a5489c990dc9"],

Cell[BoxData["\<\"SignalRateCurrentNormFromRates takes three arguments. \
First, the file you wish to background subtract, second, the fourier data for \
the current dependent background, third, the fourier data for the current \
independent background.\"\>"], "Output",
 CellChangeTimes->{
  3.7265771542620225`*^9, 3.7265773024720097`*^9, 3.726577399394928*^9, 
   3.7265775586639123`*^9, 3.7265776810573635`*^9, 3.726577765143483*^9, {
   3.7265988126157403`*^9, 3.7265988468184233`*^9}, 3.726598954566128*^9, 
   3.7266025255292487`*^9, 3.72661494077299*^9, 3.7266185967573776`*^9, 
   3.726622741707156*^9, 3.7266230579216747`*^9, 3.726623379055909*^9, 
   3.7266241696084876`*^9, 3.726624307405229*^9, 3.726626696015239*^9, 
   3.7266267360644655`*^9, 3.7266721972269373`*^9, 3.72667352488161*^9, 
   3.7266735634085264`*^9, 3.726675801485816*^9, 3.726684015647333*^9, 
   3.726684204370534*^9, 3.7266859642716503`*^9, 3.7268320649643283`*^9, 
   3.726832727461419*^9, 3.7277147266027236`*^9, 3.7279769224813285`*^9, 
   3.727983363995476*^9, 3.728042361834589*^9, 3.7280424301359367`*^9, {
   3.7280427339579945`*^9, 3.72804275600618*^9}, 3.728042792633358*^9, 
   3.7280428410581107`*^9, 3.72804291492188*^9, 3.728043441613496*^9, 
   3.728043472883445*^9, 3.7280437975017033`*^9, 3.7280438641256866`*^9, 
   3.7280441700823464`*^9, 3.7280442039654264`*^9, 3.728044255857326*^9, 
   3.728044342732273*^9, 3.728044421676953*^9, 3.728052457586011*^9, 
   3.7280525999538527`*^9, 3.728052742431077*^9, 3.7280678344494762`*^9, 
   3.7280887519945507`*^9, 3.728089013146883*^9, 3.7280955286809397`*^9, 
   3.728095745431746*^9, 3.7281263323174458`*^9, 3.728478906896641*^9, 
   3.7284813790622315`*^9},ExpressionUUID->"13d1e149-a8ee-47b7-be0c-\
4d4ef48254c5"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 857},
WindowMargins->{{1272, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3665, 69, 143, "Input",ExpressionUUID->"1e2ff1f4-ed4c-4b54-8d56-ca8e4299b261"],
Cell[4248, 93, 5654, 96, 275, "Output",ExpressionUUID->"e84fb1be-7abd-40d9-b973-2d4bbb179050"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9939, 194, 5257, 82, 67, "Input",ExpressionUUID->"e91a80f3-fca7-4ecb-a414-423876b73221"],
Cell[15199, 278, 3586, 72, 147, "Output",ExpressionUUID->"2e32edb5-cfc4-4331-af19-8a3c08f18c21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18822, 355, 30711, 532, 1017, "Input",ExpressionUUID->"dc64756a-c29c-4c99-8e69-43cd92e012cb"],
Cell[49536, 889, 1079, 16, 32, "Output",ExpressionUUID->"5a448c11-541b-4c82-96bc-1175a3b31ac5"],
Cell[50618, 907, 1056, 16, 32, "Output",ExpressionUUID->"97d4e6c9-713a-4016-9d52-f9bf355b8520"],
Cell[CellGroupData[{
Cell[51699, 927, 1063, 16, 22, "Print",ExpressionUUID->"d0ab8a73-41c3-4be2-a737-f011d4b723b6"],
Cell[52765, 945, 1061, 16, 22, "Print",ExpressionUUID->"164d1575-7ed9-49aa-bf92-4f8d12e21b68"],
Cell[53829, 963, 1061, 16, 22, "Print",ExpressionUUID->"6d4763ee-2d49-40dc-a53e-ff7dae9c9819"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54939, 985, 230, 5, 67, "Section",ExpressionUUID->"61c9b55e-9fb3-4aee-9358-3501c790fb73"],
Cell[CellGroupData[{
Cell[55194, 994, 8359, 189, 485, "Input",ExpressionUUID->"53786458-042d-44e4-a061-d19075d58a87"],
Cell[63556, 1185, 125166, 2593, 1234, "Output",ExpressionUUID->"3b219859-2ccf-4ec4-af83-31c1fe6afbc6"]
}, Open  ]],
Cell[188737, 3781, 179, 3, 28, "Input",ExpressionUUID->"5970d484-4bb3-4658-bce0-e107cbaff34a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188953, 3789, 223, 5, 67, "Section",ExpressionUUID->"febb384b-7618-4a55-8fc6-f1ae3cb81387"],
Cell[CellGroupData[{
Cell[189201, 3798, 5918, 143, 504, "Input",ExpressionUUID->"59631229-721d-4469-8c80-8113885ed85d"],
Cell[195122, 3943, 20718, 454, 1304, "Output",ExpressionUUID->"b8ffc5f7-24c4-4b95-b933-0c3d6af2185e"],
Cell[215843, 4399, 5926, 152, 128, "Output",ExpressionUUID->"e78bda7c-99d6-4f2a-ae0e-24728b080602"],
Cell[221772, 4553, 720, 10, 32, "Output",ExpressionUUID->"ef5fd58d-627c-4655-a88f-a03154cef643"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222529, 4568, 417, 7, 28, "Input",ExpressionUUID->"2ca4ce3d-0e68-4a71-8076-c3d0ee8fa2df"],
Cell[222949, 4577, 363, 8, 32, "Output",ExpressionUUID->"d58496a7-9984-4548-aa59-731f3a30483d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[223361, 4591, 185, 3, 67, "Section",ExpressionUUID->"818dc8be-22f6-4596-b17b-220fbe52261e"],
Cell[223549, 4596, 5322, 135, 428, "Input",ExpressionUUID->"e2f7e925-7e8c-4dc6-b0ee-76980b6aa8f4"],
Cell[228874, 4733, 131, 3, 28, "Input",ExpressionUUID->"31b5c95d-3f23-45b3-8577-4b291f48b9cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229042, 4741, 274, 6, 67, "Section",ExpressionUUID->"7c202aa5-5826-40bc-bd91-1607b9b94687"],
Cell[CellGroupData[{
Cell[229341, 4751, 7251, 152, 466, "Input",ExpressionUUID->"82f26dd7-558f-4e31-959d-1be92c87a42d"],
Cell[236595, 4905, 239411, 5166, 1252, "Output",ExpressionUUID->"18395bc5-2124-4bad-81fe-7174c6e9031b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476055, 10077, 178, 3, 67, "Section",ExpressionUUID->"8a253907-04d7-47ce-95d6-225bb086d3ca"],
Cell[CellGroupData[{
Cell[476258, 10084, 2955, 69, 219, "Input",ExpressionUUID->"c730482f-060b-434f-9560-702824d88bee"],
Cell[CellGroupData[{
Cell[479238, 10157, 396, 6, 22, "Print",ExpressionUUID->"8930acfb-3cf9-4bbf-8fe1-fb6f22b0c27f"],
Cell[479637, 10165, 118405, 1946, 289, 31509, 521, "CachedBoxData", "BoxData", "Print",ExpressionUUID->"07471b03-d371-44cf-bb09-ae9b48c4dca3"],
Cell[598045, 12113, 3076, 72, 362, "Print",ExpressionUUID->"c3f87bf6-d684-49f1-8e5f-749319b56450"],
Cell[601124, 12187, 398, 6, 22, "Print",ExpressionUUID->"09ee217b-45a0-42e1-84ee-da0be290346b"],
Cell[601525, 12195, 33292, 551, 289, "Print",ExpressionUUID->"4a59c839-2715-4b4a-8f1a-20ba89f8e867"],
Cell[634820, 12748, 3093, 73, 362, "Print",ExpressionUUID->"2b9dac4c-b22a-476b-95e3-54e3df0528e7"],
Cell[637916, 12823, 395, 6, 22, "Print",ExpressionUUID->"17cc1e6a-4a18-4d68-8952-27875688f49c"],
Cell[638314, 12831, 33739, 558, 289, "Print",ExpressionUUID->"9017f357-1ba3-436a-9b84-3c93b540ffc7"],
Cell[672056, 13391, 3104, 72, 362, "Print",ExpressionUUID->"418fc6bc-51a6-4fdf-a602-83d6b4dae8e0"],
Cell[675163, 13465, 398, 6, 22, "Print",ExpressionUUID->"cacf7f3b-e727-4770-a41d-3020f40e097a"],
Cell[675564, 13473, 33192, 549, 289, "Print",ExpressionUUID->"8703180a-4f0b-4e54-80a7-29d9a61c7336"],
Cell[708759, 14024, 3094, 72, 362, "Print",ExpressionUUID->"4002e85d-5ead-4af2-a051-d75305ec83e9"],
Cell[711856, 14098, 396, 6, 22, "Print",ExpressionUUID->"9617c87d-6a5f-4f3c-8d7d-f0efc688a085"],
Cell[712255, 14106, 32236, 533, 289, "Print",ExpressionUUID->"074f18ba-08e4-44f0-9b47-b405f438eb6d"],
Cell[744494, 14641, 3133, 73, 362, "Print",ExpressionUUID->"0014ffca-420b-4834-9bea-d23b4b3decb1"],
Cell[747630, 14716, 396, 6, 22, "Print",ExpressionUUID->"43724e83-b075-4287-9c7b-f94c9f61dc3a"],
Cell[748029, 14724, 34438, 569, 289, "Print",ExpressionUUID->"d443a5e3-831b-4685-bb5f-77b4c7705641"],
Cell[782470, 15295, 3125, 73, 368, "Print",ExpressionUUID->"a4f6893a-8bbd-4b9a-9da5-bb9d1a6064be"],
Cell[785598, 15370, 398, 6, 22, "Print",ExpressionUUID->"1cd585f6-26b4-4630-ab9e-f284d58d0088"],
Cell[785999, 15378, 35451, 586, 289, "Print",ExpressionUUID->"f9b2b6b4-5fc2-4fe3-9bd4-f66eb3d4b819"],
Cell[821453, 15966, 3111, 73, 368, "Print",ExpressionUUID->"e020fcdc-6462-4e8d-80d7-cb69eddfb242"],
Cell[824567, 16041, 396, 6, 22, "Print",ExpressionUUID->"c3bdb9e9-7ed2-4925-8542-e5b0383cf14f"],
Cell[824966, 16049, 34148, 565, 289, "Print",ExpressionUUID->"190e3e8a-9bcb-45bc-bead-068f8f50a490"],
Cell[859117, 16616, 3101, 73, 368, "Print",ExpressionUUID->"266ca6a3-6795-48ab-bd1d-6a0cefd50067"],
Cell[862221, 16691, 398, 6, 22, "Print",ExpressionUUID->"e5e5cbf1-3381-4332-b16f-b911a11b2773"],
Cell[862622, 16699, 36401, 602, 297, "Print",ExpressionUUID->"69b45519-1e24-4864-b725-f58a40f4733f"],
Cell[899026, 17303, 2948, 71, 374, "Print",ExpressionUUID->"58ab9be5-034d-4a18-9d50-b515c73db44a"],
Cell[901977, 17376, 395, 6, 22, "Print",ExpressionUUID->"53cbbfd7-9b3f-407e-8ec1-1d2e996a3e68"],
Cell[902375, 17384, 35459, 586, 294, "Print",ExpressionUUID->"9e99ed4d-4ad0-474d-bdc0-82ef0adb4ed0"],
Cell[937837, 17972, 2898, 69, 374, "Print",ExpressionUUID->"58148fd3-f25b-4d97-bd77-e677d1311b7d"],
Cell[940738, 18043, 395, 6, 22, "Print",ExpressionUUID->"0a8e5b3a-087a-44af-9041-560fc205d227"],
Cell[941136, 18051, 36380, 601, 294, "Print",ExpressionUUID->"2c3f756d-4b55-4370-805b-f41bef34fd0b"],
Cell[977519, 18654, 2972, 71, 374, "Print",ExpressionUUID->"f10d3fd1-f9ba-4dde-a316-95312c2e53e7"],
Cell[980494, 18727, 395, 6, 22, "Print",ExpressionUUID->"18e9c282-724d-4ab5-b0e2-9646e8f1eca5"],
Cell[980892, 18735, 37023, 612, 294, "Print",ExpressionUUID->"488337c8-8267-4883-93ec-c2d47c3e707d"],
Cell[1017918, 19349, 2923, 71, 374, "Print",ExpressionUUID->"5df289e1-fe1b-4b2b-9c2b-bae2f67a061f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1020902, 19427, 262, 4, 67, "Section",ExpressionUUID->"ebaf347c-5e30-4607-a606-77b875b52f2f"],
Cell[1021167, 19433, 23528, 558, 1436, "Input",ExpressionUUID->"51edf456-7627-4835-9398-436572c52737"],
Cell[CellGroupData[{
Cell[1044720, 19995, 120441, 2853, 10093, "Input",ExpressionUUID->"b4a694ff-3028-4385-b5fd-a5489c990dc9",
 InitializationCell->True],
Cell[1165164, 22850, 1762, 25, 52, "Output",ExpressionUUID->"13d1e149-a8ee-47b7-be0c-4d4ef48254c5"]
}, Open  ]]
}, Open  ]]
}
]
*)

